<?xml version="1.0" encoding="UTF-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral"/>
  <data name="buttonOK.Location" type="System.Drawing.Point, System.Drawing">
    <value>389, 385</value>
  </data>
  <data name="buttonOK.Size" type="System.Drawing.Size, System.Drawing">
    <value>75, 24</value>
  </data>
  <assembly alias="mscorlib" name="mscorlib, Version=2.0.0.0, Culture=neutral"/>
  <data name="buttonOK.TabIndex" type="System.Int32, mscorlib">
    <value>0</value>
  </data>
  <data name="buttonOK.Text" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="&gt;&gt;buttonOK.Name" xml:space="preserve">
    <value>buttonOK</value>
  </data>
  <data name="&gt;&gt;buttonOK.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;buttonOK.ZOrder" xml:space="preserve">
    <value>24</value>
  </data>
  <data name="buttonCancel.Location" type="System.Drawing.Point, System.Drawing">
    <value>478, 385</value>
  </data>
  <data name="buttonCancel.Size" type="System.Drawing.Size, System.Drawing">
    <value>75, 24</value>
  </data>
  <data name="buttonCancel.TabIndex" type="System.Int32, mscorlib">
    <value>1</value>
  </data>
  <data name="buttonCancel.Text" xml:space="preserve">
    <value>Annuleren</value>
  </data>
  <data name="&gt;&gt;buttonCancel.Name" xml:space="preserve">
    <value>buttonCancel</value>
  </data>
  <data name="&gt;&gt;buttonCancel.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;buttonCancel.ZOrder" xml:space="preserve">
    <value>23</value>
  </data>
  <data name="expressionEdit.Location" type="System.Drawing.Point, System.Drawing">
    <value>8, 8</value>
  </data>
  <data name="expressionEdit.Size" type="System.Drawing.Size, System.Drawing">
    <value>550, 116</value>
  </data>
  <data name="expressionEdit.TabIndex" type="System.Int32, mscorlib">
    <value>2</value>
  </data>
  <data name="&gt;&gt;expressionEdit.Name" xml:space="preserve">
    <value>expressionEdit</value>
  </data>
  <data name="&gt;&gt;expressionEdit.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;expressionEdit.ZOrder" xml:space="preserve">
    <value>21</value>
  </data>
  <data name="labelControl1.Location" type="System.Drawing.Point, System.Drawing">
    <value>235, 134</value>
  </data>
  <data name="labelControl1.Size" type="System.Drawing.Size, System.Drawing">
    <value>2, 24</value>
  </data>
  <data name="labelControl1.TabIndex" type="System.Int32, mscorlib">
    <value>7</value>
  </data>
  <data name="&gt;&gt;labelControl1.Name" xml:space="preserve">
    <value>labelControl1</value>
  </data>
  <data name="&gt;&gt;labelControl1.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;labelControl1.ZOrder" xml:space="preserve">
    <value>16</value>
  </data>
  <data name="labelControl2.Location" type="System.Drawing.Point, System.Drawing">
    <value>444, 134</value>
  </data>
  <data name="labelControl2.Size" type="System.Drawing.Size, System.Drawing">
    <value>2, 24</value>
  </data>
  <data name="labelControl2.TabIndex" type="System.Int32, mscorlib">
    <value>14</value>
  </data>
  <data name="&gt;&gt;labelControl2.Name" xml:space="preserve">
    <value>labelControl2</value>
  </data>
  <data name="&gt;&gt;labelControl2.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;labelControl2.ZOrder" xml:space="preserve">
    <value>9</value>
  </data>
  <data name="labelControl3.Location" type="System.Drawing.Point, System.Drawing">
    <value>0, 364</value>
  </data>
  <data name="labelControl3.Size" type="System.Drawing.Size, System.Drawing">
    <value>566, 10</value>
  </data>
  <data name="labelControl3.TabIndex" type="System.Int32, mscorlib">
    <value>18</value>
  </data>
  <data name="&gt;&gt;labelControl3.Name" xml:space="preserve">
    <value>labelControl3</value>
  </data>
  <data name="&gt;&gt;labelControl3.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;labelControl3.ZOrder" xml:space="preserve">
    <value>5</value>
  </data>
  <data name="descriptionControl.Location" type="System.Drawing.Point, System.Drawing">
    <value>380, 168</value>
  </data>
  <data name="descriptionControl.Size" type="System.Drawing.Size, System.Drawing">
    <value>178, 194</value>
  </data>
  <data name="descriptionControl.TabIndex" type="System.Int32, mscorlib">
    <value>19</value>
  </data>
  <data name="&gt;&gt;descriptionControl.Name" xml:space="preserve">
    <value>descriptionControl</value>
  </data>
  <data name="&gt;&gt;descriptionControl.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;descriptionControl.ZOrder" xml:space="preserve">
    <value>4</value>
  </data>
  <data name="listOfInputTypes.Location" type="System.Drawing.Point, System.Drawing">
    <value>8, 168</value>
  </data>
  <data name="listOfInputTypes.Size" type="System.Drawing.Size, System.Drawing">
    <value>178, 194</value>
  </data>
  <data name="listOfInputTypes.TabIndex" type="System.Int32, mscorlib">
    <value>20</value>
  </data>
  <data name="&gt;&gt;listOfInputTypes.Name" xml:space="preserve">
    <value>listOfInputTypes</value>
  </data>
  <data name="&gt;&gt;listOfInputTypes.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;listOfInputTypes.ZOrder" xml:space="preserve">
    <value>3</value>
  </data>
  <data name="listOfInputParameters.Location" type="System.Drawing.Point, System.Drawing">
    <value>194, 168</value>
  </data>
  <data name="listOfInputParameters.Size" type="System.Drawing.Size, System.Drawing">
    <value>178, 194</value>
  </data>
  <data name="listOfInputParameters.TabIndex" type="System.Int32, mscorlib">
    <value>21</value>
  </data>
  <data name="&gt;&gt;listOfInputParameters.Name" xml:space="preserve">
    <value>listOfInputParameters</value>
  </data>
  <data name="&gt;&gt;listOfInputParameters.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;listOfInputParameters.ZOrder" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="labelControl4.Location" type="System.Drawing.Point, System.Drawing">
    <value>186, 134</value>
  </data>
  <data name="labelControl4.Size" type="System.Drawing.Size, System.Drawing">
    <value>2, 24</value>
  </data>
  <data name="labelControl4.TabIndex" type="System.Int32, mscorlib">
    <value>22</value>
  </data>
  <data name="&gt;&gt;labelControl4.Name" xml:space="preserve">
    <value>labelControl4</value>
  </data>
  <data name="&gt;&gt;labelControl4.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;labelControl4.ZOrder" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="layoutItemButton15.Location" type="System.Drawing.Point, System.Drawing">
    <value>197, 132</value>
  </data>
  <data name="layoutItemButton15.Size" type="System.Drawing.Size, System.Drawing">
    <value>28, 28</value>
  </data>
  <data name="layoutItemButton15.TabIndex" type="System.Int32, mscorlib">
    <value>23</value>
  </data>
  <data name="&gt;&gt;layoutItemButton15.Name" xml:space="preserve">
    <value>layoutItemButton15</value>
  </data>
  <data name="&gt;&gt;layoutItemButton15.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;layoutItemButton15.ZOrder" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="layoutItemButton12.Location" type="System.Drawing.Point, System.Drawing">
    <value>455, 132</value>
  </data>
  <data name="layoutItemButton12.Size" type="System.Drawing.Size, System.Drawing">
    <value>28, 28</value>
  </data>
  <data name="layoutItemButton12.TabIndex" type="System.Int32, mscorlib">
    <value>17</value>
  </data>
  <data name="&gt;&gt;layoutItemButton12.Name" xml:space="preserve">
    <value>layoutItemButton12</value>
  </data>
  <data name="&gt;&gt;layoutItemButton12.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;layoutItemButton12.ZOrder" xml:space="preserve">
    <value>6</value>
  </data>
  <data name="layoutItemButton13.Location" type="System.Drawing.Point, System.Drawing">
    <value>487, 132</value>
  </data>
  <data name="layoutItemButton13.Size" type="System.Drawing.Size, System.Drawing">
    <value>28, 28</value>
  </data>
  <data name="layoutItemButton13.TabIndex" type="System.Int32, mscorlib">
    <value>16</value>
  </data>
  <data name="&gt;&gt;layoutItemButton13.Name" xml:space="preserve">
    <value>layoutItemButton13</value>
  </data>
  <data name="&gt;&gt;layoutItemButton13.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;layoutItemButton13.ZOrder" xml:space="preserve">
    <value>7</value>
  </data>
  <data name="layoutItemButton14.Location" type="System.Drawing.Point, System.Drawing">
    <value>519, 132</value>
  </data>
  <data name="layoutItemButton14.Size" type="System.Drawing.Size, System.Drawing">
    <value>28, 28</value>
  </data>
  <data name="layoutItemButton14.TabIndex" type="System.Int32, mscorlib">
    <value>15</value>
  </data>
  <data name="&gt;&gt;layoutItemButton14.Name" xml:space="preserve">
    <value>layoutItemButton14</value>
  </data>
  <data name="&gt;&gt;layoutItemButton14.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;layoutItemButton14.ZOrder" xml:space="preserve">
    <value>8</value>
  </data>
  <data name="layoutItemButton11.Location" type="System.Drawing.Point, System.Drawing">
    <value>406, 132</value>
  </data>
  <data name="layoutItemButton11.Size" type="System.Drawing.Size, System.Drawing">
    <value>28, 28</value>
  </data>
  <data name="layoutItemButton11.TabIndex" type="System.Int32, mscorlib">
    <value>13</value>
  </data>
  <data name="&gt;&gt;layoutItemButton11.Name" xml:space="preserve">
    <value>layoutItemButton11</value>
  </data>
  <data name="&gt;&gt;layoutItemButton11.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;layoutItemButton11.ZOrder" xml:space="preserve">
    <value>10</value>
  </data>
  <data name="layoutItemButton10.Location" type="System.Drawing.Point, System.Drawing">
    <value>374, 132</value>
  </data>
  <data name="layoutItemButton10.Size" type="System.Drawing.Size, System.Drawing">
    <value>28, 28</value>
  </data>
  <data name="layoutItemButton10.TabIndex" type="System.Int32, mscorlib">
    <value>12</value>
  </data>
  <data name="&gt;&gt;layoutItemButton10.Name" xml:space="preserve">
    <value>layoutItemButton10</value>
  </data>
  <data name="&gt;&gt;layoutItemButton10.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;layoutItemButton10.ZOrder" xml:space="preserve">
    <value>11</value>
  </data>
  <data name="layoutItemButton9.Location" type="System.Drawing.Point, System.Drawing">
    <value>342, 132</value>
  </data>
  <data name="layoutItemButton9.Size" type="System.Drawing.Size, System.Drawing">
    <value>28, 28</value>
  </data>
  <data name="layoutItemButton9.TabIndex" type="System.Int32, mscorlib">
    <value>11</value>
  </data>
  <data name="&gt;&gt;layoutItemButton9.Name" xml:space="preserve">
    <value>layoutItemButton9</value>
  </data>
  <data name="&gt;&gt;layoutItemButton9.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;layoutItemButton9.ZOrder" xml:space="preserve">
    <value>12</value>
  </data>
  <data name="layoutItemButton8.Location" type="System.Drawing.Point, System.Drawing">
    <value>310, 132</value>
  </data>
  <data name="layoutItemButton8.Size" type="System.Drawing.Size, System.Drawing">
    <value>28, 28</value>
  </data>
  <data name="layoutItemButton8.TabIndex" type="System.Int32, mscorlib">
    <value>10</value>
  </data>
  <data name="&gt;&gt;layoutItemButton8.Name" xml:space="preserve">
    <value>layoutItemButton8</value>
  </data>
  <data name="&gt;&gt;layoutItemButton8.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;layoutItemButton8.ZOrder" xml:space="preserve">
    <value>13</value>
  </data>
  <data name="layoutItemButton7.Location" type="System.Drawing.Point, System.Drawing">
    <value>278, 132</value>
  </data>
  <data name="layoutItemButton7.Size" type="System.Drawing.Size, System.Drawing">
    <value>28, 28</value>
  </data>
  <data name="layoutItemButton7.TabIndex" type="System.Int32, mscorlib">
    <value>9</value>
  </data>
  <data name="&gt;&gt;layoutItemButton7.Name" xml:space="preserve">
    <value>layoutItemButton7</value>
  </data>
  <data name="&gt;&gt;layoutItemButton7.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;layoutItemButton7.ZOrder" xml:space="preserve">
    <value>14</value>
  </data>
  <data name="layoutItemButton6.Location" type="System.Drawing.Point, System.Drawing">
    <value>246, 132</value>
  </data>
  <data name="layoutItemButton6.Size" type="System.Drawing.Size, System.Drawing">
    <value>28, 28</value>
  </data>
  <data name="layoutItemButton6.TabIndex" type="System.Int32, mscorlib">
    <value>8</value>
  </data>
  <data name="&gt;&gt;layoutItemButton6.Name" xml:space="preserve">
    <value>layoutItemButton6</value>
  </data>
  <data name="&gt;&gt;layoutItemButton6.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;layoutItemButton6.ZOrder" xml:space="preserve">
    <value>15</value>
  </data>
  <data name="layoutItemButton5.Location" type="System.Drawing.Point, System.Drawing">
    <value>148, 132</value>
  </data>
  <data name="layoutItemButton5.Size" type="System.Drawing.Size, System.Drawing">
    <value>28, 28</value>
  </data>
  <data name="layoutItemButton5.TabIndex" type="System.Int32, mscorlib">
    <value>6</value>
  </data>
  <data name="&gt;&gt;layoutItemButton5.Name" xml:space="preserve">
    <value>layoutItemButton5</value>
  </data>
  <data name="&gt;&gt;layoutItemButton5.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;layoutItemButton5.ZOrder" xml:space="preserve">
    <value>17</value>
  </data>
  <data name="layoutItemButton4.Location" type="System.Drawing.Point, System.Drawing">
    <value>116, 132</value>
  </data>
  <data name="layoutItemButton4.Size" type="System.Drawing.Size, System.Drawing">
    <value>28, 28</value>
  </data>
  <data name="layoutItemButton4.TabIndex" type="System.Int32, mscorlib">
    <value>5</value>
  </data>
  <data name="&gt;&gt;layoutItemButton4.Name" xml:space="preserve">
    <value>layoutItemButton4</value>
  </data>
  <data name="&gt;&gt;layoutItemButton4.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;layoutItemButton4.ZOrder" xml:space="preserve">
    <value>18</value>
  </data>
  <data name="layoutItemButton3.Location" type="System.Drawing.Point, System.Drawing">
    <value>84, 132</value>
  </data>
  <data name="layoutItemButton3.Size" type="System.Drawing.Size, System.Drawing">
    <value>28, 28</value>
  </data>
  <data name="layoutItemButton3.TabIndex" type="System.Int32, mscorlib">
    <value>4</value>
  </data>
  <data name="&gt;&gt;layoutItemButton3.Name" xml:space="preserve">
    <value>layoutItemButton3</value>
  </data>
  <data name="&gt;&gt;layoutItemButton3.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;layoutItemButton3.ZOrder" xml:space="preserve">
    <value>19</value>
  </data>
  <data name="layoutItemButton2.Location" type="System.Drawing.Point, System.Drawing">
    <value>52, 132</value>
  </data>
  <data name="layoutItemButton2.Size" type="System.Drawing.Size, System.Drawing">
    <value>28, 28</value>
  </data>
  <data name="layoutItemButton2.TabIndex" type="System.Int32, mscorlib">
    <value>3</value>
  </data>
  <data name="&gt;&gt;layoutItemButton2.Name" xml:space="preserve">
    <value>layoutItemButton2</value>
  </data>
  <data name="&gt;&gt;layoutItemButton2.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;layoutItemButton2.ZOrder" xml:space="preserve">
    <value>20</value>
  </data>
  <data name="plusItemButton.Location" type="System.Drawing.Point, System.Drawing">
    <value>20, 132</value>
  </data>
  <data name="plusItemButton.Size" type="System.Drawing.Size, System.Drawing">
    <value>28, 28</value>
  </data>
  <data name="plusItemButton.TabIndex" type="System.Int32, mscorlib">
    <value>0</value>
  </data>
  <data name="&gt;&gt;plusItemButton.Name" xml:space="preserve">
    <value>plusItemButton</value>
  </data>
  <data name="&gt;&gt;plusItemButton.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
  <data name="&gt;&gt;plusItemButton.ZOrder" xml:space="preserve">
    <value>22</value>
  </data>
  <data name="$this.Localizable" type="System.Boolean, mscorlib">
    <value>True</value>
  </data>
  <data name="$this.ClientSize" type="System.Drawing.Size, System.Drawing">
    <value>566, 421</value>
  </data>
  <data name="$this.MinimumSize" type="System.Drawing.Size, System.Drawing">
    <value>566, 421</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Expression Editor</value>
  </data>
  <data name="&gt;&gt;$this.Name" xml:space="preserve">
    <value>CalculatedFieldExpressionEditorForm</value>
  </data>
  <data name="Constants.Text" xml:space="preserve">
    <value>Constanten</value>
  </data>
  <data name="Fields.Text" xml:space="preserve">
    <value>Velden</value>
  </data>
  <data name="Functions.Text" xml:space="preserve">
    <value>Functies</value>
  </data>
  <data name="Parameters.Text" xml:space="preserve">
    <value>Parameters</value>
  </data>
  <data name="Operators.Text" xml:space="preserve">
    <value>Operators</value>
  </data>
  <data name="Trim.Description" xml:space="preserve">
    <value>Verwijdert alle voorvallen van een reeks van specifieke tekens van het begin en het einde van een geval.</value>
  </data>
  <data name="Len.Description" xml:space="preserve">
    <value>Retourneert een integer met hetzij het aantal karakters in een string of het nominale aantal bytes nodig voor het opslaan van een variabele.</value>
  </data>
  <data name="Substring3param.Description" xml:space="preserve">
    <value>Substring ( &quot;startpositie, telling) Retourneert de deeltekenreeks op de opgegeven locatie binnen een tekenreekswaarde doel, te beginnen vanaf de startpositie symbool op de een gedefinieerd door de graaf parameter.</value>
  </data>
  <data name="Iif.Description" xml:space="preserve">
    <value>IIF (Expression, TruePart, FalsePart) Geeft een van de twee objecten, afhankelijk van de evaluatie van een expressie. Parameters: Expressie - Boolean. De expressie die u wilt evalueren. TruePart - Object. Geretourneerd als expressie evalueert op True. FalsePart - Object. Geretourneerd als expressie evalueert tot False.</value>
  </data>
  <data name="IsNull.Description" xml:space="preserve">
    <value>Bepaalt of de waarde van een bepaalde eigenschap wordt NULL.</value>
  </data>
  <data name="Upper.Description" xml:space="preserve">
    <value>Geeft het opgegeven teken expressie in hoofdletters.</value>
  </data>
  <data name="Lower.Description" xml:space="preserve">
    <value>Geeft het opgegeven teken expressie in kleine letters.</value>
  </data>
  <data name="Concat.Description" xml:space="preserve">
    <value>Retourneert een tekenreekswaarde met de concatenatie van de huidige string met alle meegeleverde tekenreeksen. Argumenten: tekenreeks1, ... , StringN. Optioneel string voorwerpen of zinnen aan aaneenschakelen tot het einde van de huidige string.</value>
  </data>
  <data name="Fields Description Prefix" xml:space="preserve">
    <value>Het type van dit veld is: </value>
  </data>
  <data name="Parameters Description Prefix" xml:space="preserve">
    <value>Het type van deze parameter is: </value>
  </data>
  <data name="Plus.Description" xml:space="preserve">
    <value>Voegt de waarde van een numerieke uitdrukking aan een ander of voegt twee strings samen.</value>
  </data>
  <data name="Minus.Description" xml:space="preserve">
    <value>Hiermee wordt het verschil tussen twee nummers gevonden.</value>
  </data>
  <data name="Multiply.Description" xml:space="preserve">
    <value>Vermenigvuldigt de waarde van twee uitdrukkingen.</value>
  </data>
  <data name="Divide.Description" xml:space="preserve">
    <value>Veroorzaakt de eerste operand te worden gedeeld door de tweede.</value>
  </data>
  <data name="Modulo.Description" xml:space="preserve">
    <value>Retourneert de rest (modulus), verkregen door een numerieke uitdrukking in een andere.</value>
  </data>
  <data name="BitwiseOr.Description" xml:space="preserve">
    <value>Vergelijkt elke bit van de eerste operand naar de corresponderende bits van haar tweede operand. Indien een bit 1 is, de overeenkomstige resultaat bit is ingesteld op 1. Zoniet, wordt het bijbehorende resultaat bit ingesteld op 0.</value>
  </data>
  <data name="BitwiseAnd.Description" xml:space="preserve">
    <value>Voert een bitwise logische AND operatie tussen twee integer waarden uit.</value>
  </data>
  <data name="BitwiseXor.Description" xml:space="preserve">
    <value>Voert een logische uitsluiting op twee Boolean expressies, of een bitwise uitsluiting van twee numerieke expressies.</value>
  </data>
  <data name="Equal.Description" xml:space="preserve">
    <value>Retourneert true als beide operanden dezelfde waarde hebben, anders geeft hij vals.</value>
  </data>
  <data name="NotEqual.Description" xml:space="preserve">
    <value>True als operanden niet dezelfde waarde hebben, anders geeft hij vals.</value>
  </data>
  <data name="Less.Description" xml:space="preserve">
    <value>Minder dan de exploitant. Gebruikt om de uitdrukkingen.</value>
  </data>
  <data name="LessOrEqual.Description" xml:space="preserve">
    <value>Minder dan of gelijk is aan de exploitant. Gebruikt om de uitdrukkingen.</value>
  </data>
  <data name="GreaterOrEqual.Description" xml:space="preserve">
    <value>Groter dan of gelijk is aan de exploitant. Gebruikt om de uitdrukkingen.</value>
  </data>
  <data name="Greater.Description" xml:space="preserve">
    <value>Groter dan exploitant. Gebruikt om de uitdrukkingen.</value>
  </data>
  <data name="In.Description" xml:space="preserve">
    <value>Tests voor het bestaan van een woning in een object.</value>
  </data>
  <data name="Like.Description" xml:space="preserve">
    <value>Vergelijkt een string tegen een patroon. Als de waarde in de string voldoet aan het patroon in de patroon, resultaat is waar. Als de string niet voldoet aan het patroon, resultaat is onjuist. Als beide string en het patroon lege strings zijn, is het resultaat juist.</value>
  </data>
  <data name="Between.Description" xml:space="preserve">
    <value>Geeft een reeksom te  testen. True als de waarde van test_expression groter is dan of gelijk aan de waarde van begin_expression en minder dan of gelijk aan de waarde van end_expression.</value>
  </data>
  <data name="And.Description" xml:space="preserve">
    <value>Voert een logische combinatie van twee uitdrukkingen.</value>
  </data>
  <data name="Or.Description" xml:space="preserve">
    <value>Voert een logische disjunctie op twee Booleaanse uitdrukkingen.</value>
  </data>
  <data name="Not.Description" xml:space="preserve">
    <value>Logische ontkenning van een expressie.</value>
  </data>
  <data name="True.Description" xml:space="preserve">
    <value>Vertegenwoordigt de booleaanse waarde true.</value>
  </data>
  <data name="False.Description" xml:space="preserve">
    <value>Vertegenwoordigt de logische waarde FALSE.</value>
  </data>
  <data name="Null.Description" xml:space="preserve">
    <value>Vertegenwoordigt een null verwezen, die niet verwijzen naar een object. Er is vertegenwoordigd door &quot;?&quot; symbool.</value>
  </data>
  <data name="Substring2param.Description" xml:space="preserve">
    <value>Substring ( &quot;startpositie) Retourneert de deeltekenreeks op de opgegeven locatie binnen een tekenreekswaarde doel, te beginnen vanaf de startpositie symbool voor het einde van een string.</value>
  </data>
  <data name="Condition.Text" xml:space="preserve">
    <value>Toestand Editor</value>
  </data>
  <data name="Expression.Text" xml:space="preserve">
    <value>Expressie Editor</value>
  </data>
  <data name="Variables.Text" xml:space="preserve">
    <value>Variabelen</value>
  </data>
  <data name="RowCount.Description" xml:space="preserve">
    <value>Geeft het totaal bedrag van gegevens rijen in een gegevensbron.</value>
  </data>
  <data name="CurrentRowIndex.Description" xml:space="preserve">
    <value>Retourneert de index van de huidige gegevens rij in een gegevensbron. Merk op dat deze index is nul-gebaseerd.</value>
  </data>
</root>
