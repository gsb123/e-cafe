//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace e_Cafe.SQL.DataSets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(false)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsKeszletInfo")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsKeszletInfo : global::System.Data.DataSet {
        
        private KESZLET_FEJDataTable tableKESZLET_FEJ;
        
        private KESZLET_SORDataTable tableKESZLET_SOR;
        
        private global::System.Data.DataRelation relationKészletsorok;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsKeszletInfo() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsKeszletInfo(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["KESZLET_FEJ"] != null)) {
                    base.Tables.Add(new KESZLET_FEJDataTable(ds.Tables["KESZLET_FEJ"]));
                }
                if ((ds.Tables["KESZLET_SOR"] != null)) {
                    base.Tables.Add(new KESZLET_SORDataTable(ds.Tables["KESZLET_SOR"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public KESZLET_FEJDataTable KESZLET_FEJ {
            get {
                return this.tableKESZLET_FEJ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public KESZLET_SORDataTable KESZLET_SOR {
            get {
                return this.tableKESZLET_SOR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsKeszletInfo cln = ((dsKeszletInfo)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["KESZLET_FEJ"] != null)) {
                    base.Tables.Add(new KESZLET_FEJDataTable(ds.Tables["KESZLET_FEJ"]));
                }
                if ((ds.Tables["KESZLET_SOR"] != null)) {
                    base.Tables.Add(new KESZLET_SORDataTable(ds.Tables["KESZLET_SOR"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableKESZLET_FEJ = ((KESZLET_FEJDataTable)(base.Tables["KESZLET_FEJ"]));
            if ((initTable == true)) {
                if ((this.tableKESZLET_FEJ != null)) {
                    this.tableKESZLET_FEJ.InitVars();
                }
            }
            this.tableKESZLET_SOR = ((KESZLET_SORDataTable)(base.Tables["KESZLET_SOR"]));
            if ((initTable == true)) {
                if ((this.tableKESZLET_SOR != null)) {
                    this.tableKESZLET_SOR.InitVars();
                }
            }
            this.relationKészletsorok = this.Relations["Készletsorok"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsKeszletInfo";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsKeszletInfo.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableKESZLET_FEJ = new KESZLET_FEJDataTable();
            base.Tables.Add(this.tableKESZLET_FEJ);
            this.tableKESZLET_SOR = new KESZLET_SORDataTable();
            base.Tables.Add(this.tableKESZLET_SOR);
            this.relationKészletsorok = new global::System.Data.DataRelation("Készletsorok", new global::System.Data.DataColumn[] {
                        this.tableKESZLET_FEJ.HOColumn,
                        this.tableKESZLET_FEJ.EVColumn,
                        this.tableKESZLET_FEJ.NAPColumn,
                        this.tableKESZLET_FEJ.CIKK_IDColumn,
                        this.tableKESZLET_FEJ.RAKTAR_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableKESZLET_SOR.HOColumn,
                        this.tableKESZLET_SOR.EVColumn,
                        this.tableKESZLET_SOR.NAPColumn,
                        this.tableKESZLET_SOR.CIKK_IDColumn,
                        this.tableKESZLET_SOR.RAKTAR_IDColumn}, false);
            this.Relations.Add(this.relationKészletsorok);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeKESZLET_FEJ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeKESZLET_SOR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsKeszletInfo ds = new dsKeszletInfo();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void KESZLET_FEJRowChangeEventHandler(object sender, KESZLET_FEJRowChangeEvent e);
        
        public delegate void KESZLET_SORRowChangeEventHandler(object sender, KESZLET_SORRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KESZLET_FEJDataTable : global::System.Data.TypedTableBase<KESZLET_FEJRow> {
            
            private global::System.Data.DataColumn columnEV;
            
            private global::System.Data.DataColumn columnHO;
            
            private global::System.Data.DataColumn columnNAP;
            
            private global::System.Data.DataColumn columnCIKK_ID;
            
            private global::System.Data.DataColumn columnRAKTAR_ID;
            
            private global::System.Data.DataColumn columnKESZLET_NYITO;
            
            private global::System.Data.DataColumn columnKESZLET_ERTEK_NYITO;
            
            private global::System.Data.DataColumn columnELOZO_NAPI_ATLAGAR;
            
            private global::System.Data.DataColumn columnBESZERZESI_AR;
            
            private global::System.Data.DataColumn columnAKT_ATLAGAR;
            
            private global::System.Data.DataColumn columnKESZLET_NAPI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KESZLET_FEJDataTable() {
                this.TableName = "KESZLET_FEJ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KESZLET_FEJDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected KESZLET_FEJDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EVColumn {
                get {
                    return this.columnEV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HOColumn {
                get {
                    return this.columnHO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAPColumn {
                get {
                    return this.columnNAP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CIKK_IDColumn {
                get {
                    return this.columnCIKK_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RAKTAR_IDColumn {
                get {
                    return this.columnRAKTAR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KESZLET_NYITOColumn {
                get {
                    return this.columnKESZLET_NYITO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KESZLET_ERTEK_NYITOColumn {
                get {
                    return this.columnKESZLET_ERTEK_NYITO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ELOZO_NAPI_ATLAGARColumn {
                get {
                    return this.columnELOZO_NAPI_ATLAGAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BESZERZESI_ARColumn {
                get {
                    return this.columnBESZERZESI_AR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AKT_ATLAGARColumn {
                get {
                    return this.columnAKT_ATLAGAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KESZLET_NAPIColumn {
                get {
                    return this.columnKESZLET_NAPI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KESZLET_FEJRow this[int index] {
                get {
                    return ((KESZLET_FEJRow)(this.Rows[index]));
                }
            }
            
            public event KESZLET_FEJRowChangeEventHandler KESZLET_FEJRowChanging;
            
            public event KESZLET_FEJRowChangeEventHandler KESZLET_FEJRowChanged;
            
            public event KESZLET_FEJRowChangeEventHandler KESZLET_FEJRowDeleting;
            
            public event KESZLET_FEJRowChangeEventHandler KESZLET_FEJRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddKESZLET_FEJRow(KESZLET_FEJRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KESZLET_FEJRow AddKESZLET_FEJRow(int EV, int HO, int NAP, int CIKK_ID, int RAKTAR_ID, double KESZLET_NYITO, double KESZLET_ERTEK_NYITO, double ELOZO_NAPI_ATLAGAR, double BESZERZESI_AR, double AKT_ATLAGAR, double KESZLET_NAPI) {
                KESZLET_FEJRow rowKESZLET_FEJRow = ((KESZLET_FEJRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EV,
                        HO,
                        NAP,
                        CIKK_ID,
                        RAKTAR_ID,
                        KESZLET_NYITO,
                        KESZLET_ERTEK_NYITO,
                        ELOZO_NAPI_ATLAGAR,
                        BESZERZESI_AR,
                        AKT_ATLAGAR,
                        KESZLET_NAPI};
                rowKESZLET_FEJRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowKESZLET_FEJRow);
                return rowKESZLET_FEJRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KESZLET_FEJRow FindByEVHONAPCIKK_IDRAKTAR_ID(int EV, int HO, int NAP, int CIKK_ID, int RAKTAR_ID) {
                return ((KESZLET_FEJRow)(this.Rows.Find(new object[] {
                            EV,
                            HO,
                            NAP,
                            CIKK_ID,
                            RAKTAR_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                KESZLET_FEJDataTable cln = ((KESZLET_FEJDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new KESZLET_FEJDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEV = base.Columns["EV"];
                this.columnHO = base.Columns["HO"];
                this.columnNAP = base.Columns["NAP"];
                this.columnCIKK_ID = base.Columns["CIKK_ID"];
                this.columnRAKTAR_ID = base.Columns["RAKTAR_ID"];
                this.columnKESZLET_NYITO = base.Columns["KESZLET_NYITO"];
                this.columnKESZLET_ERTEK_NYITO = base.Columns["KESZLET_ERTEK_NYITO"];
                this.columnELOZO_NAPI_ATLAGAR = base.Columns["ELOZO_NAPI_ATLAGAR"];
                this.columnBESZERZESI_AR = base.Columns["BESZERZESI_AR"];
                this.columnAKT_ATLAGAR = base.Columns["AKT_ATLAGAR"];
                this.columnKESZLET_NAPI = base.Columns["KESZLET_NAPI"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEV = new global::System.Data.DataColumn("EV", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEV);
                this.columnHO = new global::System.Data.DataColumn("HO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHO);
                this.columnNAP = new global::System.Data.DataColumn("NAP", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAP);
                this.columnCIKK_ID = new global::System.Data.DataColumn("CIKK_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCIKK_ID);
                this.columnRAKTAR_ID = new global::System.Data.DataColumn("RAKTAR_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRAKTAR_ID);
                this.columnKESZLET_NYITO = new global::System.Data.DataColumn("KESZLET_NYITO", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKESZLET_NYITO);
                this.columnKESZLET_ERTEK_NYITO = new global::System.Data.DataColumn("KESZLET_ERTEK_NYITO", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKESZLET_ERTEK_NYITO);
                this.columnELOZO_NAPI_ATLAGAR = new global::System.Data.DataColumn("ELOZO_NAPI_ATLAGAR", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnELOZO_NAPI_ATLAGAR);
                this.columnBESZERZESI_AR = new global::System.Data.DataColumn("BESZERZESI_AR", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBESZERZESI_AR);
                this.columnAKT_ATLAGAR = new global::System.Data.DataColumn("AKT_ATLAGAR", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAKT_ATLAGAR);
                this.columnKESZLET_NAPI = new global::System.Data.DataColumn("KESZLET_NAPI", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKESZLET_NAPI);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEV,
                                this.columnHO,
                                this.columnNAP,
                                this.columnCIKK_ID,
                                this.columnRAKTAR_ID}, true));
                this.columnEV.AllowDBNull = false;
                this.columnEV.Caption = "Év";
                this.columnHO.AllowDBNull = false;
                this.columnHO.Caption = "Hónap";
                this.columnNAP.AllowDBNull = false;
                this.columnCIKK_ID.AllowDBNull = false;
                this.columnRAKTAR_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KESZLET_FEJRow NewKESZLET_FEJRow() {
                return ((KESZLET_FEJRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new KESZLET_FEJRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(KESZLET_FEJRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KESZLET_FEJRowChanged != null)) {
                    this.KESZLET_FEJRowChanged(this, new KESZLET_FEJRowChangeEvent(((KESZLET_FEJRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KESZLET_FEJRowChanging != null)) {
                    this.KESZLET_FEJRowChanging(this, new KESZLET_FEJRowChangeEvent(((KESZLET_FEJRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KESZLET_FEJRowDeleted != null)) {
                    this.KESZLET_FEJRowDeleted(this, new KESZLET_FEJRowChangeEvent(((KESZLET_FEJRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KESZLET_FEJRowDeleting != null)) {
                    this.KESZLET_FEJRowDeleting(this, new KESZLET_FEJRowChangeEvent(((KESZLET_FEJRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveKESZLET_FEJRow(KESZLET_FEJRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsKeszletInfo ds = new dsKeszletInfo();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KESZLET_FEJDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KESZLET_SORDataTable : global::System.Data.TypedTableBase<KESZLET_SORRow> {
            
            private global::System.Data.DataColumn columnKESZLET_SOR_ID;
            
            private global::System.Data.DataColumn columnEV;
            
            private global::System.Data.DataColumn columnHO;
            
            private global::System.Data.DataColumn columnNAP;
            
            private global::System.Data.DataColumn columnRAKTAR_ID;
            
            private global::System.Data.DataColumn columnCIKK_ID;
            
            private global::System.Data.DataColumn columnDATUM;
            
            private global::System.Data.DataColumn columnRENDELES_ID;
            
            private global::System.Data.DataColumn columnBEVETEL_ID;
            
            private global::System.Data.DataColumn columnBIZONYLAT_ID;
            
            private global::System.Data.DataColumn columnMENNYISEG;
            
            private global::System.Data.DataColumn columnIRANY;
            
            private global::System.Data.DataColumn columnEGYSEGAR;
            
            private global::System.Data.DataColumn columnNETTO_ERTEK;
            
            private global::System.Data.DataColumn columnAFA_ERTEK;
            
            private global::System.Data.DataColumn columnAFA_KOD;
            
            private global::System.Data.DataColumn columnBRUTTO_ERTEK;
            
            private global::System.Data.DataColumn columnMOZGAS_TIPUS;
            
            private global::System.Data.DataColumn columnKESZLET_EGYS_AR;
            
            private global::System.Data.DataColumn columnMOZGAS_MEGNEVEZES;
            
            private global::System.Data.DataColumn columnBEVETEL;
            
            private global::System.Data.DataColumn columnKIADAS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KESZLET_SORDataTable() {
                this.TableName = "KESZLET_SOR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KESZLET_SORDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected KESZLET_SORDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KESZLET_SOR_IDColumn {
                get {
                    return this.columnKESZLET_SOR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EVColumn {
                get {
                    return this.columnEV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HOColumn {
                get {
                    return this.columnHO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAPColumn {
                get {
                    return this.columnNAP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RAKTAR_IDColumn {
                get {
                    return this.columnRAKTAR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CIKK_IDColumn {
                get {
                    return this.columnCIKK_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATUMColumn {
                get {
                    return this.columnDATUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RENDELES_IDColumn {
                get {
                    return this.columnRENDELES_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BEVETEL_IDColumn {
                get {
                    return this.columnBEVETEL_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BIZONYLAT_IDColumn {
                get {
                    return this.columnBIZONYLAT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MENNYISEGColumn {
                get {
                    return this.columnMENNYISEG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IRANYColumn {
                get {
                    return this.columnIRANY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EGYSEGARColumn {
                get {
                    return this.columnEGYSEGAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NETTO_ERTEKColumn {
                get {
                    return this.columnNETTO_ERTEK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AFA_ERTEKColumn {
                get {
                    return this.columnAFA_ERTEK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AFA_KODColumn {
                get {
                    return this.columnAFA_KOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRUTTO_ERTEKColumn {
                get {
                    return this.columnBRUTTO_ERTEK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOZGAS_TIPUSColumn {
                get {
                    return this.columnMOZGAS_TIPUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KESZLET_EGYS_ARColumn {
                get {
                    return this.columnKESZLET_EGYS_AR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOZGAS_MEGNEVEZESColumn {
                get {
                    return this.columnMOZGAS_MEGNEVEZES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BEVETELColumn {
                get {
                    return this.columnBEVETEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KIADASColumn {
                get {
                    return this.columnKIADAS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KESZLET_SORRow this[int index] {
                get {
                    return ((KESZLET_SORRow)(this.Rows[index]));
                }
            }
            
            public event KESZLET_SORRowChangeEventHandler KESZLET_SORRowChanging;
            
            public event KESZLET_SORRowChangeEventHandler KESZLET_SORRowChanged;
            
            public event KESZLET_SORRowChangeEventHandler KESZLET_SORRowDeleting;
            
            public event KESZLET_SORRowChangeEventHandler KESZLET_SORRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddKESZLET_SORRow(KESZLET_SORRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KESZLET_SORRow AddKESZLET_SORRow(
                        int EV, 
                        int HO, 
                        int NAP, 
                        int RAKTAR_ID, 
                        int CIKK_ID, 
                        System.DateTime DATUM, 
                        int RENDELES_ID, 
                        int BEVETEL_ID, 
                        int BIZONYLAT_ID, 
                        double MENNYISEG, 
                        int IRANY, 
                        double EGYSEGAR, 
                        double NETTO_ERTEK, 
                        double AFA_ERTEK, 
                        string AFA_KOD, 
                        double BRUTTO_ERTEK, 
                        string MOZGAS_TIPUS, 
                        double KESZLET_EGYS_AR, 
                        string MOZGAS_MEGNEVEZES, 
                        double BEVETEL, 
                        double KIADAS) {
                KESZLET_SORRow rowKESZLET_SORRow = ((KESZLET_SORRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        EV,
                        HO,
                        NAP,
                        RAKTAR_ID,
                        CIKK_ID,
                        DATUM,
                        RENDELES_ID,
                        BEVETEL_ID,
                        BIZONYLAT_ID,
                        MENNYISEG,
                        IRANY,
                        EGYSEGAR,
                        NETTO_ERTEK,
                        AFA_ERTEK,
                        AFA_KOD,
                        BRUTTO_ERTEK,
                        MOZGAS_TIPUS,
                        KESZLET_EGYS_AR,
                        MOZGAS_MEGNEVEZES,
                        BEVETEL,
                        KIADAS};
                rowKESZLET_SORRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowKESZLET_SORRow);
                return rowKESZLET_SORRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KESZLET_SORRow FindByKESZLET_SOR_ID(int KESZLET_SOR_ID) {
                return ((KESZLET_SORRow)(this.Rows.Find(new object[] {
                            KESZLET_SOR_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                KESZLET_SORDataTable cln = ((KESZLET_SORDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new KESZLET_SORDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKESZLET_SOR_ID = base.Columns["KESZLET_SOR_ID"];
                this.columnEV = base.Columns["EV"];
                this.columnHO = base.Columns["HO"];
                this.columnNAP = base.Columns["NAP"];
                this.columnRAKTAR_ID = base.Columns["RAKTAR_ID"];
                this.columnCIKK_ID = base.Columns["CIKK_ID"];
                this.columnDATUM = base.Columns["DATUM"];
                this.columnRENDELES_ID = base.Columns["RENDELES_ID"];
                this.columnBEVETEL_ID = base.Columns["BEVETEL_ID"];
                this.columnBIZONYLAT_ID = base.Columns["BIZONYLAT_ID"];
                this.columnMENNYISEG = base.Columns["MENNYISEG"];
                this.columnIRANY = base.Columns["IRANY"];
                this.columnEGYSEGAR = base.Columns["EGYSEGAR"];
                this.columnNETTO_ERTEK = base.Columns["NETTO_ERTEK"];
                this.columnAFA_ERTEK = base.Columns["AFA_ERTEK"];
                this.columnAFA_KOD = base.Columns["AFA_KOD"];
                this.columnBRUTTO_ERTEK = base.Columns["BRUTTO_ERTEK"];
                this.columnMOZGAS_TIPUS = base.Columns["MOZGAS_TIPUS"];
                this.columnKESZLET_EGYS_AR = base.Columns["KESZLET_EGYS_AR"];
                this.columnMOZGAS_MEGNEVEZES = base.Columns["MOZGAS_MEGNEVEZES"];
                this.columnBEVETEL = base.Columns["BEVETEL"];
                this.columnKIADAS = base.Columns["KIADAS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKESZLET_SOR_ID = new global::System.Data.DataColumn("KESZLET_SOR_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKESZLET_SOR_ID);
                this.columnEV = new global::System.Data.DataColumn("EV", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEV);
                this.columnHO = new global::System.Data.DataColumn("HO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHO);
                this.columnNAP = new global::System.Data.DataColumn("NAP", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAP);
                this.columnRAKTAR_ID = new global::System.Data.DataColumn("RAKTAR_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRAKTAR_ID);
                this.columnCIKK_ID = new global::System.Data.DataColumn("CIKK_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCIKK_ID);
                this.columnDATUM = new global::System.Data.DataColumn("DATUM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATUM);
                this.columnRENDELES_ID = new global::System.Data.DataColumn("RENDELES_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRENDELES_ID);
                this.columnBEVETEL_ID = new global::System.Data.DataColumn("BEVETEL_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBEVETEL_ID);
                this.columnBIZONYLAT_ID = new global::System.Data.DataColumn("BIZONYLAT_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBIZONYLAT_ID);
                this.columnMENNYISEG = new global::System.Data.DataColumn("MENNYISEG", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMENNYISEG);
                this.columnIRANY = new global::System.Data.DataColumn("IRANY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIRANY);
                this.columnEGYSEGAR = new global::System.Data.DataColumn("EGYSEGAR", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEGYSEGAR);
                this.columnNETTO_ERTEK = new global::System.Data.DataColumn("NETTO_ERTEK", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNETTO_ERTEK);
                this.columnAFA_ERTEK = new global::System.Data.DataColumn("AFA_ERTEK", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAFA_ERTEK);
                this.columnAFA_KOD = new global::System.Data.DataColumn("AFA_KOD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAFA_KOD);
                this.columnBRUTTO_ERTEK = new global::System.Data.DataColumn("BRUTTO_ERTEK", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRUTTO_ERTEK);
                this.columnMOZGAS_TIPUS = new global::System.Data.DataColumn("MOZGAS_TIPUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOZGAS_TIPUS);
                this.columnKESZLET_EGYS_AR = new global::System.Data.DataColumn("KESZLET_EGYS_AR", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKESZLET_EGYS_AR);
                this.columnMOZGAS_MEGNEVEZES = new global::System.Data.DataColumn("MOZGAS_MEGNEVEZES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOZGAS_MEGNEVEZES);
                this.columnBEVETEL = new global::System.Data.DataColumn("BEVETEL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBEVETEL);
                this.columnKIADAS = new global::System.Data.DataColumn("KIADAS", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKIADAS);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnKESZLET_SOR_ID}, true));
                this.columnKESZLET_SOR_ID.AutoIncrement = true;
                this.columnKESZLET_SOR_ID.AutoIncrementSeed = -1;
                this.columnKESZLET_SOR_ID.AutoIncrementStep = -1;
                this.columnKESZLET_SOR_ID.AllowDBNull = false;
                this.columnKESZLET_SOR_ID.ReadOnly = true;
                this.columnKESZLET_SOR_ID.Unique = true;
                this.columnEV.AllowDBNull = false;
                this.columnHO.AllowDBNull = false;
                this.columnNAP.AllowDBNull = false;
                this.columnCIKK_ID.AllowDBNull = false;
                this.columnDATUM.AllowDBNull = false;
                this.columnAFA_KOD.MaxLength = 2;
                this.columnMOZGAS_TIPUS.MaxLength = 2;
                this.columnMOZGAS_MEGNEVEZES.AllowDBNull = false;
                this.columnMOZGAS_MEGNEVEZES.MaxLength = 50;
                this.columnBEVETEL.ReadOnly = true;
                this.columnKIADAS.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KESZLET_SORRow NewKESZLET_SORRow() {
                return ((KESZLET_SORRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new KESZLET_SORRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(KESZLET_SORRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KESZLET_SORRowChanged != null)) {
                    this.KESZLET_SORRowChanged(this, new KESZLET_SORRowChangeEvent(((KESZLET_SORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KESZLET_SORRowChanging != null)) {
                    this.KESZLET_SORRowChanging(this, new KESZLET_SORRowChangeEvent(((KESZLET_SORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KESZLET_SORRowDeleted != null)) {
                    this.KESZLET_SORRowDeleted(this, new KESZLET_SORRowChangeEvent(((KESZLET_SORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KESZLET_SORRowDeleting != null)) {
                    this.KESZLET_SORRowDeleting(this, new KESZLET_SORRowChangeEvent(((KESZLET_SORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveKESZLET_SORRow(KESZLET_SORRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsKeszletInfo ds = new dsKeszletInfo();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KESZLET_SORDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class KESZLET_FEJRow : global::System.Data.DataRow {
            
            private KESZLET_FEJDataTable tableKESZLET_FEJ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KESZLET_FEJRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKESZLET_FEJ = ((KESZLET_FEJDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EV {
                get {
                    return ((int)(this[this.tableKESZLET_FEJ.EVColumn]));
                }
                set {
                    this[this.tableKESZLET_FEJ.EVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HO {
                get {
                    return ((int)(this[this.tableKESZLET_FEJ.HOColumn]));
                }
                set {
                    this[this.tableKESZLET_FEJ.HOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NAP {
                get {
                    return ((int)(this[this.tableKESZLET_FEJ.NAPColumn]));
                }
                set {
                    this[this.tableKESZLET_FEJ.NAPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CIKK_ID {
                get {
                    return ((int)(this[this.tableKESZLET_FEJ.CIKK_IDColumn]));
                }
                set {
                    this[this.tableKESZLET_FEJ.CIKK_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RAKTAR_ID {
                get {
                    return ((int)(this[this.tableKESZLET_FEJ.RAKTAR_IDColumn]));
                }
                set {
                    this[this.tableKESZLET_FEJ.RAKTAR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double KESZLET_NYITO {
                get {
                    try {
                        return ((double)(this[this.tableKESZLET_FEJ.KESZLET_NYITOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KESZLET_NYITO\' in table \'KESZLET_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKESZLET_FEJ.KESZLET_NYITOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double KESZLET_ERTEK_NYITO {
                get {
                    try {
                        return ((double)(this[this.tableKESZLET_FEJ.KESZLET_ERTEK_NYITOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KESZLET_ERTEK_NYITO\' in table \'KESZLET_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKESZLET_FEJ.KESZLET_ERTEK_NYITOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ELOZO_NAPI_ATLAGAR {
                get {
                    try {
                        return ((double)(this[this.tableKESZLET_FEJ.ELOZO_NAPI_ATLAGARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ELOZO_NAPI_ATLAGAR\' in table \'KESZLET_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKESZLET_FEJ.ELOZO_NAPI_ATLAGARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BESZERZESI_AR {
                get {
                    try {
                        return ((double)(this[this.tableKESZLET_FEJ.BESZERZESI_ARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BESZERZESI_AR\' in table \'KESZLET_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKESZLET_FEJ.BESZERZESI_ARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AKT_ATLAGAR {
                get {
                    try {
                        return ((double)(this[this.tableKESZLET_FEJ.AKT_ATLAGARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AKT_ATLAGAR\' in table \'KESZLET_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKESZLET_FEJ.AKT_ATLAGARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double KESZLET_NAPI {
                get {
                    try {
                        return ((double)(this[this.tableKESZLET_FEJ.KESZLET_NAPIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KESZLET_NAPI\' in table \'KESZLET_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKESZLET_FEJ.KESZLET_NAPIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKESZLET_NYITONull() {
                return this.IsNull(this.tableKESZLET_FEJ.KESZLET_NYITOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKESZLET_NYITONull() {
                this[this.tableKESZLET_FEJ.KESZLET_NYITOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKESZLET_ERTEK_NYITONull() {
                return this.IsNull(this.tableKESZLET_FEJ.KESZLET_ERTEK_NYITOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKESZLET_ERTEK_NYITONull() {
                this[this.tableKESZLET_FEJ.KESZLET_ERTEK_NYITOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsELOZO_NAPI_ATLAGARNull() {
                return this.IsNull(this.tableKESZLET_FEJ.ELOZO_NAPI_ATLAGARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetELOZO_NAPI_ATLAGARNull() {
                this[this.tableKESZLET_FEJ.ELOZO_NAPI_ATLAGARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBESZERZESI_ARNull() {
                return this.IsNull(this.tableKESZLET_FEJ.BESZERZESI_ARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBESZERZESI_ARNull() {
                this[this.tableKESZLET_FEJ.BESZERZESI_ARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAKT_ATLAGARNull() {
                return this.IsNull(this.tableKESZLET_FEJ.AKT_ATLAGARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAKT_ATLAGARNull() {
                this[this.tableKESZLET_FEJ.AKT_ATLAGARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKESZLET_NAPINull() {
                return this.IsNull(this.tableKESZLET_FEJ.KESZLET_NAPIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKESZLET_NAPINull() {
                this[this.tableKESZLET_FEJ.KESZLET_NAPIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KESZLET_SORRow[] GetKESZLET_SORRows() {
                if ((this.Table.ChildRelations["Készletsorok"] == null)) {
                    return new KESZLET_SORRow[0];
                }
                else {
                    return ((KESZLET_SORRow[])(base.GetChildRows(this.Table.ChildRelations["Készletsorok"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class KESZLET_SORRow : global::System.Data.DataRow {
            
            private KESZLET_SORDataTable tableKESZLET_SOR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KESZLET_SORRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKESZLET_SOR = ((KESZLET_SORDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int KESZLET_SOR_ID {
                get {
                    return ((int)(this[this.tableKESZLET_SOR.KESZLET_SOR_IDColumn]));
                }
                set {
                    this[this.tableKESZLET_SOR.KESZLET_SOR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EV {
                get {
                    return ((int)(this[this.tableKESZLET_SOR.EVColumn]));
                }
                set {
                    this[this.tableKESZLET_SOR.EVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HO {
                get {
                    return ((int)(this[this.tableKESZLET_SOR.HOColumn]));
                }
                set {
                    this[this.tableKESZLET_SOR.HOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NAP {
                get {
                    return ((int)(this[this.tableKESZLET_SOR.NAPColumn]));
                }
                set {
                    this[this.tableKESZLET_SOR.NAPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RAKTAR_ID {
                get {
                    try {
                        return ((int)(this[this.tableKESZLET_SOR.RAKTAR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RAKTAR_ID\' in table \'KESZLET_SOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKESZLET_SOR.RAKTAR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CIKK_ID {
                get {
                    return ((int)(this[this.tableKESZLET_SOR.CIKK_IDColumn]));
                }
                set {
                    this[this.tableKESZLET_SOR.CIKK_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATUM {
                get {
                    return ((global::System.DateTime)(this[this.tableKESZLET_SOR.DATUMColumn]));
                }
                set {
                    this[this.tableKESZLET_SOR.DATUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RENDELES_ID {
                get {
                    try {
                        return ((int)(this[this.tableKESZLET_SOR.RENDELES_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RENDELES_ID\' in table \'KESZLET_SOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKESZLET_SOR.RENDELES_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BEVETEL_ID {
                get {
                    try {
                        return ((int)(this[this.tableKESZLET_SOR.BEVETEL_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BEVETEL_ID\' in table \'KESZLET_SOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKESZLET_SOR.BEVETEL_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BIZONYLAT_ID {
                get {
                    try {
                        return ((int)(this[this.tableKESZLET_SOR.BIZONYLAT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BIZONYLAT_ID\' in table \'KESZLET_SOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKESZLET_SOR.BIZONYLAT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MENNYISEG {
                get {
                    try {
                        return ((double)(this[this.tableKESZLET_SOR.MENNYISEGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MENNYISEG\' in table \'KESZLET_SOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKESZLET_SOR.MENNYISEGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IRANY {
                get {
                    try {
                        return ((int)(this[this.tableKESZLET_SOR.IRANYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IRANY\' in table \'KESZLET_SOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKESZLET_SOR.IRANYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double EGYSEGAR {
                get {
                    try {
                        return ((double)(this[this.tableKESZLET_SOR.EGYSEGARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EGYSEGAR\' in table \'KESZLET_SOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKESZLET_SOR.EGYSEGARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double NETTO_ERTEK {
                get {
                    try {
                        return ((double)(this[this.tableKESZLET_SOR.NETTO_ERTEKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NETTO_ERTEK\' in table \'KESZLET_SOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKESZLET_SOR.NETTO_ERTEKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AFA_ERTEK {
                get {
                    try {
                        return ((double)(this[this.tableKESZLET_SOR.AFA_ERTEKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AFA_ERTEK\' in table \'KESZLET_SOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKESZLET_SOR.AFA_ERTEKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AFA_KOD {
                get {
                    try {
                        return ((string)(this[this.tableKESZLET_SOR.AFA_KODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AFA_KOD\' in table \'KESZLET_SOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKESZLET_SOR.AFA_KODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BRUTTO_ERTEK {
                get {
                    try {
                        return ((double)(this[this.tableKESZLET_SOR.BRUTTO_ERTEKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BRUTTO_ERTEK\' in table \'KESZLET_SOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKESZLET_SOR.BRUTTO_ERTEKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MOZGAS_TIPUS {
                get {
                    try {
                        return ((string)(this[this.tableKESZLET_SOR.MOZGAS_TIPUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOZGAS_TIPUS\' in table \'KESZLET_SOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKESZLET_SOR.MOZGAS_TIPUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double KESZLET_EGYS_AR {
                get {
                    try {
                        return ((double)(this[this.tableKESZLET_SOR.KESZLET_EGYS_ARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KESZLET_EGYS_AR\' in table \'KESZLET_SOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKESZLET_SOR.KESZLET_EGYS_ARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MOZGAS_MEGNEVEZES {
                get {
                    return ((string)(this[this.tableKESZLET_SOR.MOZGAS_MEGNEVEZESColumn]));
                }
                set {
                    this[this.tableKESZLET_SOR.MOZGAS_MEGNEVEZESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BEVETEL {
                get {
                    try {
                        return ((double)(this[this.tableKESZLET_SOR.BEVETELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BEVETEL\' in table \'KESZLET_SOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKESZLET_SOR.BEVETELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double KIADAS {
                get {
                    try {
                        return ((double)(this[this.tableKESZLET_SOR.KIADASColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KIADAS\' in table \'KESZLET_SOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKESZLET_SOR.KIADASColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KESZLET_FEJRow KESZLET_FEJRowParent {
                get {
                    return ((KESZLET_FEJRow)(this.GetParentRow(this.Table.ParentRelations["Készletsorok"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Készletsorok"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRAKTAR_IDNull() {
                return this.IsNull(this.tableKESZLET_SOR.RAKTAR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRAKTAR_IDNull() {
                this[this.tableKESZLET_SOR.RAKTAR_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRENDELES_IDNull() {
                return this.IsNull(this.tableKESZLET_SOR.RENDELES_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRENDELES_IDNull() {
                this[this.tableKESZLET_SOR.RENDELES_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBEVETEL_IDNull() {
                return this.IsNull(this.tableKESZLET_SOR.BEVETEL_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBEVETEL_IDNull() {
                this[this.tableKESZLET_SOR.BEVETEL_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBIZONYLAT_IDNull() {
                return this.IsNull(this.tableKESZLET_SOR.BIZONYLAT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBIZONYLAT_IDNull() {
                this[this.tableKESZLET_SOR.BIZONYLAT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMENNYISEGNull() {
                return this.IsNull(this.tableKESZLET_SOR.MENNYISEGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMENNYISEGNull() {
                this[this.tableKESZLET_SOR.MENNYISEGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIRANYNull() {
                return this.IsNull(this.tableKESZLET_SOR.IRANYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIRANYNull() {
                this[this.tableKESZLET_SOR.IRANYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEGYSEGARNull() {
                return this.IsNull(this.tableKESZLET_SOR.EGYSEGARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEGYSEGARNull() {
                this[this.tableKESZLET_SOR.EGYSEGARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNETTO_ERTEKNull() {
                return this.IsNull(this.tableKESZLET_SOR.NETTO_ERTEKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNETTO_ERTEKNull() {
                this[this.tableKESZLET_SOR.NETTO_ERTEKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAFA_ERTEKNull() {
                return this.IsNull(this.tableKESZLET_SOR.AFA_ERTEKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAFA_ERTEKNull() {
                this[this.tableKESZLET_SOR.AFA_ERTEKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAFA_KODNull() {
                return this.IsNull(this.tableKESZLET_SOR.AFA_KODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAFA_KODNull() {
                this[this.tableKESZLET_SOR.AFA_KODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRUTTO_ERTEKNull() {
                return this.IsNull(this.tableKESZLET_SOR.BRUTTO_ERTEKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRUTTO_ERTEKNull() {
                this[this.tableKESZLET_SOR.BRUTTO_ERTEKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOZGAS_TIPUSNull() {
                return this.IsNull(this.tableKESZLET_SOR.MOZGAS_TIPUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOZGAS_TIPUSNull() {
                this[this.tableKESZLET_SOR.MOZGAS_TIPUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKESZLET_EGYS_ARNull() {
                return this.IsNull(this.tableKESZLET_SOR.KESZLET_EGYS_ARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKESZLET_EGYS_ARNull() {
                this[this.tableKESZLET_SOR.KESZLET_EGYS_ARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBEVETELNull() {
                return this.IsNull(this.tableKESZLET_SOR.BEVETELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBEVETELNull() {
                this[this.tableKESZLET_SOR.BEVETELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKIADASNull() {
                return this.IsNull(this.tableKESZLET_SOR.KIADASColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKIADASNull() {
                this[this.tableKESZLET_SOR.KIADASColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class KESZLET_FEJRowChangeEvent : global::System.EventArgs {
            
            private KESZLET_FEJRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KESZLET_FEJRowChangeEvent(KESZLET_FEJRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KESZLET_FEJRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class KESZLET_SORRowChangeEvent : global::System.EventArgs {
            
            private KESZLET_SORRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KESZLET_SORRowChangeEvent(KESZLET_SORRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KESZLET_SORRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace e_Cafe.SQL.DataSets.dsKeszletInfoTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(false)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class KESZLET_FEJTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public KESZLET_FEJTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "KESZLET_FEJ";
            tableMapping.ColumnMappings.Add("EV", "EV");
            tableMapping.ColumnMappings.Add("HO", "HO");
            tableMapping.ColumnMappings.Add("NAP", "NAP");
            tableMapping.ColumnMappings.Add("CIKK_ID", "CIKK_ID");
            tableMapping.ColumnMappings.Add("RAKTAR_ID", "RAKTAR_ID");
            tableMapping.ColumnMappings.Add("KESZLET_NYITO", "KESZLET_NYITO");
            tableMapping.ColumnMappings.Add("KESZLET_ERTEK_NYITO", "KESZLET_ERTEK_NYITO");
            tableMapping.ColumnMappings.Add("ELOZO_NAPI_ATLAGAR", "ELOZO_NAPI_ATLAGAR");
            tableMapping.ColumnMappings.Add("BESZERZESI_AR", "BESZERZESI_AR");
            tableMapping.ColumnMappings.Add("AKT_ATLAGAR", "AKT_ATLAGAR");
            tableMapping.ColumnMappings.Add("KESZLET_NAPI", "KESZLET_NAPI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [KESZLET_FEJ] WHERE (([EV] = @Original_EV) AND ([HO] = @Original_HO) AND ([NAP] = @Original_NAP) AND ([CIKK_ID] = @Original_CIKK_ID) AND ([RAKTAR_ID] = @Original_RAKTAR_ID) AND ((@IsNull_KESZLET_NYITO = 1 AND [KESZLET_NYITO] IS NULL) OR ([KESZLET_NYITO] = @Original_KESZLET_NYITO)) AND ((@IsNull_KESZLET_ERTEK_NYITO = 1 AND [KESZLET_ERTEK_NYITO] IS NULL) OR ([KESZLET_ERTEK_NYITO] = @Original_KESZLET_ERTEK_NYITO)) AND ((@IsNull_ELOZO_NAPI_ATLAGAR = 1 AND [ELOZO_NAPI_ATLAGAR] IS NULL) OR ([ELOZO_NAPI_ATLAGAR] = @Original_ELOZO_NAPI_ATLAGAR)) AND ((@IsNull_BESZERZESI_AR = 1 AND [BESZERZESI_AR] IS NULL) OR ([BESZERZESI_AR] = @Original_BESZERZESI_AR)) AND ((@IsNull_AKT_ATLAGAR = 1 AND [AKT_ATLAGAR] IS NULL) OR ([AKT_ATLAGAR] = @Original_AKT_ATLAGAR)) AND ((@IsNull_KESZLET_NAPI = 1 AND [KESZLET_NAPI] IS NULL) OR ([KESZLET_NAPI] = @Original_KESZLET_NAPI)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RAKTAR_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAKTAR_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KESZLET_NYITO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KESZLET_NYITO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KESZLET_NYITO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KESZLET_NYITO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KESZLET_ERTEK_NYITO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KESZLET_ERTEK_NYITO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KESZLET_ERTEK_NYITO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KESZLET_ERTEK_NYITO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ELOZO_NAPI_ATLAGAR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELOZO_NAPI_ATLAGAR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ELOZO_NAPI_ATLAGAR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELOZO_NAPI_ATLAGAR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BESZERZESI_AR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BESZERZESI_AR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BESZERZESI_AR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BESZERZESI_AR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AKT_ATLAGAR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKT_ATLAGAR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AKT_ATLAGAR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKT_ATLAGAR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KESZLET_NAPI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KESZLET_NAPI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KESZLET_NAPI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KESZLET_NAPI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [KESZLET_FEJ] ([EV], [HO], [NAP], [CIKK_ID], [RAKTAR_ID], [KESZLET_NYITO], [KESZLET_ERTEK_NYITO], [ELOZO_NAPI_ATLAGAR], [BESZERZESI_AR], [AKT_ATLAGAR], [KESZLET_NAPI]) VALUES (@EV, @HO, @NAP, @CIKK_ID, @RAKTAR_ID, @KESZLET_NYITO, @KESZLET_ERTEK_NYITO, @ELOZO_NAPI_ATLAGAR, @BESZERZESI_AR, @AKT_ATLAGAR, @KESZLET_NAPI);
SELECT EV, HO, NAP, CIKK_ID, RAKTAR_ID, KESZLET_NYITO, KESZLET_ERTEK_NYITO, ELOZO_NAPI_ATLAGAR, BESZERZESI_AR, AKT_ATLAGAR, KESZLET_NAPI FROM KESZLET_FEJ WHERE (CIKK_ID = @CIKK_ID) AND (EV = @EV) AND (HO = @HO) AND (NAP = @NAP) AND (RAKTAR_ID = @RAKTAR_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RAKTAR_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAKTAR_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KESZLET_NYITO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KESZLET_NYITO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KESZLET_ERTEK_NYITO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KESZLET_ERTEK_NYITO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ELOZO_NAPI_ATLAGAR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELOZO_NAPI_ATLAGAR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BESZERZESI_AR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BESZERZESI_AR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AKT_ATLAGAR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKT_ATLAGAR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KESZLET_NAPI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KESZLET_NAPI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [KESZLET_FEJ] SET [EV] = @EV, [HO] = @HO, [NAP] = @NAP, [CIKK_ID] = @CIKK_ID, [RAKTAR_ID] = @RAKTAR_ID, [KESZLET_NYITO] = @KESZLET_NYITO, [KESZLET_ERTEK_NYITO] = @KESZLET_ERTEK_NYITO, [ELOZO_NAPI_ATLAGAR] = @ELOZO_NAPI_ATLAGAR, [BESZERZESI_AR] = @BESZERZESI_AR, [AKT_ATLAGAR] = @AKT_ATLAGAR, [KESZLET_NAPI] = @KESZLET_NAPI WHERE (([EV] = @Original_EV) AND ([HO] = @Original_HO) AND ([NAP] = @Original_NAP) AND ([CIKK_ID] = @Original_CIKK_ID) AND ([RAKTAR_ID] = @Original_RAKTAR_ID) AND ((@IsNull_KESZLET_NYITO = 1 AND [KESZLET_NYITO] IS NULL) OR ([KESZLET_NYITO] = @Original_KESZLET_NYITO)) AND ((@IsNull_KESZLET_ERTEK_NYITO = 1 AND [KESZLET_ERTEK_NYITO] IS NULL) OR ([KESZLET_ERTEK_NYITO] = @Original_KESZLET_ERTEK_NYITO)) AND ((@IsNull_ELOZO_NAPI_ATLAGAR = 1 AND [ELOZO_NAPI_ATLAGAR] IS NULL) OR ([ELOZO_NAPI_ATLAGAR] = @Original_ELOZO_NAPI_ATLAGAR)) AND ((@IsNull_BESZERZESI_AR = 1 AND [BESZERZESI_AR] IS NULL) OR ([BESZERZESI_AR] = @Original_BESZERZESI_AR)) AND ((@IsNull_AKT_ATLAGAR = 1 AND [AKT_ATLAGAR] IS NULL) OR ([AKT_ATLAGAR] = @Original_AKT_ATLAGAR)) AND ((@IsNull_KESZLET_NAPI = 1 AND [KESZLET_NAPI] IS NULL) OR ([KESZLET_NAPI] = @Original_KESZLET_NAPI)));
SELECT EV, HO, NAP, CIKK_ID, RAKTAR_ID, KESZLET_NYITO, KESZLET_ERTEK_NYITO, ELOZO_NAPI_ATLAGAR, BESZERZESI_AR, AKT_ATLAGAR, KESZLET_NAPI FROM KESZLET_FEJ WHERE (CIKK_ID = @CIKK_ID) AND (EV = @EV) AND (HO = @HO) AND (NAP = @NAP) AND (RAKTAR_ID = @RAKTAR_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RAKTAR_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAKTAR_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KESZLET_NYITO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KESZLET_NYITO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KESZLET_ERTEK_NYITO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KESZLET_ERTEK_NYITO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ELOZO_NAPI_ATLAGAR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELOZO_NAPI_ATLAGAR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BESZERZESI_AR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BESZERZESI_AR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AKT_ATLAGAR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKT_ATLAGAR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KESZLET_NAPI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KESZLET_NAPI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RAKTAR_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAKTAR_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KESZLET_NYITO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KESZLET_NYITO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KESZLET_NYITO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KESZLET_NYITO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KESZLET_ERTEK_NYITO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KESZLET_ERTEK_NYITO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KESZLET_ERTEK_NYITO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KESZLET_ERTEK_NYITO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ELOZO_NAPI_ATLAGAR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELOZO_NAPI_ATLAGAR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ELOZO_NAPI_ATLAGAR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELOZO_NAPI_ATLAGAR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BESZERZESI_AR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BESZERZESI_AR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BESZERZESI_AR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BESZERZESI_AR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AKT_ATLAGAR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKT_ATLAGAR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AKT_ATLAGAR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKT_ATLAGAR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KESZLET_NAPI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KESZLET_NAPI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KESZLET_NAPI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KESZLET_NAPI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::e_Cafe.Properties.Settings.Default.ECAFEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        EV, HO, NAP, CIKK_ID, RAKTAR_ID, KESZLET_NYITO, KESZLET_ERTEK_NYITO" +
                ", ELOZO_NAPI_ATLAGAR, BESZERZESI_AR, AKT_ATLAGAR, \r\n                         KES" +
                "ZLET_NAPI\r\nFROM            KESZLET_FEJ\r\nWHERE        (RAKTAR_ID = @rakt) AND (CI" +
                "KK_ID = @cikk)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rakt", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "RAKTAR_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cikk", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsKeszletInfo.KESZLET_FEJDataTable dataTable, int rakt, int cikk) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(rakt));
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(cikk));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsKeszletInfo.KESZLET_FEJDataTable GetData(int rakt, int cikk) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(rakt));
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(cikk));
            dsKeszletInfo.KESZLET_FEJDataTable dataTable = new dsKeszletInfo.KESZLET_FEJDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsKeszletInfo.KESZLET_FEJDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsKeszletInfo dataSet) {
            return this.Adapter.Update(dataSet, "KESZLET_FEJ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_EV, int Original_HO, int Original_NAP, int Original_CIKK_ID, int Original_RAKTAR_ID, global::System.Nullable<double> Original_KESZLET_NYITO, global::System.Nullable<double> Original_KESZLET_ERTEK_NYITO, global::System.Nullable<double> Original_ELOZO_NAPI_ATLAGAR, global::System.Nullable<double> Original_BESZERZESI_AR, global::System.Nullable<double> Original_AKT_ATLAGAR, global::System.Nullable<double> Original_KESZLET_NAPI) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_EV));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_HO));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_NAP));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_CIKK_ID));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_RAKTAR_ID));
            if ((Original_KESZLET_NYITO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_KESZLET_NYITO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_KESZLET_ERTEK_NYITO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_KESZLET_ERTEK_NYITO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_ELOZO_NAPI_ATLAGAR.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((double)(Original_ELOZO_NAPI_ATLAGAR.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_BESZERZESI_AR.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((double)(Original_BESZERZESI_AR.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_AKT_ATLAGAR.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((double)(Original_AKT_ATLAGAR.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_KESZLET_NAPI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((double)(Original_KESZLET_NAPI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int EV, int HO, int NAP, int CIKK_ID, int RAKTAR_ID, global::System.Nullable<double> KESZLET_NYITO, global::System.Nullable<double> KESZLET_ERTEK_NYITO, global::System.Nullable<double> ELOZO_NAPI_ATLAGAR, global::System.Nullable<double> BESZERZESI_AR, global::System.Nullable<double> AKT_ATLAGAR, global::System.Nullable<double> KESZLET_NAPI) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(EV));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(HO));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(NAP));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(CIKK_ID));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(RAKTAR_ID));
            if ((KESZLET_NYITO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(KESZLET_NYITO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((KESZLET_ERTEK_NYITO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(KESZLET_ERTEK_NYITO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ELOZO_NAPI_ATLAGAR.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(ELOZO_NAPI_ATLAGAR.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((BESZERZESI_AR.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(BESZERZESI_AR.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((AKT_ATLAGAR.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(AKT_ATLAGAR.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((KESZLET_NAPI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((double)(KESZLET_NAPI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int EV, 
                    int HO, 
                    int NAP, 
                    int CIKK_ID, 
                    int RAKTAR_ID, 
                    global::System.Nullable<double> KESZLET_NYITO, 
                    global::System.Nullable<double> KESZLET_ERTEK_NYITO, 
                    global::System.Nullable<double> ELOZO_NAPI_ATLAGAR, 
                    global::System.Nullable<double> BESZERZESI_AR, 
                    global::System.Nullable<double> AKT_ATLAGAR, 
                    global::System.Nullable<double> KESZLET_NAPI, 
                    int Original_EV, 
                    int Original_HO, 
                    int Original_NAP, 
                    int Original_CIKK_ID, 
                    int Original_RAKTAR_ID, 
                    global::System.Nullable<double> Original_KESZLET_NYITO, 
                    global::System.Nullable<double> Original_KESZLET_ERTEK_NYITO, 
                    global::System.Nullable<double> Original_ELOZO_NAPI_ATLAGAR, 
                    global::System.Nullable<double> Original_BESZERZESI_AR, 
                    global::System.Nullable<double> Original_AKT_ATLAGAR, 
                    global::System.Nullable<double> Original_KESZLET_NAPI) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(EV));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(HO));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(NAP));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(CIKK_ID));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(RAKTAR_ID));
            if ((KESZLET_NYITO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(KESZLET_NYITO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((KESZLET_ERTEK_NYITO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(KESZLET_ERTEK_NYITO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ELOZO_NAPI_ATLAGAR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(ELOZO_NAPI_ATLAGAR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((BESZERZESI_AR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(BESZERZESI_AR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((AKT_ATLAGAR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(AKT_ATLAGAR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((KESZLET_NAPI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(KESZLET_NAPI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_EV));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_HO));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_NAP));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_CIKK_ID));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_RAKTAR_ID));
            if ((Original_KESZLET_NYITO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(Original_KESZLET_NYITO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_KESZLET_ERTEK_NYITO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((double)(Original_KESZLET_ERTEK_NYITO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_ELOZO_NAPI_ATLAGAR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((double)(Original_ELOZO_NAPI_ATLAGAR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_BESZERZESI_AR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(Original_BESZERZESI_AR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_AKT_ATLAGAR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((double)(Original_AKT_ATLAGAR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_KESZLET_NAPI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(Original_KESZLET_NAPI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<double> KESZLET_NYITO, 
                    global::System.Nullable<double> KESZLET_ERTEK_NYITO, 
                    global::System.Nullable<double> ELOZO_NAPI_ATLAGAR, 
                    global::System.Nullable<double> BESZERZESI_AR, 
                    global::System.Nullable<double> AKT_ATLAGAR, 
                    global::System.Nullable<double> KESZLET_NAPI, 
                    int Original_EV, 
                    int Original_HO, 
                    int Original_NAP, 
                    int Original_CIKK_ID, 
                    int Original_RAKTAR_ID, 
                    global::System.Nullable<double> Original_KESZLET_NYITO, 
                    global::System.Nullable<double> Original_KESZLET_ERTEK_NYITO, 
                    global::System.Nullable<double> Original_ELOZO_NAPI_ATLAGAR, 
                    global::System.Nullable<double> Original_BESZERZESI_AR, 
                    global::System.Nullable<double> Original_AKT_ATLAGAR, 
                    global::System.Nullable<double> Original_KESZLET_NAPI) {
            return this.Update(Original_EV, Original_HO, Original_NAP, Original_CIKK_ID, Original_RAKTAR_ID, KESZLET_NYITO, KESZLET_ERTEK_NYITO, ELOZO_NAPI_ATLAGAR, BESZERZESI_AR, AKT_ATLAGAR, KESZLET_NAPI, Original_EV, Original_HO, Original_NAP, Original_CIKK_ID, Original_RAKTAR_ID, Original_KESZLET_NYITO, Original_KESZLET_ERTEK_NYITO, Original_ELOZO_NAPI_ATLAGAR, Original_BESZERZESI_AR, Original_AKT_ATLAGAR, Original_KESZLET_NAPI);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(false)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class KESZLET_SORTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public KESZLET_SORTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "KESZLET_SOR";
            tableMapping.ColumnMappings.Add("KESZLET_SOR_ID", "KESZLET_SOR_ID");
            tableMapping.ColumnMappings.Add("EV", "EV");
            tableMapping.ColumnMappings.Add("HO", "HO");
            tableMapping.ColumnMappings.Add("NAP", "NAP");
            tableMapping.ColumnMappings.Add("RAKTAR_ID", "RAKTAR_ID");
            tableMapping.ColumnMappings.Add("CIKK_ID", "CIKK_ID");
            tableMapping.ColumnMappings.Add("DATUM", "DATUM");
            tableMapping.ColumnMappings.Add("RENDELES_ID", "RENDELES_ID");
            tableMapping.ColumnMappings.Add("BEVETEL_ID", "BEVETEL_ID");
            tableMapping.ColumnMappings.Add("BIZONYLAT_ID", "BIZONYLAT_ID");
            tableMapping.ColumnMappings.Add("MENNYISEG", "MENNYISEG");
            tableMapping.ColumnMappings.Add("IRANY", "IRANY");
            tableMapping.ColumnMappings.Add("EGYSEGAR", "EGYSEGAR");
            tableMapping.ColumnMappings.Add("NETTO_ERTEK", "NETTO_ERTEK");
            tableMapping.ColumnMappings.Add("AFA_ERTEK", "AFA_ERTEK");
            tableMapping.ColumnMappings.Add("AFA_KOD", "AFA_KOD");
            tableMapping.ColumnMappings.Add("BRUTTO_ERTEK", "BRUTTO_ERTEK");
            tableMapping.ColumnMappings.Add("MOZGAS_TIPUS", "MOZGAS_TIPUS");
            tableMapping.ColumnMappings.Add("KESZLET_EGYS_AR", "KESZLET_EGYS_AR");
            tableMapping.ColumnMappings.Add("MOZGAS_MEGNEVEZES", "MOZGAS_MEGNEVEZES");
            tableMapping.ColumnMappings.Add("BEVETEL", "BEVETEL");
            tableMapping.ColumnMappings.Add("KIADAS", "KIADAS");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::e_Cafe.Properties.Settings.Default.ECAFEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     KESZLET_SOR.KESZLET_SOR_ID, KESZLET_SOR.EV, KESZLET_SOR.HO, KESZLET_SOR.NAP, KESZLET_SOR.RAKTAR_ID, KESZLET_SOR.CIKK_ID, 
                      KESZLET_SOR.DATUM, KESZLET_SOR.RENDELES_ID, KESZLET_SOR.BEVETEL_ID, KESZLET_SOR.BIZONYLAT_ID, KESZLET_SOR.MENNYISEG, 
                      KESZLET_SOR.IRANY, KESZLET_SOR.EGYSEGAR, KESZLET_SOR.NETTO_ERTEK, KESZLET_SOR.AFA_ERTEK, KESZLET_SOR.AFA_KOD, 
                      KESZLET_SOR.BRUTTO_ERTEK, KESZLET_SOR.MOZGAS_TIPUS, KESZLET_SOR.KESZLET_EGYS_AR, MOZGAS.MOZGAS_MEGNEVEZES, 
                      CASE WHEN IRANY > 0 THEN MENNYISEG ELSE 0 END AS BEVETEL, CASE WHEN IRANY < 0 THEN MENNYISEG ELSE 0 END AS KIADAS
FROM         KESZLET_SOR INNER JOIN
                      MOZGAS ON KESZLET_SOR.MOZGAS_TIPUS = MOZGAS.MOZGAS_ID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsKeszletInfo.KESZLET_SORDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsKeszletInfo.KESZLET_SORDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsKeszletInfo.KESZLET_SORDataTable dataTable = new dsKeszletInfo.KESZLET_SORDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(false)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private KESZLET_FEJTableAdapter _kESZLET_FEJTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public KESZLET_FEJTableAdapter KESZLET_FEJTableAdapter {
            get {
                return this._kESZLET_FEJTableAdapter;
            }
            set {
                this._kESZLET_FEJTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._kESZLET_FEJTableAdapter != null) 
                            && (this._kESZLET_FEJTableAdapter.Connection != null))) {
                    return this._kESZLET_FEJTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._kESZLET_FEJTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(dsKeszletInfo dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._kESZLET_FEJTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.KESZLET_FEJ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._kESZLET_FEJTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(dsKeszletInfo dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._kESZLET_FEJTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.KESZLET_FEJ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._kESZLET_FEJTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(dsKeszletInfo dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._kESZLET_FEJTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.KESZLET_FEJ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._kESZLET_FEJTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(dsKeszletInfo dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._kESZLET_FEJTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._kESZLET_FEJTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._kESZLET_FEJTableAdapter != null)) {
                    revertConnections.Add(this._kESZLET_FEJTableAdapter, this._kESZLET_FEJTableAdapter.Connection);
                    this._kESZLET_FEJTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._kESZLET_FEJTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._kESZLET_FEJTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._kESZLET_FEJTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._kESZLET_FEJTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._kESZLET_FEJTableAdapter != null)) {
                    this._kESZLET_FEJTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._kESZLET_FEJTableAdapter]));
                    this._kESZLET_FEJTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591