//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace e_Cafe.SQL.DataSets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsRepSzamla")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsRepSzamla : global::System.Data.DataSet {
        
        private BLOKK_TETELDataTable tableBLOKK_TETEL;
        
        private SZAMLA_FEJDataTable tableSZAMLA_FEJ;
        
        private _CEGDataTable table_CEG;
        
        private global::System.Data.DataRelation relationBLOKK_TETEL_SZAMLA_FEJ;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsRepSzamla() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsRepSzamla(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["BLOKK_TETEL"] != null)) {
                    base.Tables.Add(new BLOKK_TETELDataTable(ds.Tables["BLOKK_TETEL"]));
                }
                if ((ds.Tables["SZAMLA_FEJ"] != null)) {
                    base.Tables.Add(new SZAMLA_FEJDataTable(ds.Tables["SZAMLA_FEJ"]));
                }
                if ((ds.Tables["_CEG"] != null)) {
                    base.Tables.Add(new _CEGDataTable(ds.Tables["_CEG"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BLOKK_TETELDataTable BLOKK_TETEL {
            get {
                return this.tableBLOKK_TETEL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SZAMLA_FEJDataTable SZAMLA_FEJ {
            get {
                return this.tableSZAMLA_FEJ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _CEGDataTable _CEG {
            get {
                return this.table_CEG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsRepSzamla cln = ((dsRepSzamla)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["BLOKK_TETEL"] != null)) {
                    base.Tables.Add(new BLOKK_TETELDataTable(ds.Tables["BLOKK_TETEL"]));
                }
                if ((ds.Tables["SZAMLA_FEJ"] != null)) {
                    base.Tables.Add(new SZAMLA_FEJDataTable(ds.Tables["SZAMLA_FEJ"]));
                }
                if ((ds.Tables["_CEG"] != null)) {
                    base.Tables.Add(new _CEGDataTable(ds.Tables["_CEG"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableBLOKK_TETEL = ((BLOKK_TETELDataTable)(base.Tables["BLOKK_TETEL"]));
            if ((initTable == true)) {
                if ((this.tableBLOKK_TETEL != null)) {
                    this.tableBLOKK_TETEL.InitVars();
                }
            }
            this.tableSZAMLA_FEJ = ((SZAMLA_FEJDataTable)(base.Tables["SZAMLA_FEJ"]));
            if ((initTable == true)) {
                if ((this.tableSZAMLA_FEJ != null)) {
                    this.tableSZAMLA_FEJ.InitVars();
                }
            }
            this.table_CEG = ((_CEGDataTable)(base.Tables["_CEG"]));
            if ((initTable == true)) {
                if ((this.table_CEG != null)) {
                    this.table_CEG.InitVars();
                }
            }
            this.relationBLOKK_TETEL_SZAMLA_FEJ = this.Relations["BLOKK_TETEL_SZAMLA_FEJ"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsRepSzamla";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsRepSzamla.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableBLOKK_TETEL = new BLOKK_TETELDataTable();
            base.Tables.Add(this.tableBLOKK_TETEL);
            this.tableSZAMLA_FEJ = new SZAMLA_FEJDataTable();
            base.Tables.Add(this.tableSZAMLA_FEJ);
            this.table_CEG = new _CEGDataTable();
            base.Tables.Add(this.table_CEG);
            this.relationBLOKK_TETEL_SZAMLA_FEJ = new global::System.Data.DataRelation("BLOKK_TETEL_SZAMLA_FEJ", new global::System.Data.DataColumn[] {
                        this.tableBLOKK_TETEL.SZAMLA_FEJ_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableSZAMLA_FEJ.SZAMLA_FEJ_IDColumn}, false);
            this.Relations.Add(this.relationBLOKK_TETEL_SZAMLA_FEJ);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBLOKK_TETEL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSZAMLA_FEJ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_CEG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsRepSzamla ds = new dsRepSzamla();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void BLOKK_TETELRowChangeEventHandler(object sender, BLOKK_TETELRowChangeEvent e);
        
        public delegate void SZAMLA_FEJRowChangeEventHandler(object sender, SZAMLA_FEJRowChangeEvent e);
        
        public delegate void _CEGRowChangeEventHandler(object sender, _CEGRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BLOKK_TETELDataTable : global::System.Data.TypedTableBase<BLOKK_TETELRow> {
            
            private global::System.Data.DataColumn columnMENNYISEG;
            
            private global::System.Data.DataColumn columnEGYSEGAR;
            
            private global::System.Data.DataColumn columnNETTO;
            
            private global::System.Data.DataColumn columnAFA;
            
            private global::System.Data.DataColumn columnBRUTTO;
            
            private global::System.Data.DataColumn columnCIKK_MEGNEVEZES;
            
            private global::System.Data.DataColumn columnSZAMLA_FEJ_ID;
            
            private global::System.Data.DataColumn columnMEGYS_MEGNEVEZES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BLOKK_TETELDataTable() {
                this.TableName = "BLOKK_TETEL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BLOKK_TETELDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BLOKK_TETELDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MENNYISEGColumn {
                get {
                    return this.columnMENNYISEG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EGYSEGARColumn {
                get {
                    return this.columnEGYSEGAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NETTOColumn {
                get {
                    return this.columnNETTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AFAColumn {
                get {
                    return this.columnAFA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRUTTOColumn {
                get {
                    return this.columnBRUTTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CIKK_MEGNEVEZESColumn {
                get {
                    return this.columnCIKK_MEGNEVEZES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SZAMLA_FEJ_IDColumn {
                get {
                    return this.columnSZAMLA_FEJ_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MEGYS_MEGNEVEZESColumn {
                get {
                    return this.columnMEGYS_MEGNEVEZES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BLOKK_TETELRow this[int index] {
                get {
                    return ((BLOKK_TETELRow)(this.Rows[index]));
                }
            }
            
            public event BLOKK_TETELRowChangeEventHandler BLOKK_TETELRowChanging;
            
            public event BLOKK_TETELRowChangeEventHandler BLOKK_TETELRowChanged;
            
            public event BLOKK_TETELRowChangeEventHandler BLOKK_TETELRowDeleting;
            
            public event BLOKK_TETELRowChangeEventHandler BLOKK_TETELRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBLOKK_TETELRow(BLOKK_TETELRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BLOKK_TETELRow AddBLOKK_TETELRow(double MENNYISEG, double EGYSEGAR, double NETTO, double AFA, double BRUTTO, string CIKK_MEGNEVEZES, int SZAMLA_FEJ_ID, string MEGYS_MEGNEVEZES) {
                BLOKK_TETELRow rowBLOKK_TETELRow = ((BLOKK_TETELRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MENNYISEG,
                        EGYSEGAR,
                        NETTO,
                        AFA,
                        BRUTTO,
                        CIKK_MEGNEVEZES,
                        SZAMLA_FEJ_ID,
                        MEGYS_MEGNEVEZES};
                rowBLOKK_TETELRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBLOKK_TETELRow);
                return rowBLOKK_TETELRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BLOKK_TETELDataTable cln = ((BLOKK_TETELDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BLOKK_TETELDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMENNYISEG = base.Columns["MENNYISEG"];
                this.columnEGYSEGAR = base.Columns["EGYSEGAR"];
                this.columnNETTO = base.Columns["NETTO"];
                this.columnAFA = base.Columns["AFA"];
                this.columnBRUTTO = base.Columns["BRUTTO"];
                this.columnCIKK_MEGNEVEZES = base.Columns["CIKK_MEGNEVEZES"];
                this.columnSZAMLA_FEJ_ID = base.Columns["SZAMLA_FEJ_ID"];
                this.columnMEGYS_MEGNEVEZES = base.Columns["MEGYS_MEGNEVEZES"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMENNYISEG = new global::System.Data.DataColumn("MENNYISEG", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMENNYISEG);
                this.columnEGYSEGAR = new global::System.Data.DataColumn("EGYSEGAR", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEGYSEGAR);
                this.columnNETTO = new global::System.Data.DataColumn("NETTO", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNETTO);
                this.columnAFA = new global::System.Data.DataColumn("AFA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAFA);
                this.columnBRUTTO = new global::System.Data.DataColumn("BRUTTO", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRUTTO);
                this.columnCIKK_MEGNEVEZES = new global::System.Data.DataColumn("CIKK_MEGNEVEZES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCIKK_MEGNEVEZES);
                this.columnSZAMLA_FEJ_ID = new global::System.Data.DataColumn("SZAMLA_FEJ_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSZAMLA_FEJ_ID);
                this.columnMEGYS_MEGNEVEZES = new global::System.Data.DataColumn("MEGYS_MEGNEVEZES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEGYS_MEGNEVEZES);
                this.columnCIKK_MEGNEVEZES.MaxLength = 50;
                this.columnSZAMLA_FEJ_ID.AllowDBNull = false;
                this.columnMEGYS_MEGNEVEZES.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BLOKK_TETELRow NewBLOKK_TETELRow() {
                return ((BLOKK_TETELRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BLOKK_TETELRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BLOKK_TETELRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BLOKK_TETELRowChanged != null)) {
                    this.BLOKK_TETELRowChanged(this, new BLOKK_TETELRowChangeEvent(((BLOKK_TETELRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BLOKK_TETELRowChanging != null)) {
                    this.BLOKK_TETELRowChanging(this, new BLOKK_TETELRowChangeEvent(((BLOKK_TETELRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BLOKK_TETELRowDeleted != null)) {
                    this.BLOKK_TETELRowDeleted(this, new BLOKK_TETELRowChangeEvent(((BLOKK_TETELRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BLOKK_TETELRowDeleting != null)) {
                    this.BLOKK_TETELRowDeleting(this, new BLOKK_TETELRowChangeEvent(((BLOKK_TETELRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBLOKK_TETELRow(BLOKK_TETELRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRepSzamla ds = new dsRepSzamla();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BLOKK_TETELDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SZAMLA_FEJDataTable : global::System.Data.TypedTableBase<SZAMLA_FEJRow> {
            
            private global::System.Data.DataColumn columnSZAMLA_FEJ_ID;
            
            private global::System.Data.DataColumn columnSZAMLA_SORSZAM;
            
            private global::System.Data.DataColumn columnPARTNER_ID;
            
            private global::System.Data.DataColumn columnRENDELES_ID;
            
            private global::System.Data.DataColumn columnOSSZESEN_NETTO;
            
            private global::System.Data.DataColumn columnOSSZESEN_BRUTTO;
            
            private global::System.Data.DataColumn columnOSSZESEN_AFA;
            
            private global::System.Data.DataColumn columnKEDVEZMENY;
            
            private global::System.Data.DataColumn columnFIZETETT_OSSZEG;
            
            private global::System.Data.DataColumn columnFIZETESI_MOD;
            
            private global::System.Data.DataColumn columnSZAMLA_DATUMA;
            
            private global::System.Data.DataColumn columnEV;
            
            private global::System.Data.DataColumn columnHO;
            
            private global::System.Data.DataColumn columnNAP;
            
            private global::System.Data.DataColumn columnUSER_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZAMLA_FEJDataTable() {
                this.TableName = "SZAMLA_FEJ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SZAMLA_FEJDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SZAMLA_FEJDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SZAMLA_FEJ_IDColumn {
                get {
                    return this.columnSZAMLA_FEJ_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SZAMLA_SORSZAMColumn {
                get {
                    return this.columnSZAMLA_SORSZAM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PARTNER_IDColumn {
                get {
                    return this.columnPARTNER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RENDELES_IDColumn {
                get {
                    return this.columnRENDELES_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OSSZESEN_NETTOColumn {
                get {
                    return this.columnOSSZESEN_NETTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OSSZESEN_BRUTTOColumn {
                get {
                    return this.columnOSSZESEN_BRUTTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OSSZESEN_AFAColumn {
                get {
                    return this.columnOSSZESEN_AFA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KEDVEZMENYColumn {
                get {
                    return this.columnKEDVEZMENY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FIZETETT_OSSZEGColumn {
                get {
                    return this.columnFIZETETT_OSSZEG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FIZETESI_MODColumn {
                get {
                    return this.columnFIZETESI_MOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SZAMLA_DATUMAColumn {
                get {
                    return this.columnSZAMLA_DATUMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EVColumn {
                get {
                    return this.columnEV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HOColumn {
                get {
                    return this.columnHO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAPColumn {
                get {
                    return this.columnNAP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USER_IDColumn {
                get {
                    return this.columnUSER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZAMLA_FEJRow this[int index] {
                get {
                    return ((SZAMLA_FEJRow)(this.Rows[index]));
                }
            }
            
            public event SZAMLA_FEJRowChangeEventHandler SZAMLA_FEJRowChanging;
            
            public event SZAMLA_FEJRowChangeEventHandler SZAMLA_FEJRowChanged;
            
            public event SZAMLA_FEJRowChangeEventHandler SZAMLA_FEJRowDeleting;
            
            public event SZAMLA_FEJRowChangeEventHandler SZAMLA_FEJRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSZAMLA_FEJRow(SZAMLA_FEJRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZAMLA_FEJRow AddSZAMLA_FEJRow(string SZAMLA_SORSZAM, int PARTNER_ID, int RENDELES_ID, double OSSZESEN_NETTO, double OSSZESEN_BRUTTO, double OSSZESEN_AFA, double KEDVEZMENY, double FIZETETT_OSSZEG, int FIZETESI_MOD, System.DateTime SZAMLA_DATUMA, int EV, int HO, int NAP, int USER_ID) {
                SZAMLA_FEJRow rowSZAMLA_FEJRow = ((SZAMLA_FEJRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SZAMLA_SORSZAM,
                        PARTNER_ID,
                        RENDELES_ID,
                        OSSZESEN_NETTO,
                        OSSZESEN_BRUTTO,
                        OSSZESEN_AFA,
                        KEDVEZMENY,
                        FIZETETT_OSSZEG,
                        FIZETESI_MOD,
                        SZAMLA_DATUMA,
                        EV,
                        HO,
                        NAP,
                        USER_ID};
                rowSZAMLA_FEJRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSZAMLA_FEJRow);
                return rowSZAMLA_FEJRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZAMLA_FEJRow FindBySZAMLA_FEJ_ID(int SZAMLA_FEJ_ID) {
                return ((SZAMLA_FEJRow)(this.Rows.Find(new object[] {
                            SZAMLA_FEJ_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SZAMLA_FEJDataTable cln = ((SZAMLA_FEJDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SZAMLA_FEJDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSZAMLA_FEJ_ID = base.Columns["SZAMLA_FEJ_ID"];
                this.columnSZAMLA_SORSZAM = base.Columns["SZAMLA_SORSZAM"];
                this.columnPARTNER_ID = base.Columns["PARTNER_ID"];
                this.columnRENDELES_ID = base.Columns["RENDELES_ID"];
                this.columnOSSZESEN_NETTO = base.Columns["OSSZESEN_NETTO"];
                this.columnOSSZESEN_BRUTTO = base.Columns["OSSZESEN_BRUTTO"];
                this.columnOSSZESEN_AFA = base.Columns["OSSZESEN_AFA"];
                this.columnKEDVEZMENY = base.Columns["KEDVEZMENY"];
                this.columnFIZETETT_OSSZEG = base.Columns["FIZETETT_OSSZEG"];
                this.columnFIZETESI_MOD = base.Columns["FIZETESI_MOD"];
                this.columnSZAMLA_DATUMA = base.Columns["SZAMLA_DATUMA"];
                this.columnEV = base.Columns["EV"];
                this.columnHO = base.Columns["HO"];
                this.columnNAP = base.Columns["NAP"];
                this.columnUSER_ID = base.Columns["USER_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSZAMLA_FEJ_ID = new global::System.Data.DataColumn("SZAMLA_FEJ_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSZAMLA_FEJ_ID);
                this.columnSZAMLA_SORSZAM = new global::System.Data.DataColumn("SZAMLA_SORSZAM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSZAMLA_SORSZAM);
                this.columnPARTNER_ID = new global::System.Data.DataColumn("PARTNER_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARTNER_ID);
                this.columnRENDELES_ID = new global::System.Data.DataColumn("RENDELES_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRENDELES_ID);
                this.columnOSSZESEN_NETTO = new global::System.Data.DataColumn("OSSZESEN_NETTO", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSSZESEN_NETTO);
                this.columnOSSZESEN_BRUTTO = new global::System.Data.DataColumn("OSSZESEN_BRUTTO", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSSZESEN_BRUTTO);
                this.columnOSSZESEN_AFA = new global::System.Data.DataColumn("OSSZESEN_AFA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSSZESEN_AFA);
                this.columnKEDVEZMENY = new global::System.Data.DataColumn("KEDVEZMENY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEDVEZMENY);
                this.columnFIZETETT_OSSZEG = new global::System.Data.DataColumn("FIZETETT_OSSZEG", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIZETETT_OSSZEG);
                this.columnFIZETESI_MOD = new global::System.Data.DataColumn("FIZETESI_MOD", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIZETESI_MOD);
                this.columnSZAMLA_DATUMA = new global::System.Data.DataColumn("SZAMLA_DATUMA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSZAMLA_DATUMA);
                this.columnEV = new global::System.Data.DataColumn("EV", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEV);
                this.columnHO = new global::System.Data.DataColumn("HO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHO);
                this.columnNAP = new global::System.Data.DataColumn("NAP", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAP);
                this.columnUSER_ID = new global::System.Data.DataColumn("USER_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSZAMLA_FEJ_ID}, true));
                this.columnSZAMLA_FEJ_ID.AutoIncrement = true;
                this.columnSZAMLA_FEJ_ID.AutoIncrementSeed = -1;
                this.columnSZAMLA_FEJ_ID.AutoIncrementStep = -1;
                this.columnSZAMLA_FEJ_ID.AllowDBNull = false;
                this.columnSZAMLA_FEJ_ID.ReadOnly = true;
                this.columnSZAMLA_FEJ_ID.Unique = true;
                this.columnSZAMLA_SORSZAM.MaxLength = 50;
                this.columnEV.AllowDBNull = false;
                this.columnHO.AllowDBNull = false;
                this.columnNAP.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZAMLA_FEJRow NewSZAMLA_FEJRow() {
                return ((SZAMLA_FEJRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SZAMLA_FEJRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SZAMLA_FEJRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SZAMLA_FEJRowChanged != null)) {
                    this.SZAMLA_FEJRowChanged(this, new SZAMLA_FEJRowChangeEvent(((SZAMLA_FEJRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SZAMLA_FEJRowChanging != null)) {
                    this.SZAMLA_FEJRowChanging(this, new SZAMLA_FEJRowChangeEvent(((SZAMLA_FEJRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SZAMLA_FEJRowDeleted != null)) {
                    this.SZAMLA_FEJRowDeleted(this, new SZAMLA_FEJRowChangeEvent(((SZAMLA_FEJRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SZAMLA_FEJRowDeleting != null)) {
                    this.SZAMLA_FEJRowDeleting(this, new SZAMLA_FEJRowChangeEvent(((SZAMLA_FEJRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSZAMLA_FEJRow(SZAMLA_FEJRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRepSzamla ds = new dsRepSzamla();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SZAMLA_FEJDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _CEGDataTable : global::System.Data.TypedTableBase<_CEGRow> {
            
            private global::System.Data.DataColumn columnCEG_ID;
            
            private global::System.Data.DataColumn columnCEG_NEV;
            
            private global::System.Data.DataColumn columnCEG_CIM;
            
            private global::System.Data.DataColumn columnBLOKK_FOOTER;
            
            private global::System.Data.DataColumn columnBLOKK_FOOTER2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _CEGDataTable() {
                this.TableName = "_CEG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _CEGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _CEGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CEG_IDColumn {
                get {
                    return this.columnCEG_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CEG_NEVColumn {
                get {
                    return this.columnCEG_NEV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CEG_CIMColumn {
                get {
                    return this.columnCEG_CIM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLOKK_FOOTERColumn {
                get {
                    return this.columnBLOKK_FOOTER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLOKK_FOOTER2Column {
                get {
                    return this.columnBLOKK_FOOTER2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _CEGRow this[int index] {
                get {
                    return ((_CEGRow)(this.Rows[index]));
                }
            }
            
            public event _CEGRowChangeEventHandler _CEGRowChanging;
            
            public event _CEGRowChangeEventHandler _CEGRowChanged;
            
            public event _CEGRowChangeEventHandler _CEGRowDeleting;
            
            public event _CEGRowChangeEventHandler _CEGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_CEGRow(_CEGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _CEGRow Add_CEGRow(int CEG_ID, string CEG_NEV, string CEG_CIM, string BLOKK_FOOTER, string BLOKK_FOOTER2) {
                _CEGRow row_CEGRow = ((_CEGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CEG_ID,
                        CEG_NEV,
                        CEG_CIM,
                        BLOKK_FOOTER,
                        BLOKK_FOOTER2};
                row_CEGRow.ItemArray = columnValuesArray;
                this.Rows.Add(row_CEGRow);
                return row_CEGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                _CEGDataTable cln = ((_CEGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new _CEGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCEG_ID = base.Columns["CEG_ID"];
                this.columnCEG_NEV = base.Columns["CEG_NEV"];
                this.columnCEG_CIM = base.Columns["CEG_CIM"];
                this.columnBLOKK_FOOTER = base.Columns["BLOKK_FOOTER"];
                this.columnBLOKK_FOOTER2 = base.Columns["BLOKK_FOOTER2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCEG_ID = new global::System.Data.DataColumn("CEG_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCEG_ID);
                this.columnCEG_NEV = new global::System.Data.DataColumn("CEG_NEV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCEG_NEV);
                this.columnCEG_CIM = new global::System.Data.DataColumn("CEG_CIM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCEG_CIM);
                this.columnBLOKK_FOOTER = new global::System.Data.DataColumn("BLOKK_FOOTER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLOKK_FOOTER);
                this.columnBLOKK_FOOTER2 = new global::System.Data.DataColumn("BLOKK_FOOTER2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLOKK_FOOTER2);
                this.columnCEG_NEV.MaxLength = 100;
                this.columnCEG_CIM.MaxLength = 100;
                this.columnBLOKK_FOOTER.MaxLength = 100;
                this.columnBLOKK_FOOTER2.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _CEGRow New_CEGRow() {
                return ((_CEGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new _CEGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(_CEGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._CEGRowChanged != null)) {
                    this._CEGRowChanged(this, new _CEGRowChangeEvent(((_CEGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._CEGRowChanging != null)) {
                    this._CEGRowChanging(this, new _CEGRowChangeEvent(((_CEGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._CEGRowDeleted != null)) {
                    this._CEGRowDeleted(this, new _CEGRowChangeEvent(((_CEGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._CEGRowDeleting != null)) {
                    this._CEGRowDeleting(this, new _CEGRowChangeEvent(((_CEGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_CEGRow(_CEGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRepSzamla ds = new dsRepSzamla();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_CEGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BLOKK_TETELRow : global::System.Data.DataRow {
            
            private BLOKK_TETELDataTable tableBLOKK_TETEL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BLOKK_TETELRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBLOKK_TETEL = ((BLOKK_TETELDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MENNYISEG {
                get {
                    try {
                        return ((double)(this[this.tableBLOKK_TETEL.MENNYISEGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MENNYISEG\' in table \'BLOKK_TETEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBLOKK_TETEL.MENNYISEGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double EGYSEGAR {
                get {
                    try {
                        return ((double)(this[this.tableBLOKK_TETEL.EGYSEGARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EGYSEGAR\' in table \'BLOKK_TETEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBLOKK_TETEL.EGYSEGARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double NETTO {
                get {
                    try {
                        return ((double)(this[this.tableBLOKK_TETEL.NETTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NETTO\' in table \'BLOKK_TETEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBLOKK_TETEL.NETTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AFA {
                get {
                    try {
                        return ((double)(this[this.tableBLOKK_TETEL.AFAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AFA\' in table \'BLOKK_TETEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBLOKK_TETEL.AFAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BRUTTO {
                get {
                    try {
                        return ((double)(this[this.tableBLOKK_TETEL.BRUTTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BRUTTO\' in table \'BLOKK_TETEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBLOKK_TETEL.BRUTTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CIKK_MEGNEVEZES {
                get {
                    try {
                        return ((string)(this[this.tableBLOKK_TETEL.CIKK_MEGNEVEZESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CIKK_MEGNEVEZES\' in table \'BLOKK_TETEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBLOKK_TETEL.CIKK_MEGNEVEZESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SZAMLA_FEJ_ID {
                get {
                    return ((int)(this[this.tableBLOKK_TETEL.SZAMLA_FEJ_IDColumn]));
                }
                set {
                    this[this.tableBLOKK_TETEL.SZAMLA_FEJ_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MEGYS_MEGNEVEZES {
                get {
                    try {
                        return ((string)(this[this.tableBLOKK_TETEL.MEGYS_MEGNEVEZESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEGYS_MEGNEVEZES\' in table \'BLOKK_TETEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBLOKK_TETEL.MEGYS_MEGNEVEZESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMENNYISEGNull() {
                return this.IsNull(this.tableBLOKK_TETEL.MENNYISEGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMENNYISEGNull() {
                this[this.tableBLOKK_TETEL.MENNYISEGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEGYSEGARNull() {
                return this.IsNull(this.tableBLOKK_TETEL.EGYSEGARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEGYSEGARNull() {
                this[this.tableBLOKK_TETEL.EGYSEGARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNETTONull() {
                return this.IsNull(this.tableBLOKK_TETEL.NETTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNETTONull() {
                this[this.tableBLOKK_TETEL.NETTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAFANull() {
                return this.IsNull(this.tableBLOKK_TETEL.AFAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAFANull() {
                this[this.tableBLOKK_TETEL.AFAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRUTTONull() {
                return this.IsNull(this.tableBLOKK_TETEL.BRUTTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRUTTONull() {
                this[this.tableBLOKK_TETEL.BRUTTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCIKK_MEGNEVEZESNull() {
                return this.IsNull(this.tableBLOKK_TETEL.CIKK_MEGNEVEZESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCIKK_MEGNEVEZESNull() {
                this[this.tableBLOKK_TETEL.CIKK_MEGNEVEZESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMEGYS_MEGNEVEZESNull() {
                return this.IsNull(this.tableBLOKK_TETEL.MEGYS_MEGNEVEZESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMEGYS_MEGNEVEZESNull() {
                this[this.tableBLOKK_TETEL.MEGYS_MEGNEVEZESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZAMLA_FEJRow[] GetSZAMLA_FEJRows() {
                if ((this.Table.ChildRelations["BLOKK_TETEL_SZAMLA_FEJ"] == null)) {
                    return new SZAMLA_FEJRow[0];
                }
                else {
                    return ((SZAMLA_FEJRow[])(base.GetChildRows(this.Table.ChildRelations["BLOKK_TETEL_SZAMLA_FEJ"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SZAMLA_FEJRow : global::System.Data.DataRow {
            
            private SZAMLA_FEJDataTable tableSZAMLA_FEJ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SZAMLA_FEJRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSZAMLA_FEJ = ((SZAMLA_FEJDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SZAMLA_FEJ_ID {
                get {
                    return ((int)(this[this.tableSZAMLA_FEJ.SZAMLA_FEJ_IDColumn]));
                }
                set {
                    this[this.tableSZAMLA_FEJ.SZAMLA_FEJ_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SZAMLA_SORSZAM {
                get {
                    try {
                        return ((string)(this[this.tableSZAMLA_FEJ.SZAMLA_SORSZAMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SZAMLA_SORSZAM\' in table \'SZAMLA_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_FEJ.SZAMLA_SORSZAMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PARTNER_ID {
                get {
                    try {
                        return ((int)(this[this.tableSZAMLA_FEJ.PARTNER_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PARTNER_ID\' in table \'SZAMLA_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_FEJ.PARTNER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RENDELES_ID {
                get {
                    try {
                        return ((int)(this[this.tableSZAMLA_FEJ.RENDELES_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RENDELES_ID\' in table \'SZAMLA_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_FEJ.RENDELES_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double OSSZESEN_NETTO {
                get {
                    try {
                        return ((double)(this[this.tableSZAMLA_FEJ.OSSZESEN_NETTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OSSZESEN_NETTO\' in table \'SZAMLA_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_FEJ.OSSZESEN_NETTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double OSSZESEN_BRUTTO {
                get {
                    try {
                        return ((double)(this[this.tableSZAMLA_FEJ.OSSZESEN_BRUTTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OSSZESEN_BRUTTO\' in table \'SZAMLA_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_FEJ.OSSZESEN_BRUTTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double OSSZESEN_AFA {
                get {
                    try {
                        return ((double)(this[this.tableSZAMLA_FEJ.OSSZESEN_AFAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OSSZESEN_AFA\' in table \'SZAMLA_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_FEJ.OSSZESEN_AFAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double KEDVEZMENY {
                get {
                    try {
                        return ((double)(this[this.tableSZAMLA_FEJ.KEDVEZMENYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KEDVEZMENY\' in table \'SZAMLA_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_FEJ.KEDVEZMENYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FIZETETT_OSSZEG {
                get {
                    try {
                        return ((double)(this[this.tableSZAMLA_FEJ.FIZETETT_OSSZEGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FIZETETT_OSSZEG\' in table \'SZAMLA_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_FEJ.FIZETETT_OSSZEGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FIZETESI_MOD {
                get {
                    try {
                        return ((int)(this[this.tableSZAMLA_FEJ.FIZETESI_MODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FIZETESI_MOD\' in table \'SZAMLA_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_FEJ.FIZETESI_MODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SZAMLA_DATUMA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSZAMLA_FEJ.SZAMLA_DATUMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SZAMLA_DATUMA\' in table \'SZAMLA_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_FEJ.SZAMLA_DATUMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EV {
                get {
                    return ((int)(this[this.tableSZAMLA_FEJ.EVColumn]));
                }
                set {
                    this[this.tableSZAMLA_FEJ.EVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HO {
                get {
                    return ((int)(this[this.tableSZAMLA_FEJ.HOColumn]));
                }
                set {
                    this[this.tableSZAMLA_FEJ.HOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NAP {
                get {
                    return ((int)(this[this.tableSZAMLA_FEJ.NAPColumn]));
                }
                set {
                    this[this.tableSZAMLA_FEJ.NAPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USER_ID {
                get {
                    try {
                        return ((int)(this[this.tableSZAMLA_FEJ.USER_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USER_ID\' in table \'SZAMLA_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_FEJ.USER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BLOKK_TETELRow BLOKK_TETELRow {
                get {
                    return ((BLOKK_TETELRow)(this.GetParentRow(this.Table.ParentRelations["BLOKK_TETEL_SZAMLA_FEJ"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["BLOKK_TETEL_SZAMLA_FEJ"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSZAMLA_SORSZAMNull() {
                return this.IsNull(this.tableSZAMLA_FEJ.SZAMLA_SORSZAMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSZAMLA_SORSZAMNull() {
                this[this.tableSZAMLA_FEJ.SZAMLA_SORSZAMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPARTNER_IDNull() {
                return this.IsNull(this.tableSZAMLA_FEJ.PARTNER_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPARTNER_IDNull() {
                this[this.tableSZAMLA_FEJ.PARTNER_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRENDELES_IDNull() {
                return this.IsNull(this.tableSZAMLA_FEJ.RENDELES_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRENDELES_IDNull() {
                this[this.tableSZAMLA_FEJ.RENDELES_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSSZESEN_NETTONull() {
                return this.IsNull(this.tableSZAMLA_FEJ.OSSZESEN_NETTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSSZESEN_NETTONull() {
                this[this.tableSZAMLA_FEJ.OSSZESEN_NETTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSSZESEN_BRUTTONull() {
                return this.IsNull(this.tableSZAMLA_FEJ.OSSZESEN_BRUTTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSSZESEN_BRUTTONull() {
                this[this.tableSZAMLA_FEJ.OSSZESEN_BRUTTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSSZESEN_AFANull() {
                return this.IsNull(this.tableSZAMLA_FEJ.OSSZESEN_AFAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSSZESEN_AFANull() {
                this[this.tableSZAMLA_FEJ.OSSZESEN_AFAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKEDVEZMENYNull() {
                return this.IsNull(this.tableSZAMLA_FEJ.KEDVEZMENYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKEDVEZMENYNull() {
                this[this.tableSZAMLA_FEJ.KEDVEZMENYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFIZETETT_OSSZEGNull() {
                return this.IsNull(this.tableSZAMLA_FEJ.FIZETETT_OSSZEGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFIZETETT_OSSZEGNull() {
                this[this.tableSZAMLA_FEJ.FIZETETT_OSSZEGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFIZETESI_MODNull() {
                return this.IsNull(this.tableSZAMLA_FEJ.FIZETESI_MODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFIZETESI_MODNull() {
                this[this.tableSZAMLA_FEJ.FIZETESI_MODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSZAMLA_DATUMANull() {
                return this.IsNull(this.tableSZAMLA_FEJ.SZAMLA_DATUMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSZAMLA_DATUMANull() {
                this[this.tableSZAMLA_FEJ.SZAMLA_DATUMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSER_IDNull() {
                return this.IsNull(this.tableSZAMLA_FEJ.USER_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSER_IDNull() {
                this[this.tableSZAMLA_FEJ.USER_IDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _CEGRow : global::System.Data.DataRow {
            
            private _CEGDataTable table_CEG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _CEGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table_CEG = ((_CEGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CEG_ID {
                get {
                    try {
                        return ((int)(this[this.table_CEG.CEG_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CEG_ID\' in table \'_CEG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_CEG.CEG_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CEG_NEV {
                get {
                    try {
                        return ((string)(this[this.table_CEG.CEG_NEVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CEG_NEV\' in table \'_CEG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_CEG.CEG_NEVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CEG_CIM {
                get {
                    try {
                        return ((string)(this[this.table_CEG.CEG_CIMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CEG_CIM\' in table \'_CEG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_CEG.CEG_CIMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BLOKK_FOOTER {
                get {
                    try {
                        return ((string)(this[this.table_CEG.BLOKK_FOOTERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BLOKK_FOOTER\' in table \'_CEG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_CEG.BLOKK_FOOTERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BLOKK_FOOTER2 {
                get {
                    try {
                        return ((string)(this[this.table_CEG.BLOKK_FOOTER2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BLOKK_FOOTER2\' in table \'_CEG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_CEG.BLOKK_FOOTER2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCEG_IDNull() {
                return this.IsNull(this.table_CEG.CEG_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCEG_IDNull() {
                this[this.table_CEG.CEG_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCEG_NEVNull() {
                return this.IsNull(this.table_CEG.CEG_NEVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCEG_NEVNull() {
                this[this.table_CEG.CEG_NEVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCEG_CIMNull() {
                return this.IsNull(this.table_CEG.CEG_CIMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCEG_CIMNull() {
                this[this.table_CEG.CEG_CIMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLOKK_FOOTERNull() {
                return this.IsNull(this.table_CEG.BLOKK_FOOTERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLOKK_FOOTERNull() {
                this[this.table_CEG.BLOKK_FOOTERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLOKK_FOOTER2Null() {
                return this.IsNull(this.table_CEG.BLOKK_FOOTER2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLOKK_FOOTER2Null() {
                this[this.table_CEG.BLOKK_FOOTER2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BLOKK_TETELRowChangeEvent : global::System.EventArgs {
            
            private BLOKK_TETELRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BLOKK_TETELRowChangeEvent(BLOKK_TETELRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BLOKK_TETELRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SZAMLA_FEJRowChangeEvent : global::System.EventArgs {
            
            private SZAMLA_FEJRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZAMLA_FEJRowChangeEvent(SZAMLA_FEJRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZAMLA_FEJRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _CEGRowChangeEvent : global::System.EventArgs {
            
            private _CEGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _CEGRowChangeEvent(_CEGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _CEGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace e_Cafe.SQL.DataSets.dsRepSzamlaTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BLOKK_TETELTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BLOKK_TETELTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BLOKK_TETEL";
            tableMapping.ColumnMappings.Add("MENNYISEG", "MENNYISEG");
            tableMapping.ColumnMappings.Add("EGYSEGAR", "EGYSEGAR");
            tableMapping.ColumnMappings.Add("NETTO", "NETTO");
            tableMapping.ColumnMappings.Add("AFA", "AFA");
            tableMapping.ColumnMappings.Add("BRUTTO", "BRUTTO");
            tableMapping.ColumnMappings.Add("CIKK_MEGNEVEZES", "CIKK_MEGNEVEZES");
            tableMapping.ColumnMappings.Add("SZAMLA_FEJ_ID", "SZAMLA_FEJ_ID");
            tableMapping.ColumnMappings.Add("MEGYS_MEGNEVEZES", "MEGYS_MEGNEVEZES");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::e_Cafe.Properties.Settings.Default.ECAFEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     SZAMLA_TETEL.MENNYISEG, SZAMLA_TETEL.EGYSEGAR, SZAMLA_TETEL.NETTO, SZAMLA_TETEL.AFA, SZAMLA_TETEL.BRUTTO, 
                      SZAMLA_TETEL.CIKK_MEGNEVEZES, SZAMLA_TETEL.SZAMLA_FEJ_ID, MEGYS.MEGYS_MEGNEVEZES
FROM         CIKK INNER JOIN
                      SZAMLA_TETEL ON CIKK.CIKK_ID = SZAMLA_TETEL.CIKK_ID INNER JOIN
                      MEGYS ON CIKK.MEGYS_ID = MEGYS.MEGYS_ID
WHERE     (SZAMLA_TETEL.SZAMLA_FEJ_ID = @szla_fej)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@szla_fej", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "SZAMLA_FEJ_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsRepSzamla.BLOKK_TETELDataTable dataTable, int szla_fej) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(szla_fej));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsRepSzamla.BLOKK_TETELDataTable GetData(int szla_fej) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(szla_fej));
            dsRepSzamla.BLOKK_TETELDataTable dataTable = new dsRepSzamla.BLOKK_TETELDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SZAMLA_FEJTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SZAMLA_FEJTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SZAMLA_FEJ";
            tableMapping.ColumnMappings.Add("SZAMLA_FEJ_ID", "SZAMLA_FEJ_ID");
            tableMapping.ColumnMappings.Add("SZAMLA_SORSZAM", "SZAMLA_SORSZAM");
            tableMapping.ColumnMappings.Add("PARTNER_ID", "PARTNER_ID");
            tableMapping.ColumnMappings.Add("RENDELES_ID", "RENDELES_ID");
            tableMapping.ColumnMappings.Add("OSSZESEN_NETTO", "OSSZESEN_NETTO");
            tableMapping.ColumnMappings.Add("OSSZESEN_BRUTTO", "OSSZESEN_BRUTTO");
            tableMapping.ColumnMappings.Add("OSSZESEN_AFA", "OSSZESEN_AFA");
            tableMapping.ColumnMappings.Add("KEDVEZMENY", "KEDVEZMENY");
            tableMapping.ColumnMappings.Add("FIZETETT_OSSZEG", "FIZETETT_OSSZEG");
            tableMapping.ColumnMappings.Add("FIZETESI_MOD", "FIZETESI_MOD");
            tableMapping.ColumnMappings.Add("SZAMLA_DATUMA", "SZAMLA_DATUMA");
            tableMapping.ColumnMappings.Add("EV", "EV");
            tableMapping.ColumnMappings.Add("HO", "HO");
            tableMapping.ColumnMappings.Add("NAP", "NAP");
            tableMapping.ColumnMappings.Add("USER_ID", "USER_ID");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::e_Cafe.Properties.Settings.Default.ECAFEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     SZAMLA_FEJ.*\r\nFROM         SZAMLA_FEJ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsRepSzamla.SZAMLA_FEJDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsRepSzamla.SZAMLA_FEJDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsRepSzamla.SZAMLA_FEJDataTable dataTable = new dsRepSzamla.SZAMLA_FEJDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class _CEGTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public _CEGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "_CEG";
            tableMapping.ColumnMappings.Add("CEG_ID", "CEG_ID");
            tableMapping.ColumnMappings.Add("CEG_NEV", "CEG_NEV");
            tableMapping.ColumnMappings.Add("CEG_CIM", "CEG_CIM");
            tableMapping.ColumnMappings.Add("BLOKK_FOOTER", "BLOKK_FOOTER");
            tableMapping.ColumnMappings.Add("BLOKK_FOOTER2", "BLOKK_FOOTER2");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::e_Cafe.Properties.Settings.Default.ECAFEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     _CEG.*\r\nFROM         _CEG";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsRepSzamla._CEGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsRepSzamla._CEGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsRepSzamla._CEGDataTable dataTable = new dsRepSzamla._CEGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(dsRepSzamla dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(dsRepSzamla dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(dsRepSzamla dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(dsRepSzamla dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591