<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="StringId.CaptionError" xml:space="preserve">
    <value>Errore</value>
  </data>
  <data name="StringId.InvalidValueText" xml:space="preserve">
    <value>Valore non valido</value>
  </data>
  <data name="StringId.CheckChecked" xml:space="preserve">
    <value>Selezionato</value>
  </data>
  <data name="StringId.CheckUnchecked" xml:space="preserve">
    <value>Deselezionato</value>
  </data>
  <data name="StringId.CheckIndeterminate" xml:space="preserve">
    <value>Indeterminato</value>
  </data>
  <data name="StringId.DateEditToday" xml:space="preserve">
    <value>Oggi</value>
  </data>
  <data name="StringId.DateEditClear" xml:space="preserve">
    <value>Cancella</value>
  </data>
  <data name="StringId.OK" xml:space="preserve">
    <value>&amp;OK</value>
  </data>
  <data name="StringId.Cancel" xml:space="preserve">
    <value>&amp;Annulla</value>
  </data>
  <data name="StringId.NavigatorFirstButtonHint" xml:space="preserve">
    <value>Primo</value>
  </data>
  <data name="StringId.NavigatorPreviousButtonHint" xml:space="preserve">
    <value>Precedente</value>
  </data>
  <data name="StringId.NavigatorPreviousPageButtonHint" xml:space="preserve">
    <value>Pagina precedente</value>
  </data>
  <data name="StringId.NavigatorNextButtonHint" xml:space="preserve">
    <value>Successivo</value>
  </data>
  <data name="StringId.NavigatorNextPageButtonHint" xml:space="preserve">
    <value>Pagina successiva</value>
  </data>
  <data name="StringId.NavigatorLastButtonHint" xml:space="preserve">
    <value>Ultimo</value>
  </data>
  <data name="StringId.NavigatorAppendButtonHint" xml:space="preserve">
    <value>Aggiungi in fondo</value>
  </data>
  <data name="StringId.NavigatorRemoveButtonHint" xml:space="preserve">
    <value>Cancella</value>
  </data>
  <data name="StringId.NavigatorEditButtonHint" xml:space="preserve">
    <value>Modifica</value>
  </data>
  <data name="StringId.NavigatorEndEditButtonHint" xml:space="preserve">
    <value>Fine modifica</value>
  </data>
  <data name="StringId.NavigatorCancelEditButtonHint" xml:space="preserve">
    <value>Annulla modifica</value>
  </data>
  <data name="StringId.NavigatorTextStringFormat" xml:space="preserve">
    <value>Record {0} di {1}</value>
  </data>
  <data name="StringId.PictureEditMenuCut" xml:space="preserve">
    <value>Taglia</value>
  </data>
  <data name="StringId.PictureEditMenuCopy" xml:space="preserve">
    <value>Copia</value>
  </data>
  <data name="StringId.PictureEditMenuPaste" xml:space="preserve">
    <value>Incolla</value>
  </data>
  <data name="StringId.PictureEditMenuDelete" xml:space="preserve">
    <value>Cancella</value>
  </data>
  <data name="StringId.PictureEditMenuLoad" xml:space="preserve">
    <value>Carica</value>
  </data>
  <data name="StringId.PictureEditMenuSave" xml:space="preserve">
    <value>Salva</value>
  </data>
  <data name="StringId.PictureEditOpenFileTitle" xml:space="preserve">
    <value>Apri</value>
  </data>
  <data name="StringId.PictureEditSaveFileTitle" xml:space="preserve">
    <value>Salva come</value>
  </data>
  <data name="StringId.PictureEditOpenFileError" xml:space="preserve">
    <value>Formato immagine errato</value>
  </data>
  <data name="StringId.PictureEditOpenFileErrorCaption" xml:space="preserve">
    <value>Errore in apertura</value>
  </data>
  <data name="StringId.LookUpEditValueIsNull" xml:space="preserve">
    <value>[Valore inserito nullo]</value>
  </data>
  <data name="StringId.LookUpInvalidEditValueType" xml:space="preserve">
    <value>Tipo di valore inserito non è valido.</value>
  </data>
  <data name="StringId.PictureEditOpenFileFilter" xml:space="preserve">
    <value>File Bitmap  (*.bmp)|*.bmp|Graphics Interchange Format (*.gif)|*.gif|File JPEG  Interchange Format (*.jpg;*.jpeg)|*.jpg;*.jpeg|File Icona(*.ico)|*.ico|Tutti  File di immagine|*.bmp;*.gif;*.jpg;*.jpeg;*.ico;*.png;*.tif|Tutti i File |*.*</value>
  </data>
  <data name="StringId.PictureEditSaveFileFilter" xml:space="preserve">
    <value>File Bitmap  (*.bmp)|*.bmp|Graphics Interchange Format (*.gif)|*.gif| File JPEG Interchange Format (*.jpg)|*.jpg</value>
  </data>
  <data name="StringId.MaskBoxValidateError" xml:space="preserve">
    <value>Il valore inserito non è completo. Vuoi correggerlo?
  
  
  Sì - torna all'editor e correggi il dato.
  No - lascia il dato invariato.
  Annulla - torna al valore precedente.
  </value>
  </data>
  <data name="StringId.UnknownPictureFormat" xml:space="preserve">
    <value>Formato immagine sconosciuto</value>
  </data>
  <data name="StringId.DataEmpty" xml:space="preserve">
    <value>Nessuna immagine</value>
  </data>
  <data name="StringId.NotValidArrayLength" xml:space="preserve">
    <value>Lunghezza stringa non valida.</value>
  </data>
  <data name="StringId.ImagePopupEmpty" xml:space="preserve">
    <value>(Vuoto)</value>
  </data>
  <data name="StringId.ImagePopupPicture" xml:space="preserve">
    <value>(Immagine)</value>
  </data>
  <data name="StringId.ColorTabCustom" xml:space="preserve">
    <value>Personalizza</value>
  </data>
  <data name="StringId.ColorTabWeb" xml:space="preserve">
    <value>Web</value>
  </data>
  <data name="StringId.ColorTabSystem" xml:space="preserve">
    <value>Sistema</value>
  </data>
  <data name="StringId.CalcButtonMC" xml:space="preserve">
    <value>MC</value>
  </data>
  <data name="StringId.CalcButtonMR" xml:space="preserve">
    <value>MR</value>
  </data>
  <data name="StringId.CalcButtonMS" xml:space="preserve">
    <value>MS</value>
  </data>
  <data name="StringId.CalcButtonMx" xml:space="preserve">
    <value>M+</value>
  </data>
  <data name="StringId.CalcButtonSqrt" xml:space="preserve">
    <value>Radice</value>
  </data>
  <data name="StringId.CalcButtonBack" xml:space="preserve">
    <value>Indietro</value>
  </data>
  <data name="StringId.CalcButtonCE" xml:space="preserve">
    <value>CE</value>
  </data>
  <data name="StringId.CalcButtonC" xml:space="preserve">
    <value>C</value>
  </data>
  <data name="StringId.CalcError" xml:space="preserve">
    <value> Errore di Calcolo</value>
  </data>
  <data name="StringId.TabHeaderButtonPrev" xml:space="preserve">
    <value>Scorrimento sinistro</value>
  </data>
  <data name="StringId.TabHeaderButtonNext" xml:space="preserve">
    <value>Scorrimento destro</value>
  </data>
  <data name="StringId.TabHeaderButtonClose" xml:space="preserve">
    <value>Chiudi</value>
  </data>
  <data name="StringId.XtraMessageBoxOkButtonText" xml:space="preserve">
    <value>&amp;OK</value>
  </data>
  <data name="StringId.XtraMessageBoxCancelButtonText" xml:space="preserve">
    <value>&amp;Annulla</value>
  </data>
  <data name="StringId.XtraMessageBoxYesButtonText" xml:space="preserve">
    <value>&amp;Si</value>
  </data>
  <data name="StringId.XtraMessageBoxNoButtonText" xml:space="preserve">
    <value>&amp;No</value>
  </data>
  <data name="StringId.XtraMessageBoxAbortButtonText" xml:space="preserve">
    <value>&amp;Termina</value>
  </data>
  <data name="StringId.XtraMessageBoxRetryButtonText" xml:space="preserve">
    <value>&amp;Riprova</value>
  </data>
  <data name="StringId.XtraMessageBoxIgnoreButtonText" xml:space="preserve">
    <value>&amp;Ignora</value>
  </data>
  <data name="StringId.TextEditMenuUndo" xml:space="preserve">
    <value>&amp;Annulla</value>
  </data>
  <data name="StringId.TextEditMenuCut" xml:space="preserve">
    <value>&amp;Taglia</value>
  </data>
  <data name="StringId.TextEditMenuCopy" xml:space="preserve">
    <value>&amp;Copia</value>
  </data>
  <data name="StringId.TextEditMenuPaste" xml:space="preserve">
    <value>&amp;Incolla</value>
  </data>
  <data name="StringId.TextEditMenuDelete" xml:space="preserve">
    <value>&amp;Elimina</value>
  </data>
  <data name="StringId.TextEditMenuSelectAll" xml:space="preserve">
    <value>Selezion&amp;a tutto</value>
  </data>
  <data name="StringId.FilterGroupAnd" xml:space="preserve">
    <value>E</value>
  </data>
  <data name="StringId.FilterGroupNotAnd" xml:space="preserve">
    <value>Eslcudi E</value>
  </data>
  <data name="StringId.FilterGroupNotOr" xml:space="preserve">
    <value>Escludi Oppure</value>
  </data>
  <data name="StringId.FilterGroupOr" xml:space="preserve">
    <value>Oppure</value>
  </data>
  <data name="StringId.FilterClauseAnyOf" xml:space="preserve">
    <value>Uno di</value>
  </data>
  <data name="StringId.FilterClauseBeginsWith" xml:space="preserve">
    <value>Comincia con</value>
  </data>
  <data name="StringId.FilterClauseBetween" xml:space="preserve">
    <value>è tra</value>
  </data>
  <data name="StringId.FilterClauseBetweenAnd" xml:space="preserve">
    <value>E</value>
  </data>
  <data name="StringId.FilterClauseContains" xml:space="preserve">
    <value>Contiene</value>
  </data>
  <data name="StringId.FilterClauseEndsWith" xml:space="preserve">
    <value>Finisce con</value>
  </data>
  <data name="StringId.FilterClauseEquals" xml:space="preserve">
    <value>Uguale</value>
  </data>
  <data name="StringId.FilterClauseGreater" xml:space="preserve">
    <value>Maggiore di</value>
  </data>
  <data name="StringId.FilterClauseGreaterOrEqual" xml:space="preserve">
    <value>Maggiore o uguale di</value>
  </data>
  <data name="StringId.FilterClauseIsNotNull" xml:space="preserve">
    <value>Non vuoto</value>
  </data>
  <data name="StringId.FilterClauseIsNull" xml:space="preserve">
    <value>Vuoto</value>
  </data>
  <data name="StringId.FilterClauseLess" xml:space="preserve">
    <value>Minore di</value>
  </data>
  <data name="StringId.FilterClauseLessOrEqual" xml:space="preserve">
    <value>Minore o uguale di</value>
  </data>
  <data name="StringId.FilterClauseLike" xml:space="preserve">
    <value>Simile a</value>
  </data>
  <data name="StringId.FilterClauseNoneOf" xml:space="preserve">
    <value>Nessuno di</value>
  </data>
  <data name="StringId.FilterClauseNotBetween" xml:space="preserve">
    <value>Non è fra</value>
  </data>
  <data name="StringId.FilterClauseDoesNotContain" xml:space="preserve">
    <value>Non contiene</value>
  </data>
  <data name="StringId.FilterClauseDoesNotEqual" xml:space="preserve">
    <value>Diverso da</value>
  </data>
  <data name="StringId.FilterClauseNotLike" xml:space="preserve">
    <value>Diverso da</value>
  </data>
  <data name="StringId.FilterEmptyEnter" xml:space="preserve">
    <value>&lt;inserisci valore&gt;</value>
  </data>
  <data name="StringId.FilterEmptyValue" xml:space="preserve">
    <value>&lt;vuoto&gt;</value>
  </data>
  <data name="StringId.FilterMenuConditionAdd" xml:space="preserve">
    <value>Aggiungi condizione</value>
  </data>
  <data name="StringId.FilterMenuGroupAdd" xml:space="preserve">
    <value>Aggiungi gruppo</value>
  </data>
  <data name="StringId.FilterMenuClearAll" xml:space="preserve">
    <value>Elimina tutto</value>
  </data>
  <data name="StringId.FilterMenuRowRemove" xml:space="preserve">
    <value>Rimuovi gruppo</value>
  </data>
  <data name="StringId.FilterToolTipNodeAdd" xml:space="preserve">
    <value>Aggiunge condizione al gruppo</value>
  </data>
  <data name="StringId.FilterToolTipNodeRemove" xml:space="preserve">
    <value>Rimuovi condizione</value>
  </data>
  <data name="StringId.FilterToolTipNodeAction" xml:space="preserve">
    <value>Azioni</value>
  </data>
  <data name="StringId.FilterToolTipValueType" xml:space="preserve">
    <value>Confronta con valore / valore di un altro campo</value>
  </data>
  <data name="StringId.FilterToolTipElementAdd" xml:space="preserve">
    <value>Aggiunge un nuovo elemento alla lista</value>
  </data>
  <data name="StringId.FilterToolTipKeysAdd" xml:space="preserve">
    <value>(Usa il tasto Ins o il tasto +)</value>
  </data>
  <data name="StringId.FilterToolTipKeysRemove" xml:space="preserve">
    <value>(Usa il tasto Canc o il tasto -)</value>
  </data>
  <data name="StringId.ContainerAccessibleEditName" xml:space="preserve">
    <value>controllo editing</value>
  </data>
  <data name="StringId.FilterCriteriaToStringGroupOperatorAnd" xml:space="preserve">
    <value>E</value>
  </data>
  <data name="StringId.FilterCriteriaToStringGroupOperatorOr" xml:space="preserve">
    <value>Oppure</value>
  </data>
  <data name="StringId.FilterCriteriaToStringUnaryOperatorBitwiseNot" xml:space="preserve">
    <value>~</value>
  </data>
  <data name="StringId.FilterCriteriaToStringUnaryOperatorIsNull" xml:space="preserve">
    <value>Nullo</value>
  </data>
  <data name="StringId.FilterCriteriaToStringUnaryOperatorMinus" xml:space="preserve">
    <value>-</value>
  </data>
  <data name="StringId.FilterCriteriaToStringUnaryOperatorNot" xml:space="preserve">
    <value>Non</value>
  </data>
  <data name="StringId.FilterCriteriaToStringUnaryOperatorPlus" xml:space="preserve">
    <value>+</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBinaryOperatorBitwiseAnd" xml:space="preserve">
    <value>&amp;</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBinaryOperatorBitwiseOr" xml:space="preserve">
    <value>|</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBinaryOperatorBitwiseXor" xml:space="preserve">
    <value>^</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBinaryOperatorDivide" xml:space="preserve">
    <value>/</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBinaryOperatorEqual" xml:space="preserve">
    <value>=</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBinaryOperatorGreater" xml:space="preserve">
    <value>&gt;</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBinaryOperatorGreaterOrEqual" xml:space="preserve">
    <value>&gt;=</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBinaryOperatorLess" xml:space="preserve">
    <value>&lt;</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBinaryOperatorLessOrEqual" xml:space="preserve">
    <value>&lt;=</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBinaryOperatorLike" xml:space="preserve">
    <value>Simile</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBinaryOperatorMinus" xml:space="preserve">
    <value>-</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBinaryOperatorModulo" xml:space="preserve">
    <value>%</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBinaryOperatorMultiply" xml:space="preserve">
    <value>*</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBinaryOperatorNotEqual" xml:space="preserve">
    <value>&lt;&gt;</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBinaryOperatorPlus" xml:space="preserve">
    <value>+</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBetween" xml:space="preserve">
    <value>Fra</value>
  </data>
  <data name="StringId.FilterCriteriaToStringIn" xml:space="preserve">
    <value>Contenuto in</value>
  </data>
  <data name="StringId.FilterCriteriaToStringIsNotNull" xml:space="preserve">
    <value>Non nullo</value>
  </data>
  <data name="StringId.FilterCriteriaToStringNotLike" xml:space="preserve">
    <value>Diverso da</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIif" xml:space="preserve">
    <value>Iif</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsNull" xml:space="preserve">
    <value>Nullo</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionLen" xml:space="preserve">
    <value>Lunghezza</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionLower" xml:space="preserve">
    <value>Minuscole</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionNone" xml:space="preserve">
    <value>Nessuno</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionSubstring" xml:space="preserve">
    <value>Substring</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionTrim" xml:space="preserve">
    <value>Trim</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionUpper" xml:space="preserve">
    <value>Maiuscole</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionCustom" xml:space="preserve">
    <value>Proprietà</value>
  </data>
  <data name="StringId.PictureEditCopyImageError" xml:space="preserve">
    <value>Impossibile copiare l'immagine</value>
  </data>
  <data name="StringId.LookUpColumnDefaultName" xml:space="preserve">
    <value>Nome</value>
  </data>
  <data name="StringId.FilterShowAll" xml:space="preserve">
    <value>(Vedi tutti)</value>
  </data>
  <data name="StringId.Apply" xml:space="preserve">
    <value>Applica</value>
  </data>
  <data name="StringId.PreviewPanelText" xml:space="preserve">
    <value>Anteprima: </value>
  </data>
  <data name="StringId.TransparentBackColorNotSupported" xml:space="preserve">
    <value>Questo controllo non supporta colori di sfondo trasparenti</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionLocalDateTimeNow" xml:space="preserve">
    <value>Adesso</value>
  </data>
  <data name="StringId.FilterDateTimeConstantMenuCaption" xml:space="preserve">
    <value>Costanti DateTime</value>
  </data>
  <data name="StringId.FilterMenuAddNewParameter" xml:space="preserve">
    <value>Aggiungi un nuovo parametro ...</value>
  </data>
  <data name="StringId.FilterCriteriaInvalidExpressionEx" xml:space="preserve">
    <value>L'espressione specificata non è valida</value>
  </data>
  <data name="StringId.FilterEmptyParameter" xml:space="preserve">
    <value>&lt;inserisci un parametro&gt;</value>
  </data>
  <data name="StringId.FilterCriteriaInvalidExpression" xml:space="preserve">
    <value>L'espressione specificata contiene simboli non validi (linea {0}, carattere {1}).</value>
  </data>
  <data name="StringId.FilterDateTimeOperatorMenuCaption" xml:space="preserve">
    <value>Operatori DateTime</value>
  </data>
  <data name="StringId.FilterOutlookDateText" xml:space="preserve">
    <value>Mostra tutti i |Filtri per una specifica data:|Oltre quest'anno|Entro la fine dell'anno|Entro questo mese|la settimana prossima|Questa settimana|Domani|Oggi|Ieri|All'inizio di questa settimana|la settimana scorsa|All'inizio del mese|All'inizio di quest'anno|Prima di quest'anno</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionConcat" xml:space="preserve">
    <value>Concatena</value>
  </data>
</root>