<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"></xsd:import>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="name" type="xsd:string"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="StringId.CaptionError" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="StringId.InvalidValueText" xml:space="preserve">
    <value>Invalid Value</value>
  </data>
  <data name="StringId.CheckChecked" xml:space="preserve">
    <value>Checked</value>
  </data>
  <data name="StringId.CheckUnchecked" xml:space="preserve">
    <value>Unchecked</value>
  </data>
  <data name="StringId.CheckIndeterminate" xml:space="preserve">
    <value>Indeterminate</value>
  </data>
  <data name="StringId.DateEditToday" xml:space="preserve">
    <value>Today</value>
  </data>
  <data name="StringId.DateEditClear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="StringId.OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="StringId.Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="StringId.NavigatorFirstButtonHint" xml:space="preserve">
    <value>First</value>
  </data>
  <data name="StringId.NavigatorPreviousButtonHint" xml:space="preserve">
    <value>Previous</value>
  </data>
  <data name="StringId.NavigatorPreviousPageButtonHint" xml:space="preserve">
    <value>Previous Page</value>
  </data>
  <data name="StringId.NavigatorNextButtonHint" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="StringId.NavigatorNextPageButtonHint" xml:space="preserve">
    <value>Next Page</value>
  </data>
  <data name="StringId.NavigatorLastButtonHint" xml:space="preserve">
    <value>Last</value>
  </data>
  <data name="StringId.NavigatorAppendButtonHint" xml:space="preserve">
    <value>Append</value>
  </data>
  <data name="StringId.NavigatorRemoveButtonHint" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="StringId.NavigatorEditButtonHint" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="StringId.NavigatorEndEditButtonHint" xml:space="preserve">
    <value>End Edit</value>
  </data>
  <data name="StringId.NavigatorCancelEditButtonHint" xml:space="preserve">
    <value>Cancel Edit</value>
  </data>
  <data name="StringId.NavigatorTextStringFormat" xml:space="preserve">
    <value>Record {0} of {1}</value>
  </data>
  <data name="StringId.PictureEditMenuCut" xml:space="preserve">
    <value>Cut</value>
  </data>
  <data name="StringId.PictureEditMenuCopy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="StringId.PictureEditMenuPaste" xml:space="preserve">
    <value>Paste</value>
  </data>
  <data name="StringId.PictureEditMenuDelete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="StringId.PictureEditMenuLoad" xml:space="preserve">
    <value>Load</value>
  </data>
  <data name="StringId.PictureEditMenuSave" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="StringId.PictureEditOpenFileTitle" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="StringId.PictureEditSaveFileTitle" xml:space="preserve">
    <value>Save As</value>
  </data>
  <data name="StringId.PictureEditOpenFileError" xml:space="preserve">
    <value>Wrong picture format</value>
  </data>
  <data name="StringId.PictureEditOpenFileErrorCaption" xml:space="preserve">
    <value>Open error</value>
  </data>
  <data name="StringId.PictureEditCopyImageError" xml:space="preserve">
    <value>Could not copy image</value>
  </data>
  <data name="StringId.LookUpEditValueIsNull" xml:space="preserve">
    <value>[EditValue is null]</value>
  </data>
  <data name="StringId.LookUpInvalidEditValueType" xml:space="preserve">
    <value>Invalid LookUpEdit EditValue type.</value>
  </data>
  <data name="StringId.LookUpColumnDefaultName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="StringId.PictureEditOpenFileFilter" xml:space="preserve">
    <value>Bitmap Files (*.bmp)|*.bmp|Graphics Interchange Format (*.gif)|*.gif|JPEG File Interchange Format (*.jpg;*.jpeg)|*.jpg;*.jpeg|Icon Files (*.ico)|*.ico|All Picture Files |*.bmp;*.gif;*.jpg;*.jpeg;*.ico;*.png;*.tif|All Files |*.*</value>
  </data>
  <data name="StringId.PictureEditSaveFileFilter" xml:space="preserve">
    <value>Bitmap Files (*.bmp)|*.bmp|Graphics Interchange Format (*.gif)|*.gif|JPEG File Interchange Format (*.jpg)|*.jpg</value>
  </data>
  <data name="StringId.MaskBoxValidateError" xml:space="preserve">
    <value>The entered value is incomplete.  Do you want to correct it?
	
	
	Yes - return to the editor and correct the value.
	No - leave the value as is.
	Cancel - reset to the previous value.
	</value>
  </data>
  <data name="StringId.UnknownPictureFormat" xml:space="preserve">
    <value>Unknown picture format</value>
  </data>
  <data name="StringId.DataEmpty" xml:space="preserve">
    <value>No image data</value>
  </data>
  <data name="StringId.FilterCriteriaInvalidExpression" xml:space="preserve">
    <value>The specified expression contains invalid symbols (line {0}, character {1}).</value>
  </data>
  <data name="StringId.FilterCriteriaInvalidExpressionEx" xml:space="preserve">
    <value>The specified expression is invalid.</value>
  </data>
  <data name="StringId.NotValidArrayLength" xml:space="preserve">
    <value>Not valid array length.</value>
  </data>
  <data name="StringId.ImagePopupEmpty" xml:space="preserve">
    <value>(Empty)</value>
  </data>
  <data name="StringId.ImagePopupPicture" xml:space="preserve">
    <value>(Picture)</value>
  </data>
  <data name="StringId.ColorTabCustom" xml:space="preserve">
    <value>Custom</value>
  </data>
  <data name="StringId.ColorTabWeb" xml:space="preserve">
    <value>Web</value>
  </data>
  <data name="StringId.ColorTabSystem" xml:space="preserve">
    <value>System</value>
  </data>
  <data name="StringId.CalcButtonMC" xml:space="preserve">
    <value>MC</value>
  </data>
  <data name="StringId.CalcButtonMR" xml:space="preserve">
    <value>MR</value>
  </data>
  <data name="StringId.CalcButtonMS" xml:space="preserve">
    <value>MS</value>
  </data>
  <data name="StringId.CalcButtonMx" xml:space="preserve">
    <value>M+</value>
  </data>
  <data name="StringId.CalcButtonSqrt" xml:space="preserve">
    <value>sqrt</value>
  </data>
  <data name="StringId.CalcButtonBack" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="StringId.CalcButtonCE" xml:space="preserve">
    <value>CE</value>
  </data>
  <data name="StringId.CalcButtonC" xml:space="preserve">
    <value>C</value>
  </data>
  <data name="StringId.CalcError" xml:space="preserve">
    <value>Calculation Error</value>
  </data>
  <data name="StringId.TabHeaderButtonPrev" xml:space="preserve">
    <value>Scroll Left</value>
  </data>
  <data name="StringId.TabHeaderButtonNext" xml:space="preserve">
    <value>Scroll Right</value>
  </data>
  <data name="StringId.TabHeaderButtonClose" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="StringId.XtraMessageBoxOkButtonText" xml:space="preserve">
    <value>&amp;OK</value>
  </data>
  <data name="StringId.XtraMessageBoxCancelButtonText" xml:space="preserve">
    <value>&amp;Cancel</value>
  </data>
  <data name="StringId.XtraMessageBoxYesButtonText" xml:space="preserve">
    <value>&amp;Yes</value>
  </data>
  <data name="StringId.XtraMessageBoxNoButtonText" xml:space="preserve">
    <value>&amp;No</value>
  </data>
  <data name="StringId.XtraMessageBoxAbortButtonText" xml:space="preserve">
    <value>&amp;Abort</value>
  </data>
  <data name="StringId.XtraMessageBoxRetryButtonText" xml:space="preserve">
    <value>&amp;Retry</value>
  </data>
  <data name="StringId.XtraMessageBoxIgnoreButtonText" xml:space="preserve">
    <value>&amp;Ignore</value>
  </data>
  <data name="StringId.TextEditMenuUndo" xml:space="preserve">
    <value>&amp;Undo</value>
  </data>
  <data name="StringId.TextEditMenuCut" xml:space="preserve">
    <value>Cu&amp;t</value>
  </data>
  <data name="StringId.TextEditMenuCopy" xml:space="preserve">
    <value>&amp;Copy</value>
  </data>
  <data name="StringId.TextEditMenuPaste" xml:space="preserve">
    <value>&amp;Paste</value>
  </data>
  <data name="StringId.TextEditMenuDelete" xml:space="preserve">
    <value>&amp;Delete</value>
  </data>
  <data name="StringId.TextEditMenuSelectAll" xml:space="preserve">
    <value>Select &amp;All</value>
  </data>
  <data name="StringId.FilterShowAll" xml:space="preserve">
    <value>(Select All)</value>
  </data>
  <data name="StringId.FilterGroupAnd" xml:space="preserve">
    <value>And</value>
  </data>
  <data name="StringId.FilterGroupNotAnd" xml:space="preserve">
    <value>Not And</value>
  </data>
  <data name="StringId.FilterGroupNotOr" xml:space="preserve">
    <value>Not Or</value>
  </data>
  <data name="StringId.FilterGroupOr" xml:space="preserve">
    <value>Or</value>
  </data>
  <data name="StringId.FilterClauseAnyOf" xml:space="preserve">
    <value>Is any of</value>
  </data>
  <data name="StringId.FilterClauseBeginsWith" xml:space="preserve">
    <value>Begins with</value>
  </data>
  <data name="StringId.FilterClauseBetween" xml:space="preserve">
    <value>Is between</value>
  </data>
  <data name="StringId.FilterClauseBetweenAnd" xml:space="preserve">
    <value>and</value>
  </data>
  <data name="StringId.FilterClauseContains" xml:space="preserve">
    <value>Contains</value>
  </data>
  <data name="StringId.FilterClauseEndsWith" xml:space="preserve">
    <value>Ends with</value>
  </data>
  <data name="StringId.FilterClauseEquals" xml:space="preserve">
    <value>Equals</value>
  </data>
  <data name="StringId.FilterClauseGreater" xml:space="preserve">
    <value>Is greater than</value>
  </data>
  <data name="StringId.FilterClauseGreaterOrEqual" xml:space="preserve">
    <value>Is greater than or equal to</value>
  </data>
  <data name="StringId.FilterClauseIsNotNull" xml:space="preserve">
    <value>Is not blank</value>
  </data>
  <data name="StringId.FilterClauseIsNull" xml:space="preserve">
    <value>Is blank</value>
  </data>
  <data name="StringId.FilterClauseLess" xml:space="preserve">
    <value>Is less than</value>
  </data>
  <data name="StringId.FilterClauseLessOrEqual" xml:space="preserve">
    <value>Is less than or equal to</value>
  </data>
  <data name="StringId.FilterClauseLike" xml:space="preserve">
    <value>Is like</value>
  </data>
  <data name="StringId.FilterClauseNoneOf" xml:space="preserve">
    <value>Is none of</value>
  </data>
  <data name="StringId.FilterClauseNotBetween" xml:space="preserve">
    <value>Is not between</value>
  </data>
  <data name="StringId.FilterClauseDoesNotContain" xml:space="preserve">
    <value>Does not contain</value>
  </data>
  <data name="StringId.FilterClauseDoesNotEqual" xml:space="preserve">
    <value>Does not equal</value>
  </data>
  <data name="StringId.FilterClauseNotLike" xml:space="preserve">
    <value>Is not like</value>
  </data>
  <data name="StringId.FilterEmptyEnter" xml:space="preserve">
    <value>&lt;enter a value&gt;</value>
  </data>
  <data name="StringId.FilterEmptyValue" xml:space="preserve">
    <value>&lt;empty&gt;</value>
  </data>
  <data name="StringId.FilterMenuConditionAdd" xml:space="preserve">
    <value>Add Condition</value>
  </data>
  <data name="StringId.FilterMenuGroupAdd" xml:space="preserve">
    <value>Add Group</value>
  </data>
  <data name="StringId.FilterMenuClearAll" xml:space="preserve">
    <value>Clear All</value>
  </data>
  <data name="StringId.FilterMenuRowRemove" xml:space="preserve">
    <value>Remove Group</value>
  </data>
  <data name="StringId.FilterToolTipNodeAdd" xml:space="preserve">
    <value>Adds a new condition to this group</value>
  </data>
  <data name="StringId.FilterToolTipNodeRemove" xml:space="preserve">
    <value>Removes this condition</value>
  </data>
  <data name="StringId.FilterToolTipNodeAction" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="StringId.FilterToolTipValueType" xml:space="preserve">
    <value>Compare with a value / another field's value</value>
  </data>
  <data name="StringId.FilterToolTipElementAdd" xml:space="preserve">
    <value>Adds a new item to the list</value>
  </data>
  <data name="StringId.FilterToolTipKeysAdd" xml:space="preserve">
    <value>(Use the Insert or Add key)</value>
  </data>
  <data name="StringId.FilterToolTipKeysRemove" xml:space="preserve">
    <value>(Use the Delete or Subtract key)</value>
  </data>
  <data name="StringId.ContainerAccessibleEditName" xml:space="preserve">
    <value>Editing control</value>
  </data>
  <data name="StringId.FilterCriteriaToStringGroupOperatorAnd" xml:space="preserve">
    <value>And</value>
  </data>
  <data name="StringId.FilterCriteriaToStringGroupOperatorOr" xml:space="preserve">
    <value>Or</value>
  </data>
  <data name="StringId.FilterCriteriaToStringUnaryOperatorBitwiseNot" xml:space="preserve">
    <value>~</value>
  </data>
  <data name="StringId.FilterCriteriaToStringUnaryOperatorIsNull" xml:space="preserve">
    <value>Is Null</value>
  </data>
  <data name="StringId.FilterCriteriaToStringUnaryOperatorMinus" xml:space="preserve">
    <value>-</value>
  </data>
  <data name="StringId.FilterCriteriaToStringUnaryOperatorNot" xml:space="preserve">
    <value>Not</value>
  </data>
  <data name="StringId.FilterCriteriaToStringUnaryOperatorPlus" xml:space="preserve">
    <value>+</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBinaryOperatorBitwiseAnd" xml:space="preserve">
    <value>&amp;</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBinaryOperatorBitwiseOr" xml:space="preserve">
    <value>|</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBinaryOperatorBitwiseXor" xml:space="preserve">
    <value>^</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBinaryOperatorDivide" xml:space="preserve">
    <value>/</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBinaryOperatorEqual" xml:space="preserve">
    <value>=</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBinaryOperatorGreater" xml:space="preserve">
    <value>&gt;</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBinaryOperatorGreaterOrEqual" xml:space="preserve">
    <value>&gt;=</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBinaryOperatorLess" xml:space="preserve">
    <value>&lt;</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBinaryOperatorLessOrEqual" xml:space="preserve">
    <value>&lt;=</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBinaryOperatorLike" xml:space="preserve">
    <value>Like</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBinaryOperatorMinus" xml:space="preserve">
    <value>-</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBinaryOperatorModulo" xml:space="preserve">
    <value>%</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBinaryOperatorMultiply" xml:space="preserve">
    <value>*</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBinaryOperatorNotEqual" xml:space="preserve">
    <value>&lt;&gt;</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBinaryOperatorPlus" xml:space="preserve">
    <value>+</value>
  </data>
  <data name="StringId.FilterCriteriaToStringBetween" xml:space="preserve">
    <value>Between</value>
  </data>
  <data name="StringId.FilterCriteriaToStringIn" xml:space="preserve">
    <value>In</value>
  </data>
  <data name="StringId.FilterCriteriaToStringIsNotNull" xml:space="preserve">
    <value>Is Not Null</value>
  </data>
  <data name="StringId.FilterCriteriaToStringNotLike" xml:space="preserve">
    <value>Not Like</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionNone" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionCustom" xml:space="preserve">
    <value>Custom</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIif" xml:space="preserve">
    <value>Iif</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsNull" xml:space="preserve">
    <value>IsNull</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionTrim" xml:space="preserve">
    <value>Trim</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionLen" xml:space="preserve">
    <value>Len</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionSubstring" xml:space="preserve">
    <value>Substring</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionUpper" xml:space="preserve">
    <value>Upper</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionLower" xml:space="preserve">
    <value>Lower</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionConcat" xml:space="preserve">
    <value>Concat</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionLocalDateTimeThisYear" xml:space="preserve">
    <value>ThisYear</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionLocalDateTimeThisMonth" xml:space="preserve">
    <value>ThisMonth</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionLocalDateTimeLastWeek" xml:space="preserve">
    <value>LastWeek</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionLocalDateTimeThisWeek" xml:space="preserve">
    <value>ThisWeek</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionLocalDateTimeYesterday" xml:space="preserve">
    <value>Yesterday</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionLocalDateTimeToday" xml:space="preserve">
    <value>Today</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionLocalDateTimeNow" xml:space="preserve">
    <value>Now</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionLocalDateTimeTomorrow" xml:space="preserve">
    <value>Tomorrow</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionLocalDateTimeDayAfterTomorrow" xml:space="preserve">
    <value>DayAfterTomorrow</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionLocalDateTimeNextWeek" xml:space="preserve">
    <value>NextWeek</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionLocalDateTimeTwoWeeksAway" xml:space="preserve">
    <value>TwoWeeksAway</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionLocalDateTimeNextMonth" xml:space="preserve">
    <value>NextMonth</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionLocalDateTimeNextYear" xml:space="preserve">
    <value>NextYear</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsOutlookIntervalBeyondThisYear" xml:space="preserve">
    <value>IsBeyondThisYear</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsOutlookIntervalLaterThisYear" xml:space="preserve">
    <value>IsLaterThisYear</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsOutlookIntervalLaterThisMonth" xml:space="preserve">
    <value>IsLaterThisMonth</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsOutlookIntervalNextWeek" xml:space="preserve">
    <value>IsNextWeek</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsOutlookIntervalLaterThisWeek" xml:space="preserve">
    <value>IsLaterThisWeek</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsOutlookIntervalTomorrow" xml:space="preserve">
    <value>IsTomorrow</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsOutlookIntervalToday" xml:space="preserve">
    <value>IsToday</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsOutlookIntervalYesterday" xml:space="preserve">
    <value>IsYesterday</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsOutlookIntervalEarlierThisWeek" xml:space="preserve">
    <value>IsEarlierThisWeek</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsOutlookIntervalLastWeek" xml:space="preserve">
    <value>IsLastWeek</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsOutlookIntervalEarlierThisMonth" xml:space="preserve">
    <value>IsEarlierThisMonth</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsOutlookIntervalEarlierThisYear" xml:space="preserve">
    <value>IsEarlierThisYear</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsOutlookIntervalPriorThisYear" xml:space="preserve">
    <value>IsPriorThisYear</value>
  </data>
  <data name="StringId.Apply" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="StringId.PreviewPanelText" xml:space="preserve">
    <value>Preview:</value>
  </data>
  <data name="StringId.TransparentBackColorNotSupported" xml:space="preserve">
    <value>This control does not support transparent background colors</value>
  </data>
  <data name="StringId.FilterOutlookDateText" xml:space="preserve">
    <value>Show all|Filter by a specific date:|Beyond this year|Later this year|Later this month|Next week|Later this week|Tomorrow|Today|Yesterday|Earlier this week|Last week|Earlier this month|Earlier this year|Prior to this year</value>
  </data>
  <data name="StringId.FilterDateTimeConstantMenuCaption" xml:space="preserve">
    <value>DateTime constants</value>
  </data>
  <data name="StringId.FilterDateTimeOperatorMenuCaption" xml:space="preserve">
    <value>DateTime operators</value>
  </data>
  <data name="StringId.FilterEmptyParameter" xml:space="preserve">
    <value>&lt;enter a parameter&gt;</value>
  </data>
  <data name="StringId.FilterMenuAddNewParameter" xml:space="preserve">
    <value>Add a new parameter ...</value>
  </data>
</root>