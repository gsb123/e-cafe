<?xml version="1.0" encoding="utf-8"?>
<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Power.Description" xml:space="preserve">
    <value>Elevar(Value, Potência)
Retorna o número especificado elevado à potência especificada.</value>
  </data>
  <data name="ToStr.Description" xml:space="preserve">
    <value>ParaStr(Value)
Retorna uma string que representa o objeto.</value>
  </data>
  <data name="Plus.Description" xml:space="preserve">
    <value>Adiciona o valor de uma expressão numérica a outra, ou concatena duas strings.</value>
  </data>
  <data name="Parameters Description Prefix" xml:space="preserve">
    <value>O tipo do parâmetro é: </value>
  </data>
  <data name="Substring3param.Description" xml:space="preserve">
    <value>Substring(String, PosiçãoInicial, Comprimento)
Extrai uma substring de uma string. A substring começa na PosiçãoInicial e tem o Comprimento especificado.</value>
  </data>
  <data name="Tan.Description" xml:space="preserve">
    <value>Tan(Value)
Retorna a tangente do ângulo representado em radianos.</value>
  </data>
  <data name="Trim.Description" xml:space="preserve">
    <value>Trim(String)
Remove todos os ESPAÇOS do início e do final da string.</value>
  </data>
  <data name="Tanh.Description" xml:space="preserve">
    <value>Tanh(Value)
Retorna a tangente hiperbólica do ângulo representado em radianos.</value>
  </data>
  <data name="Today.Description" xml:space="preserve">
    <value>Hoje()
Retorna a data de hoje, sempre com o horário de meia noite, independentemente do horário real.</value>
  </data>
  <data name="Upper.Description" xml:space="preserve">
    <value>Maiúscula(String)Retorna a String em letras maiúsculas.</value>
  </data>
  <data name="Replace.Description" xml:space="preserve">
    <value>Substituir(String, SubString2, String3)
Returna uma cópia da String1, na qual SubString2 foi substituída pela String3.</value>
  </data>
  <data name="Sign.Description" xml:space="preserve">
    <value>Sign(Value)
Retorna sinal da expressão dada, sendo positivo (+1), zero (0), ou negativo (-1).</value>
  </data>
  <data name="Reverse.Description" xml:space="preserve">
    <value>Reverter(String)
Reverte a ordem dos caracteres de uma string.</value>
  </data>
  <data name="True.Description" xml:space="preserve">
    <value>Representa o valor booleano Verdadeiro.</value>
  </data>
  <data name="UtcNow.Description" xml:space="preserve">
    <value>UtcNow()
Retorna a data e a hora presentes do sistema, expressas como Coordenadas Universais de Tempo (UTC).</value>
  </data>
  <data name="Variables.Text" xml:space="preserve">
    <value>Variáveis</value>
  </data>
  <data name="Parameters.Text" xml:space="preserve">
    <value>Parametros</value>
  </data>
  <data name="UnboundColumn.Caption" xml:space="preserve">
    <value>Editor de expresão</value>
  </data>
  <data name="Round.Description" xml:space="preserve">
    <value>Arredondar(Valor)
Arredonda o número dado para o inteiro mais próximo.</value>
  </data>
  <data name="Remove.Description" xml:space="preserve">
    <value>Remover(String, PosiçãoInicial, Comprimento)
Remove o número especificado de caracteres desta instânica, a partir da posição especificada.</value>
  </data>
  <data name="Substring2param.Description" xml:space="preserve">
    <value>Substring(String, PosiçãoInicial)
Extrai uma substring de uma string. A substring começa na PosiçãoInicial.</value>
  </data>
  <data name="Sinh.Description" xml:space="preserve">
    <value>Sinh(Value)
Retorna o seno hiperbólico do ângulo representado em radianos.</value>
  </data>
  <data name="RowCount.Description" xml:space="preserve">
    <value>Retorna o número total de registros na fonte de dados (datasource).</value>
  </data>
  <data name="Sqr.Description" xml:space="preserve">
    <value>Sqr(Value)
Retorna a raíz quadrada de um númeror.</value>
  </data>
  <data name="Sin.Description" xml:space="preserve">
    <value>Sin(Value)
Retorna o seno do ângulo representado em radianos.</value>
  </data>
  <data name="Rnd.Description" xml:space="preserve">
    <value>Aleatório()
Retorna um número aleatório maior ou igual a zero e igual a um.</value>
  </data>
  <data name="Modulo.Description" xml:space="preserve">
    <value>Returns the remainder (modulus) obtained by dividing one numeric expression into another.</value>
  </data>
  <data name="Condition.Text" xml:space="preserve">
    <value>Condition Editor</value>
  </data>
  <data name="Exp.Description" xml:space="preserve">
    <value>Exp(Value)
Returns the exponential value of the given float expression.</value>
  </data>
  <data name="GetMinute.Description" xml:space="preserve">
    <value>GetMinute(DateTime)
Extracts minutes from the defined DateTime.</value>
  </data>
  <data name="GetSecond.Description" xml:space="preserve">
    <value>GetSecond(DateTime)
Extracts seconds from the defined DateTime.</value>
  </data>
  <data name="Now.Description" xml:space="preserve">
    <value>Now()
Returns the current system date and time.</value>
  </data>
  <data name="Log.Description" xml:space="preserve">
    <value>Log(Value)
Returns the natural logarithm of a specified number.</value>
  </data>
  <data name="Atn.Description" xml:space="preserve">
    <value>Atn(Value)
Returns the arctangent of a number (the angle, in radians, whose tangent is the given float expression).</value>
  </data>
  <data name="GetDay.Description" xml:space="preserve">
    <value>GetDay(DateTime)
Extracts a day from the defined DateTime.</value>
  </data>
  <data name="PadRight3Param.Description" xml:space="preserve">
    <value>PadRight(String, Length, Char)
Right-aligns characters in the defined string, padding its left side with the specified Char up to a specified total length.</value>
  </data>
  <data name="Minus.Description" xml:space="preserve">
    <value>Finds the difference between two numbers.</value>
  </data>
  <data name="functionsTypes.Properties.AllItems" xml:space="preserve">
    <value>(All)</value>
  </data>
  <data name="Atn2.Description" xml:space="preserve">
    <value>Atn2(Value1, Value2)
Returns the angle whose tangent is the quotient of two specified numbers, in radians.</value>
  </data>
  <data name="GetYear.Description" xml:space="preserve">
    <value>GetYear(DateTime)
Extracts a year from the defined DateTime.</value>
  </data>
  <data name="GetHour.Description" xml:space="preserve">
    <value>GetHour(DateTime)
Extracts an hour from the defined DateTime.</value>
  </data>
  <data name="buttonCancel.Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Constants.Text" xml:space="preserve">
    <value>Constants</value>
  </data>
  <data name="IsNull.Description" xml:space="preserve">
    <value>IsNull(Value)
Returns True if the specified Value is NULL.</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Expression Editor</value>
  </data>
  <data name="Lower.Description" xml:space="preserve">
    <value>Lower(String)
Returns the String in lowercase.</value>
  </data>
  <data name="NotEqual.Description" xml:space="preserve">
    <value>Returns true if the operands do not have the same value; otherwise, it returns false.</value>
  </data>
  <data name="PadRight.Description" xml:space="preserve">
    <value>PadRight(String, Length)
Right-aligns characters in the defined string, padding its left side with white space characters up to a specified total length.</value>
  </data>
  <data name="Greater.Description" xml:space="preserve">
    <value>Greater than operator. Used to compare expressions.</value>
  </data>
  <data name="AddYears.Description" xml:space="preserve">
    <value>AddYears(DateTime, YearsCount)
Returns a date-time value that is the specified number of years away from the specieid DateTime.</value>
  </data>
  <data name="GetTimeOfDay.Description" xml:space="preserve">
    <value>GetTimeOfDay(DateTime)
Extracts the time of the day from the defined DateTime, in ticks.</value>
  </data>
  <data name="Char.Description" xml:space="preserve">
    <value>Char(Number)
Converts an integerASCIICode to a character.</value>
  </data>
  <data name="And.Description" xml:space="preserve">
    <value>Performs a logical conjunction on two expressions.</value>
  </data>
  <data name="Cosh.Description" xml:space="preserve">
    <value>Cosh(Value)
Returns the hyperbolic cosine of the angle defined in radians.</value>
  </data>
  <data name="Between.Description" xml:space="preserve">
    <value>Between (,)
Specifies a range to test. Returns true if a value is greater than or equal to the first operand and less than or equal to the second operand.</value>
  </data>
  <data name="Acos.Description" xml:space="preserve">
    <value>Acos(Value)
Returns the arccosine of a number (the angle, in radians, whose cosine is the given float expression).</value>
  </data>
  <data name="Ceiling.Description" xml:space="preserve">
    <value>Ceiling(Value)
Returns the smallest integer that is greater than or equal to the given numeric expression.</value>
  </data>
  <data name="Ascii.Description" xml:space="preserve">
    <value>Ascii(String)
Returns the ASCII code value of the leftmost character in a character expression.</value>
  </data>
  <data name="Abs.Description" xml:space="preserve">
    <value>Abs(Value)
Returns the absolute, positive value of the given numeric expression.</value>
  </data>
  <data name="BitwiseAnd.Description" xml:space="preserve">
    <value>Performs a bitwise logical AND operation between two integer values.</value>
  </data>
  <data name="In.Description" xml:space="preserve">
    <value>In (,,,)
Tests for the existence of a property in an object.</value>
  </data>
  <data name="GridFields Description Prefix" xml:space="preserve">
    <value>Field Information
Caption: {1}
The type of this field is: {2}</value>
  </data>
  <data name="Null.Description" xml:space="preserve">
    <value>Represents a null reference, one that does not refer to any object.</value>
  </data>
  <data name="BitwiseOr.Description" xml:space="preserve">
    <value>Compares each bit of its first operand to the corresponding bit of its second operand. If either bit is 1, the corresponding result bit is set to 1. Otherwise, the corresponding result bit is set to 0.</value>
  </data>
  <data name="GreaterOrEqual.Description" xml:space="preserve">
    <value>Greater than or equal to operator. Used to compare expressions.</value>
  </data>
  <data name="AddTimeSpan.Description" xml:space="preserve">
    <value>AddTimeSpan(DateTime, TimeSpan)
Returns a date-time value that is away from the specified DateTime for the given TimeSpan.</value>
  </data>
  <data name="functionsTypes.EditValue" xml:space="preserve">
    <value>(All)</value>
  </data>
  <data name="BigMul.Description" xml:space="preserve">
    <value>BigMul(Value1, Value2)
Returns an Int64 containing the full product of two specified 32-bit numbers.</value>
  </data>
  <data name="Multiply.Description" xml:space="preserve">
    <value>Multiplies the value of two expressions.</value>
  </data>
  <data name="Iif.Description" xml:space="preserve">
    <value>Iif(Expression, TruePart, FalsePart)
Returns either TruePart or FalsePart, depending on the evaluation of the Boolean Expression.</value>
  </data>
  <data name="GetDayOfWeek.Description" xml:space="preserve">
    <value>GetDayOfWeek(DateTime)
Extracts a day of the week from the defined DateTime.</value>
  </data>
  <data name="Equal.Description" xml:space="preserve">
    <value>Returns true if both operands have the same value; otherwise, it returns false.</value>
  </data>
  <data name="CharIndex3Param.Description" xml:space="preserve">
    <value>CharIndex(String1, String2, StartLocation)
Returns the starting position of String1 within String2, beginning from the StartLocation character position to the end of a string.</value>
  </data>
  <data name="Log10.Description" xml:space="preserve">
    <value>Log10(Value)
Returns the base 10 logarithm of a specified number.</value>
  </data>
  <data name="BitwiseXor.Description" xml:space="preserve">
    <value>Performs a logical exclusion on two Boolean expressions, or a bitwise exclusion on two numeric expressions.</value>
  </data>
  <data name="GetMonth.Description" xml:space="preserve">
    <value>GetMonth(DateTime)
Extracts a month from the defined DateTime.</value>
  </data>
  <data name="PadLeft3Param.Description" xml:space="preserve">
    <value>PadLeft(String, Length, Char)
Left-aligns characters in the defined string, padding its left side with the specified Char up to a specified total length.</value>
  </data>
  <data name="Functions.Text" xml:space="preserve">
    <value>Functions</value>
  </data>
  <data name="Concat.Description" xml:space="preserve">
    <value>Concat(String1, ... , StringN)
Returns a string value containing the concatenation of the current string with any additional strings.</value>
  </data>
  <data name="Not.Description" xml:space="preserve">
    <value>Performs logical negation on an expression.</value>
  </data>
  <data name="AddMonths.Description" xml:space="preserve">
    <value>AddMonths(DateTime, MonthsCount)
Returns a date-time value that is the specified number of months away from the specified DateTime.</value>
  </data>
  <data name="buttonOK.Text" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="GetMilliSecond.Description" xml:space="preserve">
    <value>GetMilliSecond(DateTime)
Extracts milliseconds from the defined DateTime.</value>
  </data>
  <data name="CharIndex.Description" xml:space="preserve">
    <value>CharIndex(String1, String2)
Returns the starting position of String1 within String2, beginning from the zero character position to the end of a string.</value>
  </data>
  <data name="PadLeft.Description" xml:space="preserve">
    <value>PadLeft(String, Length)
Left-aligns characters in the defined string, padding its left side with white space characters up to a specified total length.</value>
  </data>
  <data name="Fields.Text" xml:space="preserve">
    <value>Fields</value>
  </data>
  <data name="Len.Description" xml:space="preserve">
    <value>Len(Value)
Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</value>
  </data>
  <data name="functionsTypes.Properties.DateTimeItems" xml:space="preserve">
    <value>Date-time</value>
  </data>
  <data name="Cos.Description" xml:space="preserve">
    <value>Cos(Value)
Returns the cosine of the angle defined in radians.</value>
  </data>
  <data name="AddMinutes.Description" xml:space="preserve">
    <value>AddMinutes(DateTime, MinutesCount)
Returns a date-time value that is the specified number of minutes away from the specified DateTime.</value>
  </data>
  <data name="Less.Description" xml:space="preserve">
    <value>Less than operator. Used to compare expressions.</value>
  </data>
  <data name="functionsTypes.Properties.LogicalItems" xml:space="preserve">
    <value>Logical</value>
  </data>
  <data name="Operators.Text" xml:space="preserve">
    <value>Operators</value>
  </data>
  <data name="LessOrEqual.Description" xml:space="preserve">
    <value>Less than or equal to operator. Used to compare expressions.</value>
  </data>
  <data name="AddSeconds.Description" xml:space="preserve">
    <value>AddSeconds(DateTime, SecondsCount)
Returns a date-time value that is the specified number of seconds away from the specified DateTime.</value>
  </data>
  <data name="Asin.Description" xml:space="preserve">
    <value>Asin(Value)
Returns the arcsine of a number (the angle, in radians, whose sine is the given float expression).</value>
  </data>
  <data name="Log2Param.Description" xml:space="preserve">
    <value>Log(Value, Base)
Returns the logarithm of a specified number in a specified Base.</value>
  </data>
  <data name="CurrentRowIndex.Description" xml:space="preserve">
    <value>Returns the index of the current data row in a datasource. Note that this index is zero-based.</value>
  </data>
  <data name="Or.Description" xml:space="preserve">
    <value>Performs a logical disjunction on two Boolean expressions.</value>
  </data>
  <data name="Floor.Description" xml:space="preserve">
    <value>Floor(Value)
Returns the largest integer less than or equal to the given numeric expression.</value>
  </data>
  <data name="GetDayOfYear.Description" xml:space="preserve">
    <value>GetDayOfYear(DateTime)
Extracts a day of the year from the defined DateTime.</value>
  </data>
  <data name="Divide.Description" xml:space="preserve">
    <value>Divides the first operand by the second.</value>
  </data>
  <data name="AddTicks.Description" xml:space="preserve">
    <value>AddTicks(DateTime, TicksCount)
Returns a date-time value that is the specified number of ticks away from the specified DateTime.</value>
  </data>
  <data name="GetDate.Description" xml:space="preserve">
    <value>GetDate(DateTime)
Extracts a date from the defined DateTime.</value>
  </data>
  <data name="AddMilliSeconds.Description" xml:space="preserve">
    <value>AddMilliSeconds(DateTime, MilliSecondsCount)
Returns a date-time value that is the specified number of milliseconds away from the specified DateTime.</value>
  </data>
  <data name="IsNullOrEmpty.Description" xml:space="preserve">
    <value>IsNullOrEmpty(String)
Returns True if the specified String object is NULL or an empty string; otherwise, False is returned.</value>
  </data>
  <data name="Expression.Text" xml:space="preserve">
    <value>Expression Editor</value>
  </data>
  <data name="Like.Description" xml:space="preserve">
    <value>Compares a string against a pattern. If the value of the string matches the pattern, result is true. If the string does not match the pattern, result is false. If both string and pattern are empty strings, the result is true.</value>
  </data>
  <data name="AddHours.Description" xml:space="preserve">
    <value>AddHours(DateTime, HoursCount)
Returns a date-time value that is the specified number of hours away from the specified DateTime.</value>
  </data>
  <data name="Insert.Description" xml:space="preserve">
    <value>Insert(String1, StartPosition, String2)
Inserts String2 into String1 at the position specified by StartPositon</value>
  </data>
  <data name="AddDays.Description" xml:space="preserve">
    <value>AddDays(DateTime, DaysCount)
Returns a date-time value that is the specified number of days away from the specified DateTime.</value>
  </data>
  <data name="Fields Description Prefix" xml:space="preserve">
    <value>The type of this field is: </value>
  </data>
  <data name="False.Description" xml:space="preserve">
    <value>Represents the Boolean False value.</value>
  </data>
  <data name="Condition.Caption" xml:space="preserve">
    <value>Condition expression editor</value>
  </data>
  <data name="functionsTypes.Properties.StringItems" xml:space="preserve">
    <value>String</value>
  </data>
  <data name="functionsTypes.Properties.MathItems" xml:space="preserve">
    <value>Math</value>
  </data>
</root>