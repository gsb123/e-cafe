<?xml version="1.0" encoding="utf-8"?>
<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Expression.Text" xml:space="preserve">
    <value>Editor de Expresiones</value>
  </data>
  <data name="Floor.Description" xml:space="preserve">
    <value>Floor(Value)
Devuelve el número entero mas grande, cuyo valor es menor o igual que el valor especificado.</value>
  </data>
  <data name="IsNullOrEmpty.Description" xml:space="preserve">
    <value>IsNullOrEmpty(String)
Devuelve 'Verdadero' si la cadena especificada el nulo o una cadena vacía, sino devuelve 'Falso'.</value>
  </data>
  <data name="Like.Description" xml:space="preserve">
    <value>Compara una cadena con un patrón. Si coincide el valor con el patrón, el resultado es Verdadero. Si la cadena no coincide con el patrón, el resultado es Falso. Si las dos cadenas están vacías, el resultado también será Verdadero.</value>
  </data>
  <data name="Plus.Description" xml:space="preserve">
    <value>Suma dos valores numéricos y concatena dos cadenas.</value>
  </data>
  <data name="Ceiling.Description" xml:space="preserve">
    <value>Ceiling(Value)
Devuelve el valor entero mas pequeño, que es mayor o igual, que el valor especificado.</value>
  </data>
  <data name="UtcNow.Description" xml:space="preserve">
    <value>UtcNow()
Devuelve la fecha-hora actual del sistema, expresado como Hora Universal Coordinada (UTC).</value>
  </data>
  <data name="Insert.Description" xml:space="preserve">
    <value>Insert(String1, StartPosition, String2)
Inserta la segunda cadena en la promera cadena en la posición indicada.</value>
  </data>
  <data name="Tan.Description" xml:space="preserve">
    <value>Tan(Value)
Devuelve el valor tangente del ángulo definido en radios.</value>
  </data>
  <data name="Or.Description" xml:space="preserve">
    <value>Efectúa una disyunción entre dos valores lógicos.</value>
  </data>
  <data name="AddMinutes.Description" xml:space="preserve">
    <value>AddMinutes(DateTime, MinutesCount)
Devuelve la fecha-hora después de añadir los minutos indicados.</value>
  </data>
  <data name="AddMilliSeconds.Description" xml:space="preserve">
    <value>AddMilliSeconds(DateTime, MilliSecondsCount)
Devuelve la fecha-hora después de añadir los milisegundos indicados.</value>
  </data>
  <data name="Between.Description" xml:space="preserve">
    <value>Between (,)
Indica si un valor entra en un rango específico de valores.</value>
  </data>
  <data name="Condition.Text" xml:space="preserve">
    <value>Editor de Condiciones</value>
  </data>
  <data name="Equal.Description" xml:space="preserve">
    <value>Devuelve 'Verdadero' si los dos operandos tienen el mismo valor, sino 'Falso'.</value>
  </data>
  <data name="BitwiseXor.Description" xml:space="preserve">
    <value>Efectúa una operación 'XOR' lógica (a nivel de bits) entre dos valores enteros.</value>
  </data>
  <data name="GetDayOfYear.Description" xml:space="preserve">
    <value>GetDayOfYear(DateTime)
Extrae el día de la fecha-hora especificada.</value>
  </data>
  <data name="And.Description" xml:space="preserve">
    <value>Efectúa una conjunción lógica entre las dos expresiones.</value>
  </data>
  <data name="Ascii.Description" xml:space="preserve">
    <value>Ascii(String)
Devuelve el valor ASCII del primer carácter de la cadena especificada.</value>
  </data>
  <data name="True.Description" xml:space="preserve">
    <value>Representa el valor lógico 'Verdadero'.</value>
  </data>
  <data name="In.Description" xml:space="preserve">
    <value>In (,,,)
Comprueba la existencia de una propiedad dentro de un conjunto.</value>
  </data>
  <data name="buttonOK.Text" xml:space="preserve">
    <value>Aceptar</value>
  </data>
  <data name="Condition.Caption" xml:space="preserve">
    <value>Editor de condiciones de expresiones</value>
  </data>
  <data name="Not.Description" xml:space="preserve">
    <value>Efectúa una negación lógica sobre una expresión.</value>
  </data>
  <data name="GetHour.Description" xml:space="preserve">
    <value>GetHour(DateTime)
Extrae la hora de la fecha-hora indicada.</value>
  </data>
  <data name="PadRight3Param.Description" xml:space="preserve">
    <value>PadRight(String, Length, Char)
Rellena una cadena con espacios por la derecha hasta llegar a la longitud indicada.</value>
  </data>
  <data name="False.Description" xml:space="preserve">
    <value>Representa el valor lógico 'Falso'</value>
  </data>
  <data name="AddHours.Description" xml:space="preserve">
    <value>AddHours(DateTime, HoursCount)
Devuelve una fecha-hora después de haber sumado las horas indicadas.</value>
  </data>
  <data name="Sign.Description" xml:space="preserve">
    <value>Sign(Value)
Devuelve el signo positivo (+1), cero (0) o negativo (-1) de la expresión dada.</value>
  </data>
  <data name="Sqr.Description" xml:space="preserve">
    <value>Sqr(Value)
Devuelve la raíz cuadrada de un número dado.</value>
  </data>
  <data name="functionsTypes.Properties.LogicalItems" xml:space="preserve">
    <value>Lógico</value>
  </data>
  <data name="Substring3param.Description" xml:space="preserve">
    <value>Substring(Cadena, PosiciónInicial, Longitud)
Devuelve una sub-cadena de Cadena. La sub-cadena empieza el la posición PosiciónInicial hasta la longitud indicada.</value>
  </data>
  <data name="ToStr.Description" xml:space="preserve">
    <value>ToStr(Value)
Devuelve una representación de cadena del valor indicado.</value>
  </data>
  <data name="Operators.Text" xml:space="preserve">
    <value>Operadores</value>
  </data>
  <data name="AddYears.Description" xml:space="preserve">
    <value>AddYears(DateTime, YearsCount)
Devuelve la fecha-hora después de añadir los años indicados.</value>
  </data>
  <data name="GetMilliSecond.Description" xml:space="preserve">
    <value>GetMilliSecond(DateTime)
Extrae los milisegungos de la fecha-hora indicada.</value>
  </data>
  <data name="NotEqual.Description" xml:space="preserve">
    <value>Devuelve Verdadero si los dos operandos no son iguales, sino devuelve Falso.</value>
  </data>
  <data name="Less.Description" xml:space="preserve">
    <value>Operador 'menor que'. Usado para comparar expresiones.</value>
  </data>
  <data name="AddMonths.Description" xml:space="preserve">
    <value>AddMonths(DateTime, MonthsCount)
Devuelve la fecha-hora después de añadir los meses indicados.</value>
  </data>
  <data name="Abs.Description" xml:space="preserve">
    <value>Abs(Value)
Devuelve el valor absoluto positivo, de la expresión numérica.</value>
  </data>
  <data name="Concat.Description" xml:space="preserve">
    <value>Concat(String1, ... , StringN)
Devuelve las dos cadenas indicadas concatenadas en una.</value>
  </data>
  <data name="Iif.Description" xml:space="preserve">
    <value>Iif(Expresión, ParteVerdadero, ParteFalse)
Devuelve ParteVerdadero o ParteFalse, dependiendo de como se evalúa la expresión lógica.</value>
  </data>
  <data name="AddSeconds.Description" xml:space="preserve">
    <value>AddSeconds(DateTime, SecondsCount)
Devuelve una fecha-hora después de haber sumado los segundos indicados.</value>
  </data>
  <data name="UnboundColumn.Caption" xml:space="preserve">
    <value>Editor de Expresiones</value>
  </data>
  <data name="CurrentRowIndex.Description" xml:space="preserve">
    <value>Devuelve un ínice correspondiente a la fila actual en la fuente de datos. Nota: El índice de la primera fila es cero, no uno.</value>
  </data>
  <data name="GridFields Description Prefix" xml:space="preserve">
    <value>Información del Campo
Etiqueta: {1}
El tipo del campo es: {2}</value>
  </data>
  <data name="GetMinute.Description" xml:space="preserve">
    <value>GetMinute(DateTime)
Extrae los minutos de la fecha-hora especificada.</value>
  </data>
  <data name="RowCount.Description" xml:space="preserve">
    <value>Devuelve el número de filas de la fuente de datos.</value>
  </data>
  <data name="Lower.Description" xml:space="preserve">
    <value>Lower(String)
Devuelve una cadena convertida a minyúsculas.</value>
  </data>
  <data name="GetDate.Description" xml:space="preserve">
    <value>GetDate(DateTime)
Extrae la parte de la fecha de un valor fecha-hora.</value>
  </data>
  <data name="PadLeft3Param.Description" xml:space="preserve">
    <value>PadLeft(String, Length, Char)
Rellena una cadena con espacios por la izquierda hasta llegar a la longitud indicada.</value>
  </data>
  <data name="Tanh.Description" xml:space="preserve">
    <value>Tanh(Value)
Devuelve el valor hiperbólico tangente del ángulo definido en radios.</value>
  </data>
  <data name="Len.Description" xml:space="preserve">
    <value>Len(Value)
Devuelve un número entero que representa el número de caracteres en una cadena, o el número nominal de bytes necesario para almacenar una variable.</value>
  </data>
  <data name="Rnd.Description" xml:space="preserve">
    <value>Rnd()
Devuelve un valor aleatorio, menor que uno, pero mayor o igual a cero.</value>
  </data>
  <data name="functionsTypes.Properties.DateTimeItems" xml:space="preserve">
    <value>Fecha-hora</value>
  </data>
  <data name="Power.Description" xml:space="preserve">
    <value>Power(Value, Power)
Devuelve un número elevado al poder del otro número especificado.</value>
  </data>
  <data name="Multiply.Description" xml:space="preserve">
    <value>Efectúa una multiplicación entre dos valores numéricos.</value>
  </data>
  <data name="AddTicks.Description" xml:space="preserve">
    <value>AddTicks(DateTime, TicksCount)
Devuelve una fecha-hora después de haber sumado los pasos indicados.</value>
  </data>
  <data name="Cos.Description" xml:space="preserve">
    <value>Cos(Value)
Devuelve el cosino de un ángulo definido en radios.</value>
  </data>
  <data name="GetTimeOfDay.Description" xml:space="preserve">
    <value>GetTimeOfDay(DateTime)
Extrae el valor de hora definido en pasos.</value>
  </data>
  <data name="Modulo.Description" xml:space="preserve">
    <value>Devuelve el resto (módulo) de una división de dos valores numéricos.</value>
  </data>
  <data name="Log.Description" xml:space="preserve">
    <value>Log(Value)
Devuelve el valor logarítmico del número especificado.</value>
  </data>
  <data name="Asin.Description" xml:space="preserve">
    <value>Asin(Value)
Devuelve el valor arcosino de un número (el ángulo, en radios, cuyo sino es el valor especificado).</value>
  </data>
  <data name="GetMonth.Description" xml:space="preserve">
    <value>GetMonth(DateTime)
Extrae el mes de la fecha-hora indicada.</value>
  </data>
  <data name="Fields Description Prefix" xml:space="preserve">
    <value>El tipo de éste campos es: </value>
  </data>
  <data name="Today.Description" xml:space="preserve">
    <value>Today()
Devuelve la fecha actual del sistema, descartando la hora. En realidad, devuelve medianoche de la fecha actual.</value>
  </data>
  <data name="Substring2param.Description" xml:space="preserve">
    <value>Substring(Cadena, PosiciónInicial)
Devuelve una sub-cadena de Cadena. La sub-cadena empieza el la posición PosiciónInicial.</value>
  </data>
  <data name="IsNull.Description" xml:space="preserve">
    <value>IsNull(Value)
Devuelve 'Verdadero' si el valor indicado es nulo.</value>
  </data>
  <data name="Log2Param.Description" xml:space="preserve">
    <value>Log(Value, Base)
Devuelve el valor logarítmico del número especificado con las base indicada.</value>
  </data>
  <data name="Now.Description" xml:space="preserve">
    <value>Now()
Devuelve la fecha-hora actual del sistema.</value>
  </data>
  <data name="LessOrEqual.Description" xml:space="preserve">
    <value>Operador 'menor o igual que'. Usado para comparar expresiones.</value>
  </data>
  <data name="buttonCancel.Text" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="Exp.Description" xml:space="preserve">
    <value>Exp(Value)
Devuelve el valor expotencial del número decimal indicado.</value>
  </data>
  <data name="Atn.Description" xml:space="preserve">
    <value>Atn(Value)
Devuelve el valor arcotangente de un número (el ángulo, en radios, cuyo tangente es el valor especificado).</value>
  </data>
  <data name="functionsTypes.Properties.StringItems" xml:space="preserve">
    <value>Cadena</value>
  </data>
  <data name="Cosh.Description" xml:space="preserve">
    <value>Cosh(Value)
Devuelve el valor hiperbólico cosino del ángulo definido en radios.</value>
  </data>
  <data name="Parameters Description Prefix" xml:space="preserve">
    <value>El tipo del parámetros es: </value>
  </data>
  <data name="Null.Description" xml:space="preserve">
    <value>Representa un objeto nulo, que no hace referencia a ningun objeto.</value>
  </data>
  <data name="BigMul.Description" xml:space="preserve">
    <value>BigMul(Value1, Value2)
Devuelve un Int64, que es el resultado de la multiplicación de los dos valores enteros indicados.</value>
  </data>
  <data name="Functions.Text" xml:space="preserve">
    <value>Funciones</value>
  </data>
  <data name="Constants.Text" xml:space="preserve">
    <value>Constantes</value>
  </data>
  <data name="Log10.Description" xml:space="preserve">
    <value>Log10(Value)
Devuelve el valor logarítmico de base 10 del número dado.</value>
  </data>
  <data name="Sinh.Description" xml:space="preserve">
    <value>Sinh(Value)
Devuelve el valor hiperbólico sino del ángulo definido en radios.</value>
  </data>
  <data name="GreaterOrEqual.Description" xml:space="preserve">
    <value>Operador 'mayor o igual que'. Usado para comparar expresiones.</value>
  </data>
  <data name="functionsTypes.Properties.AllItems" xml:space="preserve">
    <value>(Todos)</value>
  </data>
  <data name="Round.Description" xml:space="preserve">
    <value>Round(Value)
Redondea un valor decimal al entero mas cercano.</value>
  </data>
  <data name="GetDay.Description" xml:space="preserve">
    <value>GetDay(DateTime)
Extrae el día de un valor fecha-hora.</value>
  </data>
  <data name="Parameters.Text" xml:space="preserve">
    <value>Parámetros</value>
  </data>
  <data name="functionsTypes.EditValue" xml:space="preserve">
    <value>(Todos)</value>
  </data>
  <data name="Remove.Description" xml:space="preserve">
    <value>Remove(String, StartPosition, Length)
Elimina un número determinado de carácteres de la cadena indicada, empezando el la posición especificada.</value>
  </data>
  <data name="GetDayOfWeek.Description" xml:space="preserve">
    <value>GetDayOfWeek(DateTime)
Extrae el día de la semana de un valor fecha-hora.</value>
  </data>
  <data name="AddDays.Description" xml:space="preserve">
    <value>AddDays(DateTime, DaysCount)
Devuelve la fecha-hora después de añadir los días indicados.</value>
  </data>
  <data name="PadRight.Description" xml:space="preserve">
    <value>PadRight(String, Length)
Rellena una cadena con espacios por la derecha hasta llegar a la longitud indicada.</value>
  </data>
  <data name="AddTimeSpan.Description" xml:space="preserve">
    <value>AddTimeSpan(DateTime, TimeSpan)
Devuelve una fecha-hora después de haber sumado el TimeSpan indicado.</value>
  </data>
  <data name="Sin.Description" xml:space="preserve">
    <value>Sin(Value)
Devuelve el valor sino del ángulo, definido en radios.</value>
  </data>
  <data name="CharIndex3Param.Description" xml:space="preserve">
    <value>CharIndex(Cadena1, Cadena2, PosiciónInicio)
Devuelve la posición de la Cadena1 dentro de Cadena2, empezando la búsqueda en la posición PosiciónInicio.</value>
  </data>
  <data name="Atn2.Description" xml:space="preserve">
    <value>Atn2(Value1, Value2)
Devuelve the ángulo, en radios, cuyo tangente es el cociente de los dos valores indicados.</value>
  </data>
  <data name="PadLeft.Description" xml:space="preserve">
    <value>PadLeft(String, Length)
Rellena una cadena con espacios por la izquierda hasta llegar a la longitud indicada.</value>
  </data>
  <data name="Upper.Description" xml:space="preserve">
    <value>Upper(String)
Devuelve una cadena convertida a mayúsculas.</value>
  </data>
  <data name="Greater.Description" xml:space="preserve">
    <value>Operador 'mayor que'. Usado para comparar expresiones.</value>
  </data>
  <data name="Acos.Description" xml:space="preserve">
    <value>Acos(Value)
Devuelve el valor arcocosino de un número (el ángulo, en radios, cuyo cosino es el valor especificado).</value>
  </data>
  <data name="GetSecond.Description" xml:space="preserve">
    <value>GetSecond(DateTime)
Extrae los segundos de la fecha-hora especificada.</value>
  </data>
  <data name="GetYear.Description" xml:space="preserve">
    <value>GetYear(DateTime)
Extrae el año de la fecha-hora indicada.</value>
  </data>
  <data name="Trim.Description" xml:space="preserve">
    <value>Trim(String)
Elimina todos los espacios al principio y al final de la cadena especificada.</value>
  </data>
  <data name="Divide.Description" xml:space="preserve">
    <value>Efectúa una división del primer operando por el segundo.</value>
  </data>
  <data name="Fields.Text" xml:space="preserve">
    <value>Campos</value>
  </data>
  <data name="BitwiseOr.Description" xml:space="preserve">
    <value>Efectúa una operación 'O' lógica (a nivel de bits) entre dos valores enteros.</value>
  </data>
  <data name="CharIndex.Description" xml:space="preserve">
    <value>CharIndex(String1, String2)
Devuelve la posición inical de la segunda cadena dentro de la primera cadena, siendo el primer carácter la posición cero.</value>
  </data>
  <data name="BitwiseAnd.Description" xml:space="preserve">
    <value>Efectúa una operación 'Y' lógica entre dos valores enteros.</value>
  </data>
  <data name="Minus.Description" xml:space="preserve">
    <value>Evalúa la diferencia entre dos números.</value>
  </data>
  <data name="Replace.Description" xml:space="preserve">
    <value>Replace(Cadena, SubCadena2, Cadena3)
Devuelve una copia de Cadena1, en la cual, todas las instancias de SubCadena2 han sido reemplazadas por Cadena3.</value>
  </data>
  <data name="Reverse.Description" xml:space="preserve">
    <value>Reverse(String)
Invierte todos los carácteres de una cadena.</value>
  </data>
  <data name="Char.Description" xml:space="preserve">
    <value>Char(Number)
Convierte en valor entero ASCII a un carácter.</value>
  </data>
  <data name="functionsTypes.Properties.MathItems" xml:space="preserve">
    <value>Matemáticos</value>
  </data>
</root>