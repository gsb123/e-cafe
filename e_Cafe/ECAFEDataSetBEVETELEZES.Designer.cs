//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace e_Cafe {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ECAFEDataSetBEVETELEZES")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ECAFEDataSetBEVETELEZES : global::System.Data.DataSet {
        
        private BEVETEL_FEJDataTable tableBEVETEL_FEJ;
        
        private BEVETEL_SORDataTable tableBEVETEL_SOR;
        
        private global::System.Data.DataRelation relationFK_BEVETEL_SOR_BEVETEL_FEJ;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ECAFEDataSetBEVETELEZES() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ECAFEDataSetBEVETELEZES(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["BEVETEL_FEJ"] != null)) {
                    base.Tables.Add(new BEVETEL_FEJDataTable(ds.Tables["BEVETEL_FEJ"]));
                }
                if ((ds.Tables["BEVETEL_SOR"] != null)) {
                    base.Tables.Add(new BEVETEL_SORDataTable(ds.Tables["BEVETEL_SOR"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BEVETEL_FEJDataTable BEVETEL_FEJ {
            get {
                return this.tableBEVETEL_FEJ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BEVETEL_SORDataTable BEVETEL_SOR {
            get {
                return this.tableBEVETEL_SOR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ECAFEDataSetBEVETELEZES cln = ((ECAFEDataSetBEVETELEZES)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["BEVETEL_FEJ"] != null)) {
                    base.Tables.Add(new BEVETEL_FEJDataTable(ds.Tables["BEVETEL_FEJ"]));
                }
                if ((ds.Tables["BEVETEL_SOR"] != null)) {
                    base.Tables.Add(new BEVETEL_SORDataTable(ds.Tables["BEVETEL_SOR"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableBEVETEL_FEJ = ((BEVETEL_FEJDataTable)(base.Tables["BEVETEL_FEJ"]));
            if ((initTable == true)) {
                if ((this.tableBEVETEL_FEJ != null)) {
                    this.tableBEVETEL_FEJ.InitVars();
                }
            }
            this.tableBEVETEL_SOR = ((BEVETEL_SORDataTable)(base.Tables["BEVETEL_SOR"]));
            if ((initTable == true)) {
                if ((this.tableBEVETEL_SOR != null)) {
                    this.tableBEVETEL_SOR.InitVars();
                }
            }
            this.relationFK_BEVETEL_SOR_BEVETEL_FEJ = this.Relations["FK_BEVETEL_SOR_BEVETEL_FEJ"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ECAFEDataSetBEVETELEZES";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ECAFEDataSetBEVETELEZES.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableBEVETEL_FEJ = new BEVETEL_FEJDataTable();
            base.Tables.Add(this.tableBEVETEL_FEJ);
            this.tableBEVETEL_SOR = new BEVETEL_SORDataTable();
            base.Tables.Add(this.tableBEVETEL_SOR);
            this.relationFK_BEVETEL_SOR_BEVETEL_FEJ = new global::System.Data.DataRelation("FK_BEVETEL_SOR_BEVETEL_FEJ", new global::System.Data.DataColumn[] {
                        this.tableBEVETEL_FEJ.BEVETEL_FEJ_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableBEVETEL_SOR.BEVETEL_FEJ_IDColumn}, false);
            this.Relations.Add(this.relationFK_BEVETEL_SOR_BEVETEL_FEJ);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBEVETEL_FEJ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBEVETEL_SOR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ECAFEDataSetBEVETELEZES ds = new ECAFEDataSetBEVETELEZES();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void BEVETEL_FEJRowChangeEventHandler(object sender, BEVETEL_FEJRowChangeEvent e);
        
        public delegate void BEVETEL_SORRowChangeEventHandler(object sender, BEVETEL_SORRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BEVETEL_FEJDataTable : global::System.Data.TypedTableBase<BEVETEL_FEJRow> {
            
            private global::System.Data.DataColumn columnBEVETEL_FEJ_ID;
            
            private global::System.Data.DataColumn columnDATUM;
            
            private global::System.Data.DataColumn columnPARTNER_ID;
            
            private global::System.Data.DataColumn columnSZALLITOLEVEL_SZAM;
            
            private global::System.Data.DataColumn columnBIZONYLATSZAM;
            
            private global::System.Data.DataColumn columnKONYVELT;
            
            private global::System.Data.DataColumn columnSZAMLA_SZAM;
            
            private global::System.Data.DataColumn columnSZAMLA_OSSZESEN;
            
            private global::System.Data.DataColumn columnSZAMLA_OSSZ_BRUTTO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BEVETEL_FEJDataTable() {
                this.TableName = "BEVETEL_FEJ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BEVETEL_FEJDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BEVETEL_FEJDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BEVETEL_FEJ_IDColumn {
                get {
                    return this.columnBEVETEL_FEJ_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATUMColumn {
                get {
                    return this.columnDATUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PARTNER_IDColumn {
                get {
                    return this.columnPARTNER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SZALLITOLEVEL_SZAMColumn {
                get {
                    return this.columnSZALLITOLEVEL_SZAM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BIZONYLATSZAMColumn {
                get {
                    return this.columnBIZONYLATSZAM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KONYVELTColumn {
                get {
                    return this.columnKONYVELT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SZAMLA_SZAMColumn {
                get {
                    return this.columnSZAMLA_SZAM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SZAMLA_OSSZESENColumn {
                get {
                    return this.columnSZAMLA_OSSZESEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SZAMLA_OSSZ_BRUTTOColumn {
                get {
                    return this.columnSZAMLA_OSSZ_BRUTTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BEVETEL_FEJRow this[int index] {
                get {
                    return ((BEVETEL_FEJRow)(this.Rows[index]));
                }
            }
            
            public event BEVETEL_FEJRowChangeEventHandler BEVETEL_FEJRowChanging;
            
            public event BEVETEL_FEJRowChangeEventHandler BEVETEL_FEJRowChanged;
            
            public event BEVETEL_FEJRowChangeEventHandler BEVETEL_FEJRowDeleting;
            
            public event BEVETEL_FEJRowChangeEventHandler BEVETEL_FEJRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBEVETEL_FEJRow(BEVETEL_FEJRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BEVETEL_FEJRow AddBEVETEL_FEJRow(System.DateTime DATUM, int PARTNER_ID, string SZALLITOLEVEL_SZAM, string BIZONYLATSZAM, int KONYVELT, string SZAMLA_SZAM, double SZAMLA_OSSZESEN, double SZAMLA_OSSZ_BRUTTO) {
                BEVETEL_FEJRow rowBEVETEL_FEJRow = ((BEVETEL_FEJRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DATUM,
                        PARTNER_ID,
                        SZALLITOLEVEL_SZAM,
                        BIZONYLATSZAM,
                        KONYVELT,
                        SZAMLA_SZAM,
                        SZAMLA_OSSZESEN,
                        SZAMLA_OSSZ_BRUTTO};
                rowBEVETEL_FEJRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBEVETEL_FEJRow);
                return rowBEVETEL_FEJRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BEVETEL_FEJRow FindByBEVETEL_FEJ_ID(int BEVETEL_FEJ_ID) {
                return ((BEVETEL_FEJRow)(this.Rows.Find(new object[] {
                            BEVETEL_FEJ_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BEVETEL_FEJDataTable cln = ((BEVETEL_FEJDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BEVETEL_FEJDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBEVETEL_FEJ_ID = base.Columns["BEVETEL_FEJ_ID"];
                this.columnDATUM = base.Columns["DATUM"];
                this.columnPARTNER_ID = base.Columns["PARTNER_ID"];
                this.columnSZALLITOLEVEL_SZAM = base.Columns["SZALLITOLEVEL_SZAM"];
                this.columnBIZONYLATSZAM = base.Columns["BIZONYLATSZAM"];
                this.columnKONYVELT = base.Columns["KONYVELT"];
                this.columnSZAMLA_SZAM = base.Columns["SZAMLA_SZAM"];
                this.columnSZAMLA_OSSZESEN = base.Columns["SZAMLA_OSSZESEN"];
                this.columnSZAMLA_OSSZ_BRUTTO = base.Columns["SZAMLA_OSSZ_BRUTTO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBEVETEL_FEJ_ID = new global::System.Data.DataColumn("BEVETEL_FEJ_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBEVETEL_FEJ_ID);
                this.columnDATUM = new global::System.Data.DataColumn("DATUM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATUM);
                this.columnPARTNER_ID = new global::System.Data.DataColumn("PARTNER_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARTNER_ID);
                this.columnSZALLITOLEVEL_SZAM = new global::System.Data.DataColumn("SZALLITOLEVEL_SZAM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSZALLITOLEVEL_SZAM);
                this.columnBIZONYLATSZAM = new global::System.Data.DataColumn("BIZONYLATSZAM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBIZONYLATSZAM);
                this.columnKONYVELT = new global::System.Data.DataColumn("KONYVELT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKONYVELT);
                this.columnSZAMLA_SZAM = new global::System.Data.DataColumn("SZAMLA_SZAM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSZAMLA_SZAM);
                this.columnSZAMLA_OSSZESEN = new global::System.Data.DataColumn("SZAMLA_OSSZESEN", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSZAMLA_OSSZESEN);
                this.columnSZAMLA_OSSZ_BRUTTO = new global::System.Data.DataColumn("SZAMLA_OSSZ_BRUTTO", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSZAMLA_OSSZ_BRUTTO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBEVETEL_FEJ_ID}, true));
                this.columnBEVETEL_FEJ_ID.AutoIncrement = true;
                this.columnBEVETEL_FEJ_ID.AutoIncrementSeed = -1;
                this.columnBEVETEL_FEJ_ID.AutoIncrementStep = -1;
                this.columnBEVETEL_FEJ_ID.AllowDBNull = false;
                this.columnBEVETEL_FEJ_ID.ReadOnly = true;
                this.columnBEVETEL_FEJ_ID.Unique = true;
                this.columnDATUM.AllowDBNull = false;
                this.columnSZALLITOLEVEL_SZAM.MaxLength = 30;
                this.columnBIZONYLATSZAM.MaxLength = 30;
                this.columnKONYVELT.AllowDBNull = false;
                this.columnKONYVELT.DefaultValue = ((int)(0));
                this.columnSZAMLA_SZAM.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BEVETEL_FEJRow NewBEVETEL_FEJRow() {
                return ((BEVETEL_FEJRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BEVETEL_FEJRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BEVETEL_FEJRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BEVETEL_FEJRowChanged != null)) {
                    this.BEVETEL_FEJRowChanged(this, new BEVETEL_FEJRowChangeEvent(((BEVETEL_FEJRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BEVETEL_FEJRowChanging != null)) {
                    this.BEVETEL_FEJRowChanging(this, new BEVETEL_FEJRowChangeEvent(((BEVETEL_FEJRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BEVETEL_FEJRowDeleted != null)) {
                    this.BEVETEL_FEJRowDeleted(this, new BEVETEL_FEJRowChangeEvent(((BEVETEL_FEJRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BEVETEL_FEJRowDeleting != null)) {
                    this.BEVETEL_FEJRowDeleting(this, new BEVETEL_FEJRowChangeEvent(((BEVETEL_FEJRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBEVETEL_FEJRow(BEVETEL_FEJRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ECAFEDataSetBEVETELEZES ds = new ECAFEDataSetBEVETELEZES();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BEVETEL_FEJDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BEVETEL_SORDataTable : global::System.Data.TypedTableBase<BEVETEL_SORRow> {
            
            private global::System.Data.DataColumn columnSOR_ID;
            
            private global::System.Data.DataColumn columnBEVETEL_FEJ_ID;
            
            private global::System.Data.DataColumn columnCIKK_ID;
            
            private global::System.Data.DataColumn columnMENNY;
            
            private global::System.Data.DataColumn columnBESZ_AR;
            
            private global::System.Data.DataColumn columnNETTO_ERTEK;
            
            private global::System.Data.DataColumn columnAFA_ERTEK;
            
            private global::System.Data.DataColumn columnBRUTTO_ERTEK;
            
            private global::System.Data.DataColumn columnFELADVA;
            
            private global::System.Data.DataColumn columnRAKTAR_ID;
            
            private global::System.Data.DataColumn columnMEGJEGYZES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BEVETEL_SORDataTable() {
                this.TableName = "BEVETEL_SOR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BEVETEL_SORDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BEVETEL_SORDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOR_IDColumn {
                get {
                    return this.columnSOR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BEVETEL_FEJ_IDColumn {
                get {
                    return this.columnBEVETEL_FEJ_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CIKK_IDColumn {
                get {
                    return this.columnCIKK_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MENNYColumn {
                get {
                    return this.columnMENNY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BESZ_ARColumn {
                get {
                    return this.columnBESZ_AR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NETTO_ERTEKColumn {
                get {
                    return this.columnNETTO_ERTEK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AFA_ERTEKColumn {
                get {
                    return this.columnAFA_ERTEK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRUTTO_ERTEKColumn {
                get {
                    return this.columnBRUTTO_ERTEK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FELADVAColumn {
                get {
                    return this.columnFELADVA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RAKTAR_IDColumn {
                get {
                    return this.columnRAKTAR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MEGJEGYZESColumn {
                get {
                    return this.columnMEGJEGYZES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BEVETEL_SORRow this[int index] {
                get {
                    return ((BEVETEL_SORRow)(this.Rows[index]));
                }
            }
            
            public event BEVETEL_SORRowChangeEventHandler BEVETEL_SORRowChanging;
            
            public event BEVETEL_SORRowChangeEventHandler BEVETEL_SORRowChanged;
            
            public event BEVETEL_SORRowChangeEventHandler BEVETEL_SORRowDeleting;
            
            public event BEVETEL_SORRowChangeEventHandler BEVETEL_SORRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBEVETEL_SORRow(BEVETEL_SORRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BEVETEL_SORRow AddBEVETEL_SORRow(BEVETEL_FEJRow parentBEVETEL_FEJRowByFK_BEVETEL_SOR_BEVETEL_FEJ, int CIKK_ID, double MENNY, double BESZ_AR, double NETTO_ERTEK, double AFA_ERTEK, double BRUTTO_ERTEK, int FELADVA, int RAKTAR_ID, string MEGJEGYZES) {
                BEVETEL_SORRow rowBEVETEL_SORRow = ((BEVETEL_SORRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        CIKK_ID,
                        MENNY,
                        BESZ_AR,
                        NETTO_ERTEK,
                        AFA_ERTEK,
                        BRUTTO_ERTEK,
                        FELADVA,
                        RAKTAR_ID,
                        MEGJEGYZES};
                if ((parentBEVETEL_FEJRowByFK_BEVETEL_SOR_BEVETEL_FEJ != null)) {
                    columnValuesArray[1] = parentBEVETEL_FEJRowByFK_BEVETEL_SOR_BEVETEL_FEJ[0];
                }
                rowBEVETEL_SORRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBEVETEL_SORRow);
                return rowBEVETEL_SORRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BEVETEL_SORRow FindBySOR_ID(int SOR_ID) {
                return ((BEVETEL_SORRow)(this.Rows.Find(new object[] {
                            SOR_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BEVETEL_SORDataTable cln = ((BEVETEL_SORDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BEVETEL_SORDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSOR_ID = base.Columns["SOR_ID"];
                this.columnBEVETEL_FEJ_ID = base.Columns["BEVETEL_FEJ_ID"];
                this.columnCIKK_ID = base.Columns["CIKK_ID"];
                this.columnMENNY = base.Columns["MENNY"];
                this.columnBESZ_AR = base.Columns["BESZ_AR"];
                this.columnNETTO_ERTEK = base.Columns["NETTO_ERTEK"];
                this.columnAFA_ERTEK = base.Columns["AFA_ERTEK"];
                this.columnBRUTTO_ERTEK = base.Columns["BRUTTO_ERTEK"];
                this.columnFELADVA = base.Columns["FELADVA"];
                this.columnRAKTAR_ID = base.Columns["RAKTAR_ID"];
                this.columnMEGJEGYZES = base.Columns["MEGJEGYZES"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSOR_ID = new global::System.Data.DataColumn("SOR_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOR_ID);
                this.columnBEVETEL_FEJ_ID = new global::System.Data.DataColumn("BEVETEL_FEJ_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBEVETEL_FEJ_ID);
                this.columnCIKK_ID = new global::System.Data.DataColumn("CIKK_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCIKK_ID);
                this.columnMENNY = new global::System.Data.DataColumn("MENNY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMENNY);
                this.columnBESZ_AR = new global::System.Data.DataColumn("BESZ_AR", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBESZ_AR);
                this.columnNETTO_ERTEK = new global::System.Data.DataColumn("NETTO_ERTEK", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNETTO_ERTEK);
                this.columnAFA_ERTEK = new global::System.Data.DataColumn("AFA_ERTEK", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAFA_ERTEK);
                this.columnBRUTTO_ERTEK = new global::System.Data.DataColumn("BRUTTO_ERTEK", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRUTTO_ERTEK);
                this.columnFELADVA = new global::System.Data.DataColumn("FELADVA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFELADVA);
                this.columnRAKTAR_ID = new global::System.Data.DataColumn("RAKTAR_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRAKTAR_ID);
                this.columnMEGJEGYZES = new global::System.Data.DataColumn("MEGJEGYZES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEGJEGYZES);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSOR_ID}, true));
                this.columnSOR_ID.AutoIncrement = true;
                this.columnSOR_ID.AutoIncrementSeed = -1;
                this.columnSOR_ID.AutoIncrementStep = -1;
                this.columnSOR_ID.AllowDBNull = false;
                this.columnSOR_ID.ReadOnly = true;
                this.columnSOR_ID.Unique = true;
                this.columnBEVETEL_FEJ_ID.AllowDBNull = false;
                this.columnCIKK_ID.AllowDBNull = false;
                this.columnMENNY.AllowDBNull = false;
                this.columnBESZ_AR.AllowDBNull = false;
                this.columnNETTO_ERTEK.AllowDBNull = false;
                this.columnAFA_ERTEK.AllowDBNull = false;
                this.columnBRUTTO_ERTEK.AllowDBNull = false;
                this.columnFELADVA.AllowDBNull = false;
                this.columnRAKTAR_ID.AllowDBNull = false;
                this.columnMEGJEGYZES.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BEVETEL_SORRow NewBEVETEL_SORRow() {
                return ((BEVETEL_SORRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BEVETEL_SORRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BEVETEL_SORRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BEVETEL_SORRowChanged != null)) {
                    this.BEVETEL_SORRowChanged(this, new BEVETEL_SORRowChangeEvent(((BEVETEL_SORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BEVETEL_SORRowChanging != null)) {
                    this.BEVETEL_SORRowChanging(this, new BEVETEL_SORRowChangeEvent(((BEVETEL_SORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BEVETEL_SORRowDeleted != null)) {
                    this.BEVETEL_SORRowDeleted(this, new BEVETEL_SORRowChangeEvent(((BEVETEL_SORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BEVETEL_SORRowDeleting != null)) {
                    this.BEVETEL_SORRowDeleting(this, new BEVETEL_SORRowChangeEvent(((BEVETEL_SORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBEVETEL_SORRow(BEVETEL_SORRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ECAFEDataSetBEVETELEZES ds = new ECAFEDataSetBEVETELEZES();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BEVETEL_SORDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BEVETEL_FEJRow : global::System.Data.DataRow {
            
            private BEVETEL_FEJDataTable tableBEVETEL_FEJ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BEVETEL_FEJRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBEVETEL_FEJ = ((BEVETEL_FEJDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BEVETEL_FEJ_ID {
                get {
                    return ((int)(this[this.tableBEVETEL_FEJ.BEVETEL_FEJ_IDColumn]));
                }
                set {
                    this[this.tableBEVETEL_FEJ.BEVETEL_FEJ_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATUM {
                get {
                    return ((global::System.DateTime)(this[this.tableBEVETEL_FEJ.DATUMColumn]));
                }
                set {
                    this[this.tableBEVETEL_FEJ.DATUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PARTNER_ID {
                get {
                    try {
                        return ((int)(this[this.tableBEVETEL_FEJ.PARTNER_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PARTNER_ID\' in table \'BEVETEL_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBEVETEL_FEJ.PARTNER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SZALLITOLEVEL_SZAM {
                get {
                    try {
                        return ((string)(this[this.tableBEVETEL_FEJ.SZALLITOLEVEL_SZAMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SZALLITOLEVEL_SZAM\' in table \'BEVETEL_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBEVETEL_FEJ.SZALLITOLEVEL_SZAMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BIZONYLATSZAM {
                get {
                    try {
                        return ((string)(this[this.tableBEVETEL_FEJ.BIZONYLATSZAMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BIZONYLATSZAM\' in table \'BEVETEL_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBEVETEL_FEJ.BIZONYLATSZAMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int KONYVELT {
                get {
                    return ((int)(this[this.tableBEVETEL_FEJ.KONYVELTColumn]));
                }
                set {
                    this[this.tableBEVETEL_FEJ.KONYVELTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SZAMLA_SZAM {
                get {
                    try {
                        return ((string)(this[this.tableBEVETEL_FEJ.SZAMLA_SZAMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SZAMLA_SZAM\' in table \'BEVETEL_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBEVETEL_FEJ.SZAMLA_SZAMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SZAMLA_OSSZESEN {
                get {
                    try {
                        return ((double)(this[this.tableBEVETEL_FEJ.SZAMLA_OSSZESENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SZAMLA_OSSZESEN\' in table \'BEVETEL_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBEVETEL_FEJ.SZAMLA_OSSZESENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SZAMLA_OSSZ_BRUTTO {
                get {
                    try {
                        return ((double)(this[this.tableBEVETEL_FEJ.SZAMLA_OSSZ_BRUTTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SZAMLA_OSSZ_BRUTTO\' in table \'BEVETEL_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBEVETEL_FEJ.SZAMLA_OSSZ_BRUTTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPARTNER_IDNull() {
                return this.IsNull(this.tableBEVETEL_FEJ.PARTNER_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPARTNER_IDNull() {
                this[this.tableBEVETEL_FEJ.PARTNER_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSZALLITOLEVEL_SZAMNull() {
                return this.IsNull(this.tableBEVETEL_FEJ.SZALLITOLEVEL_SZAMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSZALLITOLEVEL_SZAMNull() {
                this[this.tableBEVETEL_FEJ.SZALLITOLEVEL_SZAMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBIZONYLATSZAMNull() {
                return this.IsNull(this.tableBEVETEL_FEJ.BIZONYLATSZAMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBIZONYLATSZAMNull() {
                this[this.tableBEVETEL_FEJ.BIZONYLATSZAMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSZAMLA_SZAMNull() {
                return this.IsNull(this.tableBEVETEL_FEJ.SZAMLA_SZAMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSZAMLA_SZAMNull() {
                this[this.tableBEVETEL_FEJ.SZAMLA_SZAMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSZAMLA_OSSZESENNull() {
                return this.IsNull(this.tableBEVETEL_FEJ.SZAMLA_OSSZESENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSZAMLA_OSSZESENNull() {
                this[this.tableBEVETEL_FEJ.SZAMLA_OSSZESENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSZAMLA_OSSZ_BRUTTONull() {
                return this.IsNull(this.tableBEVETEL_FEJ.SZAMLA_OSSZ_BRUTTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSZAMLA_OSSZ_BRUTTONull() {
                this[this.tableBEVETEL_FEJ.SZAMLA_OSSZ_BRUTTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BEVETEL_SORRow[] GetBEVETEL_SORRows() {
                if ((this.Table.ChildRelations["FK_BEVETEL_SOR_BEVETEL_FEJ"] == null)) {
                    return new BEVETEL_SORRow[0];
                }
                else {
                    return ((BEVETEL_SORRow[])(base.GetChildRows(this.Table.ChildRelations["FK_BEVETEL_SOR_BEVETEL_FEJ"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BEVETEL_SORRow : global::System.Data.DataRow {
            
            private BEVETEL_SORDataTable tableBEVETEL_SOR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BEVETEL_SORRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBEVETEL_SOR = ((BEVETEL_SORDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SOR_ID {
                get {
                    return ((int)(this[this.tableBEVETEL_SOR.SOR_IDColumn]));
                }
                set {
                    this[this.tableBEVETEL_SOR.SOR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BEVETEL_FEJ_ID {
                get {
                    return ((int)(this[this.tableBEVETEL_SOR.BEVETEL_FEJ_IDColumn]));
                }
                set {
                    this[this.tableBEVETEL_SOR.BEVETEL_FEJ_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CIKK_ID {
                get {
                    return ((int)(this[this.tableBEVETEL_SOR.CIKK_IDColumn]));
                }
                set {
                    this[this.tableBEVETEL_SOR.CIKK_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MENNY {
                get {
                    return ((double)(this[this.tableBEVETEL_SOR.MENNYColumn]));
                }
                set {
                    this[this.tableBEVETEL_SOR.MENNYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BESZ_AR {
                get {
                    return ((double)(this[this.tableBEVETEL_SOR.BESZ_ARColumn]));
                }
                set {
                    this[this.tableBEVETEL_SOR.BESZ_ARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double NETTO_ERTEK {
                get {
                    return ((double)(this[this.tableBEVETEL_SOR.NETTO_ERTEKColumn]));
                }
                set {
                    this[this.tableBEVETEL_SOR.NETTO_ERTEKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AFA_ERTEK {
                get {
                    return ((double)(this[this.tableBEVETEL_SOR.AFA_ERTEKColumn]));
                }
                set {
                    this[this.tableBEVETEL_SOR.AFA_ERTEKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BRUTTO_ERTEK {
                get {
                    return ((double)(this[this.tableBEVETEL_SOR.BRUTTO_ERTEKColumn]));
                }
                set {
                    this[this.tableBEVETEL_SOR.BRUTTO_ERTEKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FELADVA {
                get {
                    return ((int)(this[this.tableBEVETEL_SOR.FELADVAColumn]));
                }
                set {
                    this[this.tableBEVETEL_SOR.FELADVAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RAKTAR_ID {
                get {
                    return ((int)(this[this.tableBEVETEL_SOR.RAKTAR_IDColumn]));
                }
                set {
                    this[this.tableBEVETEL_SOR.RAKTAR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MEGJEGYZES {
                get {
                    try {
                        return ((string)(this[this.tableBEVETEL_SOR.MEGJEGYZESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEGJEGYZES\' in table \'BEVETEL_SOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBEVETEL_SOR.MEGJEGYZESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BEVETEL_FEJRow BEVETEL_FEJRow {
                get {
                    return ((BEVETEL_FEJRow)(this.GetParentRow(this.Table.ParentRelations["FK_BEVETEL_SOR_BEVETEL_FEJ"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_BEVETEL_SOR_BEVETEL_FEJ"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMEGJEGYZESNull() {
                return this.IsNull(this.tableBEVETEL_SOR.MEGJEGYZESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMEGJEGYZESNull() {
                this[this.tableBEVETEL_SOR.MEGJEGYZESColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BEVETEL_FEJRowChangeEvent : global::System.EventArgs {
            
            private BEVETEL_FEJRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BEVETEL_FEJRowChangeEvent(BEVETEL_FEJRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BEVETEL_FEJRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BEVETEL_SORRowChangeEvent : global::System.EventArgs {
            
            private BEVETEL_SORRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BEVETEL_SORRowChangeEvent(BEVETEL_SORRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BEVETEL_SORRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace e_Cafe.ECAFEDataSetBEVETELEZESTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BEVETEL_FEJTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BEVETEL_FEJTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BEVETEL_FEJ";
            tableMapping.ColumnMappings.Add("BEVETEL_FEJ_ID", "BEVETEL_FEJ_ID");
            tableMapping.ColumnMappings.Add("DATUM", "DATUM");
            tableMapping.ColumnMappings.Add("PARTNER_ID", "PARTNER_ID");
            tableMapping.ColumnMappings.Add("SZALLITOLEVEL_SZAM", "SZALLITOLEVEL_SZAM");
            tableMapping.ColumnMappings.Add("BIZONYLATSZAM", "BIZONYLATSZAM");
            tableMapping.ColumnMappings.Add("KONYVELT", "KONYVELT");
            tableMapping.ColumnMappings.Add("SZAMLA_SZAM", "SZAMLA_SZAM");
            tableMapping.ColumnMappings.Add("SZAMLA_OSSZESEN", "SZAMLA_OSSZESEN");
            tableMapping.ColumnMappings.Add("SZAMLA_OSSZ_BRUTTO", "SZAMLA_OSSZ_BRUTTO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[BEVETEL_FEJ] WHERE (([BEVETEL_FEJ_ID] = @Original_BEVETEL_FEJ_ID) AND ((@IsNull_DATUM = 1 AND [DATUM] IS NULL) OR ([DATUM] = @Original_DATUM)) AND ((@IsNull_PARTNER_ID = 1 AND [PARTNER_ID] IS NULL) OR ([PARTNER_ID] = @Original_PARTNER_ID)) AND ((@IsNull_SZALLITOLEVEL_SZAM = 1 AND [SZALLITOLEVEL_SZAM] IS NULL) OR ([SZALLITOLEVEL_SZAM] = @Original_SZALLITOLEVEL_SZAM)) AND ((@IsNull_BIZONYLATSZAM = 1 AND [BIZONYLATSZAM] IS NULL) OR ([BIZONYLATSZAM] = @Original_BIZONYLATSZAM)) AND ([KONYVELT] = @Original_KONYVELT) AND ((@IsNull_SZAMLA_SZAM = 1 AND [SZAMLA_SZAM] IS NULL) OR ([SZAMLA_SZAM] = @Original_SZAMLA_SZAM)) AND ((@IsNull_SZAMLA_OSSZESEN = 1 AND [SZAMLA_OSSZESEN] IS NULL) OR ([SZAMLA_OSSZESEN] = @Original_SZAMLA_OSSZESEN)) AND ((@IsNull_SZAMLA_OSSZ_BRUTTO = 1 AND [SZAMLA_OSSZ_BRUTTO] IS NULL) OR ([SZAMLA_OSSZ_BRUTTO] = @Original_SZAMLA_OSSZ_BRUTTO)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BEVETEL_FEJ_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BEVETEL_FEJ_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DATUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATUM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATUM", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PARTNER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARTNER_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PARTNER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARTNER_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SZALLITOLEVEL_SZAM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZALLITOLEVEL_SZAM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SZALLITOLEVEL_SZAM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZALLITOLEVEL_SZAM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BIZONYLATSZAM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BIZONYLATSZAM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BIZONYLATSZAM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BIZONYLATSZAM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KONYVELT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KONYVELT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SZAMLA_SZAM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZAMLA_SZAM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SZAMLA_SZAM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZAMLA_SZAM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SZAMLA_OSSZESEN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZAMLA_OSSZESEN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SZAMLA_OSSZESEN", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZAMLA_OSSZESEN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SZAMLA_OSSZ_BRUTTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZAMLA_OSSZ_BRUTTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SZAMLA_OSSZ_BRUTTO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZAMLA_OSSZ_BRUTTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[BEVETEL_FEJ] ([DATUM], [PARTNER_ID], [SZALLITOLEVEL_SZAM], [BIZONYLATSZAM], [KONYVELT], [SZAMLA_SZAM], [SZAMLA_OSSZESEN], [SZAMLA_OSSZ_BRUTTO]) VALUES (@DATUM, @PARTNER_ID, @SZALLITOLEVEL_SZAM, @BIZONYLATSZAM, @KONYVELT, @SZAMLA_SZAM, @SZAMLA_OSSZESEN, @SZAMLA_OSSZ_BRUTTO);
SELECT BEVETEL_FEJ_ID, DATUM, PARTNER_ID, SZALLITOLEVEL_SZAM, BIZONYLATSZAM, KONYVELT, SZAMLA_SZAM, SZAMLA_OSSZESEN, SZAMLA_OSSZ_BRUTTO FROM BEVETEL_FEJ WHERE (BEVETEL_FEJ_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATUM", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PARTNER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARTNER_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SZALLITOLEVEL_SZAM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZALLITOLEVEL_SZAM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BIZONYLATSZAM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BIZONYLATSZAM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KONYVELT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KONYVELT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SZAMLA_SZAM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZAMLA_SZAM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SZAMLA_OSSZESEN", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZAMLA_OSSZESEN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SZAMLA_OSSZ_BRUTTO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZAMLA_OSSZ_BRUTTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE    BEVETEL_FEJ\r\nSET              DATUM = @DATUM, PARTNER_ID = @PARTNER_ID," +
                " SZALLITOLEVEL_SZAM = @SZALLITOLEVEL_SZAM, BIZONYLATSZAM = @BIZONYLATSZAM, \r\n   " +
                "                   KONYVELT = @KONYVELT, SZAMLA_SZAM = @SZAMLA_SZAM, SZAMLA_OSSZ" +
                "ESEN = @SZAMLA_OSSZESEN, \r\n                      SZAMLA_OSSZ_BRUTTO = @SZAMLA_OS" +
                "SZ_BRUTTO\r\nWHERE     (BEVETEL_FEJ_ID = @Original_BEVETEL_FEJ_ID) AND (@IsNull_DA" +
                "TUM = 1 AND DATUM IS NULL OR\r\n                      DATUM = @Original_DATUM) AND" +
                " (@IsNull_PARTNER_ID = 1 AND PARTNER_ID IS NULL OR\r\n                      PARTNE" +
                "R_ID = @Original_PARTNER_ID) AND (@IsNull_SZALLITOLEVEL_SZAM = 1 AND SZALLITOLEV" +
                "EL_SZAM IS NULL OR\r\n                      SZALLITOLEVEL_SZAM = @Original_SZALLIT" +
                "OLEVEL_SZAM) AND (@IsNull_BIZONYLATSZAM = 1 AND BIZONYLATSZAM IS NULL OR\r\n      " +
                "                BIZONYLATSZAM = @Original_BIZONYLATSZAM) AND (KONYVELT = @Origin" +
                "al_KONYVELT) AND (@IsNull_SZAMLA_SZAM = 1 AND \r\n                      SZAMLA_SZA" +
                "M IS NULL OR\r\n                      SZAMLA_SZAM = @Original_SZAMLA_SZAM) AND (@I" +
                "sNull_SZAMLA_OSSZESEN = 1 AND SZAMLA_OSSZESEN IS NULL OR\r\n                      " +
                "SZAMLA_OSSZESEN = @Original_SZAMLA_OSSZESEN) AND (@IsNull_SZAMLA_OSSZ_BRUTTO = 1" +
                " AND SZAMLA_OSSZ_BRUTTO IS NULL OR\r\n                      SZAMLA_OSSZ_BRUTTO = @" +
                "Original_SZAMLA_OSSZ_BRUTTO); \r\nSELECT BEVETEL_FEJ_ID, DATUM, PARTNER_ID, SZALLI" +
                "TOLEVEL_SZAM, BIZONYLATSZAM, KONYVELT, SZAMLA_SZAM, SZAMLA_OSSZESEN, SZAMLA_OSSZ" +
                "_BRUTTO FROM BEVETEL_FEJ WHERE (BEVETEL_FEJ_ID = @BEVETEL_FEJ_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATUM", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "DATUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PARTNER_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "PARTNER_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SZALLITOLEVEL_SZAM", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "SZALLITOLEVEL_SZAM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BIZONYLATSZAM", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "BIZONYLATSZAM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KONYVELT", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "KONYVELT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SZAMLA_SZAM", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "SZAMLA_SZAM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SZAMLA_OSSZESEN", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "SZAMLA_OSSZESEN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SZAMLA_OSSZ_BRUTTO", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "SZAMLA_OSSZ_BRUTTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BEVETEL_FEJ_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BEVETEL_FEJ_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DATUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATUM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATUM", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "DATUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PARTNER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARTNER_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PARTNER_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "PARTNER_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SZALLITOLEVEL_SZAM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZALLITOLEVEL_SZAM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SZALLITOLEVEL_SZAM", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "SZALLITOLEVEL_SZAM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BIZONYLATSZAM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BIZONYLATSZAM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BIZONYLATSZAM", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "BIZONYLATSZAM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KONYVELT", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "KONYVELT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SZAMLA_SZAM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZAMLA_SZAM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SZAMLA_SZAM", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "SZAMLA_SZAM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SZAMLA_OSSZESEN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZAMLA_OSSZESEN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SZAMLA_OSSZESEN", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "SZAMLA_OSSZESEN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SZAMLA_OSSZ_BRUTTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZAMLA_OSSZ_BRUTTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SZAMLA_OSSZ_BRUTTO", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "SZAMLA_OSSZ_BRUTTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BEVETEL_FEJ_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BEVETEL_FEJ_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::e_Cafe.Properties.Settings.Default.ECAFEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT BEVETEL_FEJ_ID, DATUM, PARTNER_ID, SZALLITOLEVEL_SZAM, BIZONYLATSZAM, KONY" +
                "VELT, SZAMLA_SZAM, SZAMLA_OSSZESEN, SZAMLA_OSSZ_BRUTTO FROM dbo.BEVETEL_FEJ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ECAFEDataSetBEVETELEZES.BEVETEL_FEJDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ECAFEDataSetBEVETELEZES.BEVETEL_FEJDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ECAFEDataSetBEVETELEZES.BEVETEL_FEJDataTable dataTable = new ECAFEDataSetBEVETELEZES.BEVETEL_FEJDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ECAFEDataSetBEVETELEZES.BEVETEL_FEJDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ECAFEDataSetBEVETELEZES dataSet) {
            return this.Adapter.Update(dataSet, "BEVETEL_FEJ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_BEVETEL_FEJ_ID, System.DateTime Original_DATUM, global::System.Nullable<int> Original_PARTNER_ID, string Original_SZALLITOLEVEL_SZAM, string Original_BIZONYLATSZAM, int Original_KONYVELT, string Original_SZAMLA_SZAM, global::System.Nullable<double> Original_SZAMLA_OSSZESEN, global::System.Nullable<double> Original_SZAMLA_OSSZ_BRUTTO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_BEVETEL_FEJ_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_DATUM));
            if ((Original_PARTNER_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_PARTNER_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_SZALLITOLEVEL_SZAM == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_SZALLITOLEVEL_SZAM));
            }
            if ((Original_BIZONYLATSZAM == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_BIZONYLATSZAM));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_KONYVELT));
            if ((Original_SZAMLA_SZAM == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_SZAMLA_SZAM));
            }
            if ((Original_SZAMLA_OSSZESEN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((double)(Original_SZAMLA_OSSZESEN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_SZAMLA_OSSZ_BRUTTO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((double)(Original_SZAMLA_OSSZ_BRUTTO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime DATUM, global::System.Nullable<int> PARTNER_ID, string SZALLITOLEVEL_SZAM, string BIZONYLATSZAM, int KONYVELT, string SZAMLA_SZAM, global::System.Nullable<double> SZAMLA_OSSZESEN, global::System.Nullable<double> SZAMLA_OSSZ_BRUTTO) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(DATUM));
            if ((PARTNER_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(PARTNER_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((SZALLITOLEVEL_SZAM == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SZALLITOLEVEL_SZAM));
            }
            if ((BIZONYLATSZAM == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(BIZONYLATSZAM));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(KONYVELT));
            if ((SZAMLA_SZAM == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(SZAMLA_SZAM));
            }
            if ((SZAMLA_OSSZESEN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(SZAMLA_OSSZESEN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((SZAMLA_OSSZ_BRUTTO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(SZAMLA_OSSZ_BRUTTO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime DATUM, 
                    global::System.Nullable<int> PARTNER_ID, 
                    string SZALLITOLEVEL_SZAM, 
                    string BIZONYLATSZAM, 
                    int KONYVELT, 
                    string SZAMLA_SZAM, 
                    global::System.Nullable<double> SZAMLA_OSSZESEN, 
                    global::System.Nullable<double> SZAMLA_OSSZ_BRUTTO, 
                    int Original_BEVETEL_FEJ_ID, 
                    System.DateTime Original_DATUM, 
                    global::System.Nullable<int> Original_PARTNER_ID, 
                    string Original_SZALLITOLEVEL_SZAM, 
                    string Original_BIZONYLATSZAM, 
                    int Original_KONYVELT, 
                    string Original_SZAMLA_SZAM, 
                    global::System.Nullable<double> Original_SZAMLA_OSSZESEN, 
                    global::System.Nullable<double> Original_SZAMLA_OSSZ_BRUTTO, 
                    int BEVETEL_FEJ_ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(DATUM));
            if ((PARTNER_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(PARTNER_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((SZALLITOLEVEL_SZAM == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SZALLITOLEVEL_SZAM));
            }
            if ((BIZONYLATSZAM == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(BIZONYLATSZAM));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(KONYVELT));
            if ((SZAMLA_SZAM == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(SZAMLA_SZAM));
            }
            if ((SZAMLA_OSSZESEN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(SZAMLA_OSSZESEN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((SZAMLA_OSSZ_BRUTTO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(SZAMLA_OSSZ_BRUTTO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_BEVETEL_FEJ_ID));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_DATUM));
            if ((Original_PARTNER_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_PARTNER_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_SZALLITOLEVEL_SZAM == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_SZALLITOLEVEL_SZAM));
            }
            if ((Original_BIZONYLATSZAM == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_BIZONYLATSZAM));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_KONYVELT));
            if ((Original_SZAMLA_SZAM == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_SZAMLA_SZAM));
            }
            if ((Original_SZAMLA_OSSZESEN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((double)(Original_SZAMLA_OSSZESEN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_SZAMLA_OSSZ_BRUTTO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(Original_SZAMLA_OSSZ_BRUTTO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(BEVETEL_FEJ_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BEVETEL_SORTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BEVETEL_SORTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BEVETEL_SOR";
            tableMapping.ColumnMappings.Add("SOR_ID", "SOR_ID");
            tableMapping.ColumnMappings.Add("BEVETEL_FEJ_ID", "BEVETEL_FEJ_ID");
            tableMapping.ColumnMappings.Add("CIKK_ID", "CIKK_ID");
            tableMapping.ColumnMappings.Add("MENNY", "MENNY");
            tableMapping.ColumnMappings.Add("BESZ_AR", "BESZ_AR");
            tableMapping.ColumnMappings.Add("NETTO_ERTEK", "NETTO_ERTEK");
            tableMapping.ColumnMappings.Add("AFA_ERTEK", "AFA_ERTEK");
            tableMapping.ColumnMappings.Add("BRUTTO_ERTEK", "BRUTTO_ERTEK");
            tableMapping.ColumnMappings.Add("FELADVA", "FELADVA");
            tableMapping.ColumnMappings.Add("RAKTAR_ID", "RAKTAR_ID");
            tableMapping.ColumnMappings.Add("MEGJEGYZES", "MEGJEGYZES");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [BEVETEL_SOR] WHERE (([SOR_ID] = @Original_SOR_ID) AND ([BEVETEL_FEJ_ID] = @Original_BEVETEL_FEJ_ID) AND ([CIKK_ID] = @Original_CIKK_ID) AND ([MENNY] = @Original_MENNY) AND ([BESZ_AR] = @Original_BESZ_AR) AND ([NETTO_ERTEK] = @Original_NETTO_ERTEK) AND ([AFA_ERTEK] = @Original_AFA_ERTEK) AND ([BRUTTO_ERTEK] = @Original_BRUTTO_ERTEK) AND ([FELADVA] = @Original_FELADVA) AND ([RAKTAR_ID] = @Original_RAKTAR_ID) AND ((@IsNull_MEGJEGYZES = 1 AND [MEGJEGYZES] IS NULL) OR ([MEGJEGYZES] = @Original_MEGJEGYZES)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SOR_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOR_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BEVETEL_FEJ_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BEVETEL_FEJ_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MENNY", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MENNY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BESZ_AR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BESZ_AR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NETTO_ERTEK", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NETTO_ERTEK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AFA_ERTEK", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA_ERTEK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BRUTTO_ERTEK", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BRUTTO_ERTEK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FELADVA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FELADVA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RAKTAR_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAKTAR_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MEGJEGYZES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGJEGYZES", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEGJEGYZES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGJEGYZES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [BEVETEL_SOR] ([BEVETEL_FEJ_ID], [CIKK_ID], [MENNY], [BESZ_AR], [NETTO_ERTEK], [AFA_ERTEK], [BRUTTO_ERTEK], [FELADVA], [RAKTAR_ID], [MEGJEGYZES]) VALUES (@BEVETEL_FEJ_ID, @CIKK_ID, @MENNY, @BESZ_AR, @NETTO_ERTEK, @AFA_ERTEK, @BRUTTO_ERTEK, @FELADVA, @RAKTAR_ID, @MEGJEGYZES);
SELECT SOR_ID, BEVETEL_FEJ_ID, CIKK_ID, MENNY, BESZ_AR, NETTO_ERTEK, AFA_ERTEK, BRUTTO_ERTEK, FELADVA, RAKTAR_ID, MEGJEGYZES FROM BEVETEL_SOR WHERE (SOR_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BEVETEL_FEJ_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BEVETEL_FEJ_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MENNY", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MENNY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BESZ_AR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BESZ_AR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NETTO_ERTEK", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NETTO_ERTEK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AFA_ERTEK", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA_ERTEK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BRUTTO_ERTEK", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BRUTTO_ERTEK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FELADVA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FELADVA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RAKTAR_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAKTAR_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEGJEGYZES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGJEGYZES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE    BEVETEL_SOR\r\nSET              BEVETEL_FEJ_ID = @BEVETEL_FEJ_ID, CIKK_ID" +
                " = @CIKK_ID, MENNY = @MENNY, BESZ_AR = @BESZ_AR, NETTO_ERTEK = @NETTO_ERTEK, \r\n " +
                "                     AFA_ERTEK = @AFA_ERTEK, BRUTTO_ERTEK = @BRUTTO_ERTEK, FELAD" +
                "VA = @FELADVA, RAKTAR_ID = @RAKTAR_ID, \r\n                      MEGJEGYZES = @MEG" +
                "JEGYZES\r\nWHERE     (SOR_ID = @Original_SOR_ID) AND (BEVETEL_FEJ_ID = @Original_B" +
                "EVETEL_FEJ_ID) AND (CIKK_ID = @Original_CIKK_ID) AND \r\n                      (ME" +
                "NNY = @Original_MENNY) AND (BESZ_AR = @Original_BESZ_AR) AND (NETTO_ERTEK = @Ori" +
                "ginal_NETTO_ERTEK) AND \r\n                      (AFA_ERTEK = @Original_AFA_ERTEK)" +
                " AND (BRUTTO_ERTEK = @Original_BRUTTO_ERTEK) AND (FELADVA = @Original_FELADVA) A" +
                "ND \r\n                      (RAKTAR_ID = @Original_RAKTAR_ID) AND (@IsNull_MEGJEG" +
                "YZES = 1) AND (MEGJEGYZES IS NULL) OR\r\n                      (SOR_ID = @Original" +
                "_SOR_ID) AND (BEVETEL_FEJ_ID = @Original_BEVETEL_FEJ_ID) AND (CIKK_ID = @Origina" +
                "l_CIKK_ID) AND \r\n                      (MENNY = @Original_MENNY) AND (BESZ_AR = " +
                "@Original_BESZ_AR) AND (NETTO_ERTEK = @Original_NETTO_ERTEK) AND \r\n             " +
                "         (AFA_ERTEK = @Original_AFA_ERTEK) AND (BRUTTO_ERTEK = @Original_BRUTTO_" +
                "ERTEK) AND (FELADVA = @Original_FELADVA) AND \r\n                      (RAKTAR_ID " +
                "= @Original_RAKTAR_ID) AND (MEGJEGYZES = @Original_MEGJEGYZES); \r\nSELECT SOR_ID," +
                " BEVETEL_FEJ_ID, CIKK_ID, MENNY, BESZ_AR, NETTO_ERTEK, AFA_ERTEK, BRUTTO_ERTEK, " +
                "FELADVA, RAKTAR_ID, MEGJEGYZES FROM BEVETEL_SOR WHERE (SOR_ID = @SOR_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BEVETEL_FEJ_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BEVETEL_FEJ_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKK_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MENNY", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "MENNY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BESZ_AR", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "BESZ_AR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NETTO_ERTEK", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "NETTO_ERTEK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AFA_ERTEK", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "AFA_ERTEK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BRUTTO_ERTEK", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "BRUTTO_ERTEK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FELADVA", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "FELADVA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RAKTAR_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "RAKTAR_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEGJEGYZES", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "MEGJEGYZES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SOR_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "SOR_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BEVETEL_FEJ_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BEVETEL_FEJ_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKK_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MENNY", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "MENNY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BESZ_AR", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "BESZ_AR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NETTO_ERTEK", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "NETTO_ERTEK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AFA_ERTEK", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "AFA_ERTEK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BRUTTO_ERTEK", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "BRUTTO_ERTEK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FELADVA", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "FELADVA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RAKTAR_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "RAKTAR_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MEGJEGYZES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGJEGYZES", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEGJEGYZES", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "MEGJEGYZES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SOR_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "SOR_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::e_Cafe.Properties.Settings.Default.ECAFEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     SOR_ID, BEVETEL_FEJ_ID, CIKK_ID, MENNY, BESZ_AR, NETTO_ERTEK, AFA_ERTE" +
                "K, BRUTTO_ERTEK, FELADVA, RAKTAR_ID, MEGJEGYZES\r\nFROM         BEVETEL_SOR\r\nWHERE" +
                "     (BEVETEL_FEJ_ID = @fej_id)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fej_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "BEVETEL_FEJ_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ECAFEDataSetBEVETELEZES.BEVETEL_SORDataTable dataTable, int fej_id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(fej_id));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ECAFEDataSetBEVETELEZES.BEVETEL_SORDataTable GetData(int fej_id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(fej_id));
            ECAFEDataSetBEVETELEZES.BEVETEL_SORDataTable dataTable = new ECAFEDataSetBEVETELEZES.BEVETEL_SORDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ECAFEDataSetBEVETELEZES.BEVETEL_SORDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ECAFEDataSetBEVETELEZES dataSet) {
            return this.Adapter.Update(dataSet, "BEVETEL_SOR");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_SOR_ID, int Original_BEVETEL_FEJ_ID, int Original_CIKK_ID, double Original_MENNY, double Original_BESZ_AR, double Original_NETTO_ERTEK, double Original_AFA_ERTEK, double Original_BRUTTO_ERTEK, int Original_FELADVA, int Original_RAKTAR_ID, string Original_MEGJEGYZES) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_SOR_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_BEVETEL_FEJ_ID));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_CIKK_ID));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((double)(Original_MENNY));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_BESZ_AR));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((double)(Original_NETTO_ERTEK));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_AFA_ERTEK));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((double)(Original_BRUTTO_ERTEK));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_FELADVA));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_RAKTAR_ID));
            if ((Original_MEGJEGYZES == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_MEGJEGYZES));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int BEVETEL_FEJ_ID, int CIKK_ID, double MENNY, double BESZ_AR, double NETTO_ERTEK, double AFA_ERTEK, double BRUTTO_ERTEK, int FELADVA, int RAKTAR_ID, string MEGJEGYZES) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(BEVETEL_FEJ_ID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(CIKK_ID));
            this.Adapter.InsertCommand.Parameters[2].Value = ((double)(MENNY));
            this.Adapter.InsertCommand.Parameters[3].Value = ((double)(BESZ_AR));
            this.Adapter.InsertCommand.Parameters[4].Value = ((double)(NETTO_ERTEK));
            this.Adapter.InsertCommand.Parameters[5].Value = ((double)(AFA_ERTEK));
            this.Adapter.InsertCommand.Parameters[6].Value = ((double)(BRUTTO_ERTEK));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(FELADVA));
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(RAKTAR_ID));
            if ((MEGJEGYZES == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(MEGJEGYZES));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int BEVETEL_FEJ_ID, 
                    int CIKK_ID, 
                    double MENNY, 
                    double BESZ_AR, 
                    double NETTO_ERTEK, 
                    double AFA_ERTEK, 
                    double BRUTTO_ERTEK, 
                    int FELADVA, 
                    int RAKTAR_ID, 
                    string MEGJEGYZES, 
                    int Original_SOR_ID, 
                    int Original_BEVETEL_FEJ_ID, 
                    int Original_CIKK_ID, 
                    double Original_MENNY, 
                    double Original_BESZ_AR, 
                    double Original_NETTO_ERTEK, 
                    double Original_AFA_ERTEK, 
                    double Original_BRUTTO_ERTEK, 
                    int Original_FELADVA, 
                    int Original_RAKTAR_ID, 
                    string Original_MEGJEGYZES, 
                    int SOR_ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(BEVETEL_FEJ_ID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(CIKK_ID));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(MENNY));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(BESZ_AR));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(NETTO_ERTEK));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(AFA_ERTEK));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(BRUTTO_ERTEK));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(FELADVA));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(RAKTAR_ID));
            if ((MEGJEGYZES == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(MEGJEGYZES));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_SOR_ID));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_BEVETEL_FEJ_ID));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_CIKK_ID));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(Original_MENNY));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(Original_BESZ_AR));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(Original_NETTO_ERTEK));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((double)(Original_AFA_ERTEK));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(Original_BRUTTO_ERTEK));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_FELADVA));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_RAKTAR_ID));
            if ((Original_MEGJEGYZES == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_MEGJEGYZES));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(SOR_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private BEVETEL_FEJTableAdapter _bEVETEL_FEJTableAdapter;
        
        private BEVETEL_SORTableAdapter _bEVETEL_SORTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public BEVETEL_FEJTableAdapter BEVETEL_FEJTableAdapter {
            get {
                return this._bEVETEL_FEJTableAdapter;
            }
            set {
                this._bEVETEL_FEJTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public BEVETEL_SORTableAdapter BEVETEL_SORTableAdapter {
            get {
                return this._bEVETEL_SORTableAdapter;
            }
            set {
                this._bEVETEL_SORTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._bEVETEL_FEJTableAdapter != null) 
                            && (this._bEVETEL_FEJTableAdapter.Connection != null))) {
                    return this._bEVETEL_FEJTableAdapter.Connection;
                }
                if (((this._bEVETEL_SORTableAdapter != null) 
                            && (this._bEVETEL_SORTableAdapter.Connection != null))) {
                    return this._bEVETEL_SORTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._bEVETEL_FEJTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._bEVETEL_SORTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(ECAFEDataSetBEVETELEZES dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._bEVETEL_FEJTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.BEVETEL_FEJ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bEVETEL_FEJTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bEVETEL_SORTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.BEVETEL_SOR.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bEVETEL_SORTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(ECAFEDataSetBEVETELEZES dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._bEVETEL_FEJTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.BEVETEL_FEJ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bEVETEL_FEJTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bEVETEL_SORTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.BEVETEL_SOR.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bEVETEL_SORTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(ECAFEDataSetBEVETELEZES dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._bEVETEL_SORTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.BEVETEL_SOR.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bEVETEL_SORTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bEVETEL_FEJTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.BEVETEL_FEJ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bEVETEL_FEJTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(ECAFEDataSetBEVETELEZES dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._bEVETEL_FEJTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bEVETEL_FEJTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._bEVETEL_SORTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bEVETEL_SORTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._bEVETEL_FEJTableAdapter != null)) {
                    revertConnections.Add(this._bEVETEL_FEJTableAdapter, this._bEVETEL_FEJTableAdapter.Connection);
                    this._bEVETEL_FEJTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._bEVETEL_FEJTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._bEVETEL_FEJTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bEVETEL_FEJTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bEVETEL_FEJTableAdapter.Adapter);
                    }
                }
                if ((this._bEVETEL_SORTableAdapter != null)) {
                    revertConnections.Add(this._bEVETEL_SORTableAdapter, this._bEVETEL_SORTableAdapter.Connection);
                    this._bEVETEL_SORTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._bEVETEL_SORTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._bEVETEL_SORTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bEVETEL_SORTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bEVETEL_SORTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._bEVETEL_FEJTableAdapter != null)) {
                    this._bEVETEL_FEJTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._bEVETEL_FEJTableAdapter]));
                    this._bEVETEL_FEJTableAdapter.Transaction = null;
                }
                if ((this._bEVETEL_SORTableAdapter != null)) {
                    this._bEVETEL_SORTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._bEVETEL_SORTableAdapter]));
                    this._bEVETEL_SORTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591