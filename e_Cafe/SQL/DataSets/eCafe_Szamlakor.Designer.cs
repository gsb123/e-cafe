//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace e_Cafe.SQL.DataSets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("eCafe_Szamlakor")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class eCafe_Szamlakor : global::System.Data.DataSet {
        
        private AFADataTable tableAFA;
        
        private ASZTALDataTable tableASZTAL;
        
        private CIKKDataTable tableCIKK;
        
        private MEGYSDataTable tableMEGYS;
        
        private PARTNERDataTable tablePARTNER;
        
        private RENDELES_FEJDataTable tableRENDELES_FEJ;
        
        private RENDELES_SORDataTable tableRENDELES_SOR;
        
        private SZAMLA_FEJDataTable tableSZAMLA_FEJ;
        
        private SZAMLA_TETELDataTable tableSZAMLA_TETEL;
        
        private global::System.Data.DataRelation relationFK_RENDELES_SOR_RENDELES_SOR;
        
        private global::System.Data.DataRelation relationSZAMLA_FEJ_SZAMLA_TETEL;
        
        private global::System.Data.DataRelation relationCIKK_SZAMLA_TETEL;
        
        private global::System.Data.DataRelation relationAFA_SZAMLA_TETEL;
        
        private global::System.Data.DataRelation relationRENDELES_SOR_SZAMLA_TETEL;
        
        private global::System.Data.DataRelation relationASZTAL_RENDELES_FEJ;
        
        private global::System.Data.DataRelation relationPARTNER_SZAMLA_FEJ;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public eCafe_Szamlakor() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected eCafe_Szamlakor(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["AFA"] != null)) {
                    base.Tables.Add(new AFADataTable(ds.Tables["AFA"]));
                }
                if ((ds.Tables["ASZTAL"] != null)) {
                    base.Tables.Add(new ASZTALDataTable(ds.Tables["ASZTAL"]));
                }
                if ((ds.Tables["CIKK"] != null)) {
                    base.Tables.Add(new CIKKDataTable(ds.Tables["CIKK"]));
                }
                if ((ds.Tables["MEGYS"] != null)) {
                    base.Tables.Add(new MEGYSDataTable(ds.Tables["MEGYS"]));
                }
                if ((ds.Tables["PARTNER"] != null)) {
                    base.Tables.Add(new PARTNERDataTable(ds.Tables["PARTNER"]));
                }
                if ((ds.Tables["RENDELES_FEJ"] != null)) {
                    base.Tables.Add(new RENDELES_FEJDataTable(ds.Tables["RENDELES_FEJ"]));
                }
                if ((ds.Tables["RENDELES_SOR"] != null)) {
                    base.Tables.Add(new RENDELES_SORDataTable(ds.Tables["RENDELES_SOR"]));
                }
                if ((ds.Tables["SZAMLA_FEJ"] != null)) {
                    base.Tables.Add(new SZAMLA_FEJDataTable(ds.Tables["SZAMLA_FEJ"]));
                }
                if ((ds.Tables["SZAMLA_TETEL"] != null)) {
                    base.Tables.Add(new SZAMLA_TETELDataTable(ds.Tables["SZAMLA_TETEL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AFADataTable AFA {
            get {
                return this.tableAFA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ASZTALDataTable ASZTAL {
            get {
                return this.tableASZTAL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CIKKDataTable CIKK {
            get {
                return this.tableCIKK;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MEGYSDataTable MEGYS {
            get {
                return this.tableMEGYS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PARTNERDataTable PARTNER {
            get {
                return this.tablePARTNER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RENDELES_FEJDataTable RENDELES_FEJ {
            get {
                return this.tableRENDELES_FEJ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RENDELES_SORDataTable RENDELES_SOR {
            get {
                return this.tableRENDELES_SOR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SZAMLA_FEJDataTable SZAMLA_FEJ {
            get {
                return this.tableSZAMLA_FEJ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SZAMLA_TETELDataTable SZAMLA_TETEL {
            get {
                return this.tableSZAMLA_TETEL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            eCafe_Szamlakor cln = ((eCafe_Szamlakor)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["AFA"] != null)) {
                    base.Tables.Add(new AFADataTable(ds.Tables["AFA"]));
                }
                if ((ds.Tables["ASZTAL"] != null)) {
                    base.Tables.Add(new ASZTALDataTable(ds.Tables["ASZTAL"]));
                }
                if ((ds.Tables["CIKK"] != null)) {
                    base.Tables.Add(new CIKKDataTable(ds.Tables["CIKK"]));
                }
                if ((ds.Tables["MEGYS"] != null)) {
                    base.Tables.Add(new MEGYSDataTable(ds.Tables["MEGYS"]));
                }
                if ((ds.Tables["PARTNER"] != null)) {
                    base.Tables.Add(new PARTNERDataTable(ds.Tables["PARTNER"]));
                }
                if ((ds.Tables["RENDELES_FEJ"] != null)) {
                    base.Tables.Add(new RENDELES_FEJDataTable(ds.Tables["RENDELES_FEJ"]));
                }
                if ((ds.Tables["RENDELES_SOR"] != null)) {
                    base.Tables.Add(new RENDELES_SORDataTable(ds.Tables["RENDELES_SOR"]));
                }
                if ((ds.Tables["SZAMLA_FEJ"] != null)) {
                    base.Tables.Add(new SZAMLA_FEJDataTable(ds.Tables["SZAMLA_FEJ"]));
                }
                if ((ds.Tables["SZAMLA_TETEL"] != null)) {
                    base.Tables.Add(new SZAMLA_TETELDataTable(ds.Tables["SZAMLA_TETEL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableAFA = ((AFADataTable)(base.Tables["AFA"]));
            if ((initTable == true)) {
                if ((this.tableAFA != null)) {
                    this.tableAFA.InitVars();
                }
            }
            this.tableASZTAL = ((ASZTALDataTable)(base.Tables["ASZTAL"]));
            if ((initTable == true)) {
                if ((this.tableASZTAL != null)) {
                    this.tableASZTAL.InitVars();
                }
            }
            this.tableCIKK = ((CIKKDataTable)(base.Tables["CIKK"]));
            if ((initTable == true)) {
                if ((this.tableCIKK != null)) {
                    this.tableCIKK.InitVars();
                }
            }
            this.tableMEGYS = ((MEGYSDataTable)(base.Tables["MEGYS"]));
            if ((initTable == true)) {
                if ((this.tableMEGYS != null)) {
                    this.tableMEGYS.InitVars();
                }
            }
            this.tablePARTNER = ((PARTNERDataTable)(base.Tables["PARTNER"]));
            if ((initTable == true)) {
                if ((this.tablePARTNER != null)) {
                    this.tablePARTNER.InitVars();
                }
            }
            this.tableRENDELES_FEJ = ((RENDELES_FEJDataTable)(base.Tables["RENDELES_FEJ"]));
            if ((initTable == true)) {
                if ((this.tableRENDELES_FEJ != null)) {
                    this.tableRENDELES_FEJ.InitVars();
                }
            }
            this.tableRENDELES_SOR = ((RENDELES_SORDataTable)(base.Tables["RENDELES_SOR"]));
            if ((initTable == true)) {
                if ((this.tableRENDELES_SOR != null)) {
                    this.tableRENDELES_SOR.InitVars();
                }
            }
            this.tableSZAMLA_FEJ = ((SZAMLA_FEJDataTable)(base.Tables["SZAMLA_FEJ"]));
            if ((initTable == true)) {
                if ((this.tableSZAMLA_FEJ != null)) {
                    this.tableSZAMLA_FEJ.InitVars();
                }
            }
            this.tableSZAMLA_TETEL = ((SZAMLA_TETELDataTable)(base.Tables["SZAMLA_TETEL"]));
            if ((initTable == true)) {
                if ((this.tableSZAMLA_TETEL != null)) {
                    this.tableSZAMLA_TETEL.InitVars();
                }
            }
            this.relationFK_RENDELES_SOR_RENDELES_SOR = this.Relations["FK_RENDELES_SOR_RENDELES_SOR"];
            this.relationSZAMLA_FEJ_SZAMLA_TETEL = this.Relations["SZAMLA_FEJ_SZAMLA_TETEL"];
            this.relationCIKK_SZAMLA_TETEL = this.Relations["CIKK_SZAMLA_TETEL"];
            this.relationAFA_SZAMLA_TETEL = this.Relations["AFA_SZAMLA_TETEL"];
            this.relationRENDELES_SOR_SZAMLA_TETEL = this.Relations["RENDELES_SOR_SZAMLA_TETEL"];
            this.relationASZTAL_RENDELES_FEJ = this.Relations["ASZTAL_RENDELES_FEJ"];
            this.relationPARTNER_SZAMLA_FEJ = this.Relations["PARTNER_SZAMLA_FEJ"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "eCafe_Szamlakor";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/eCafe_Szamlakor.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableAFA = new AFADataTable();
            base.Tables.Add(this.tableAFA);
            this.tableASZTAL = new ASZTALDataTable();
            base.Tables.Add(this.tableASZTAL);
            this.tableCIKK = new CIKKDataTable();
            base.Tables.Add(this.tableCIKK);
            this.tableMEGYS = new MEGYSDataTable();
            base.Tables.Add(this.tableMEGYS);
            this.tablePARTNER = new PARTNERDataTable();
            base.Tables.Add(this.tablePARTNER);
            this.tableRENDELES_FEJ = new RENDELES_FEJDataTable();
            base.Tables.Add(this.tableRENDELES_FEJ);
            this.tableRENDELES_SOR = new RENDELES_SORDataTable();
            base.Tables.Add(this.tableRENDELES_SOR);
            this.tableSZAMLA_FEJ = new SZAMLA_FEJDataTable();
            base.Tables.Add(this.tableSZAMLA_FEJ);
            this.tableSZAMLA_TETEL = new SZAMLA_TETELDataTable();
            base.Tables.Add(this.tableSZAMLA_TETEL);
            this.relationFK_RENDELES_SOR_RENDELES_SOR = new global::System.Data.DataRelation("FK_RENDELES_SOR_RENDELES_SOR", new global::System.Data.DataColumn[] {
                        this.tableRENDELES_FEJ.RENDELES_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableRENDELES_SOR.RENDELES_IDColumn}, false);
            this.Relations.Add(this.relationFK_RENDELES_SOR_RENDELES_SOR);
            this.relationSZAMLA_FEJ_SZAMLA_TETEL = new global::System.Data.DataRelation("SZAMLA_FEJ_SZAMLA_TETEL", new global::System.Data.DataColumn[] {
                        this.tableSZAMLA_FEJ.SZAMLA_FEJ_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableSZAMLA_TETEL.SZAMLA_FEJ_IDColumn}, false);
            this.Relations.Add(this.relationSZAMLA_FEJ_SZAMLA_TETEL);
            this.relationCIKK_SZAMLA_TETEL = new global::System.Data.DataRelation("CIKK_SZAMLA_TETEL", new global::System.Data.DataColumn[] {
                        this.tableCIKK.CIKK_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableSZAMLA_TETEL.CIKK_IDColumn}, false);
            this.Relations.Add(this.relationCIKK_SZAMLA_TETEL);
            this.relationAFA_SZAMLA_TETEL = new global::System.Data.DataRelation("AFA_SZAMLA_TETEL", new global::System.Data.DataColumn[] {
                        this.tableAFA.AFA_KODColumn}, new global::System.Data.DataColumn[] {
                        this.tableSZAMLA_TETEL.AFA_KODColumn}, false);
            this.Relations.Add(this.relationAFA_SZAMLA_TETEL);
            this.relationRENDELES_SOR_SZAMLA_TETEL = new global::System.Data.DataRelation("RENDELES_SOR_SZAMLA_TETEL", new global::System.Data.DataColumn[] {
                        this.tableRENDELES_SOR.SOR_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableSZAMLA_TETEL.RENDELES_SOR_IDColumn}, false);
            this.Relations.Add(this.relationRENDELES_SOR_SZAMLA_TETEL);
            this.relationASZTAL_RENDELES_FEJ = new global::System.Data.DataRelation("ASZTAL_RENDELES_FEJ", new global::System.Data.DataColumn[] {
                        this.tableASZTAL.ASZTAL_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableRENDELES_FEJ.ASZTAL_IDColumn}, false);
            this.Relations.Add(this.relationASZTAL_RENDELES_FEJ);
            this.relationPARTNER_SZAMLA_FEJ = new global::System.Data.DataRelation("PARTNER_SZAMLA_FEJ", new global::System.Data.DataColumn[] {
                        this.tablePARTNER.PARTNER_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableSZAMLA_FEJ.PARTNER_IDColumn}, false);
            this.Relations.Add(this.relationPARTNER_SZAMLA_FEJ);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAFA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeASZTAL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCIKK() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMEGYS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePARTNER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRENDELES_FEJ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRENDELES_SOR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSZAMLA_FEJ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSZAMLA_TETEL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            eCafe_Szamlakor ds = new eCafe_Szamlakor();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void AFARowChangeEventHandler(object sender, AFARowChangeEvent e);
        
        public delegate void ASZTALRowChangeEventHandler(object sender, ASZTALRowChangeEvent e);
        
        public delegate void CIKKRowChangeEventHandler(object sender, CIKKRowChangeEvent e);
        
        public delegate void MEGYSRowChangeEventHandler(object sender, MEGYSRowChangeEvent e);
        
        public delegate void PARTNERRowChangeEventHandler(object sender, PARTNERRowChangeEvent e);
        
        public delegate void RENDELES_FEJRowChangeEventHandler(object sender, RENDELES_FEJRowChangeEvent e);
        
        public delegate void RENDELES_SORRowChangeEventHandler(object sender, RENDELES_SORRowChangeEvent e);
        
        public delegate void SZAMLA_FEJRowChangeEventHandler(object sender, SZAMLA_FEJRowChangeEvent e);
        
        public delegate void SZAMLA_TETELRowChangeEventHandler(object sender, SZAMLA_TETELRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AFADataTable : global::System.Data.TypedTableBase<AFARow> {
            
            private global::System.Data.DataColumn columnAFA_KOD;
            
            private global::System.Data.DataColumn columnAFA_NEV;
            
            private global::System.Data.DataColumn columnAFA_ERTEK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AFADataTable() {
                this.TableName = "AFA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AFADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AFADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AFA_KODColumn {
                get {
                    return this.columnAFA_KOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AFA_NEVColumn {
                get {
                    return this.columnAFA_NEV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AFA_ERTEKColumn {
                get {
                    return this.columnAFA_ERTEK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AFARow this[int index] {
                get {
                    return ((AFARow)(this.Rows[index]));
                }
            }
            
            public event AFARowChangeEventHandler AFARowChanging;
            
            public event AFARowChangeEventHandler AFARowChanged;
            
            public event AFARowChangeEventHandler AFARowDeleting;
            
            public event AFARowChangeEventHandler AFARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAFARow(AFARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AFARow AddAFARow(string AFA_KOD, string AFA_NEV, double AFA_ERTEK) {
                AFARow rowAFARow = ((AFARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AFA_KOD,
                        AFA_NEV,
                        AFA_ERTEK};
                rowAFARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAFARow);
                return rowAFARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AFARow FindByAFA_KOD(string AFA_KOD) {
                return ((AFARow)(this.Rows.Find(new object[] {
                            AFA_KOD})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                AFADataTable cln = ((AFADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AFADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAFA_KOD = base.Columns["AFA_KOD"];
                this.columnAFA_NEV = base.Columns["AFA_NEV"];
                this.columnAFA_ERTEK = base.Columns["AFA_ERTEK"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAFA_KOD = new global::System.Data.DataColumn("AFA_KOD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAFA_KOD);
                this.columnAFA_NEV = new global::System.Data.DataColumn("AFA_NEV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAFA_NEV);
                this.columnAFA_ERTEK = new global::System.Data.DataColumn("AFA_ERTEK", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAFA_ERTEK);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAFA_KOD}, true));
                this.columnAFA_KOD.AllowDBNull = false;
                this.columnAFA_KOD.Unique = true;
                this.columnAFA_KOD.MaxLength = 2;
                this.columnAFA_NEV.AllowDBNull = false;
                this.columnAFA_NEV.MaxLength = 100;
                this.columnAFA_ERTEK.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AFARow NewAFARow() {
                return ((AFARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AFARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(AFARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AFARowChanged != null)) {
                    this.AFARowChanged(this, new AFARowChangeEvent(((AFARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AFARowChanging != null)) {
                    this.AFARowChanging(this, new AFARowChangeEvent(((AFARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AFARowDeleted != null)) {
                    this.AFARowDeleted(this, new AFARowChangeEvent(((AFARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AFARowDeleting != null)) {
                    this.AFARowDeleting(this, new AFARowChangeEvent(((AFARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAFARow(AFARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                eCafe_Szamlakor ds = new eCafe_Szamlakor();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AFADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ASZTALDataTable : global::System.Data.TypedTableBase<ASZTALRow> {
            
            private global::System.Data.DataColumn columnASZTAL_ID;
            
            private global::System.Data.DataColumn columnASZTAL_SZAM;
            
            private global::System.Data.DataColumn columnASZTAL_TIPUS_ID;
            
            private global::System.Data.DataColumn columnASZTAL_POS_X;
            
            private global::System.Data.DataColumn columnASZTAL_POS_Y;
            
            private global::System.Data.DataColumn columnHELY_ID;
            
            private global::System.Data.DataColumn columnASZTAL_ROTATE;
            
            private global::System.Data.DataColumn columnAKTIV;
            
            private global::System.Data.DataColumn columnUSEABLE;
            
            private global::System.Data.DataColumn columnNAME_VISIBLE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ASZTALDataTable() {
                this.TableName = "ASZTAL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ASZTALDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ASZTALDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ASZTAL_IDColumn {
                get {
                    return this.columnASZTAL_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ASZTAL_SZAMColumn {
                get {
                    return this.columnASZTAL_SZAM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ASZTAL_TIPUS_IDColumn {
                get {
                    return this.columnASZTAL_TIPUS_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ASZTAL_POS_XColumn {
                get {
                    return this.columnASZTAL_POS_X;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ASZTAL_POS_YColumn {
                get {
                    return this.columnASZTAL_POS_Y;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HELY_IDColumn {
                get {
                    return this.columnHELY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ASZTAL_ROTATEColumn {
                get {
                    return this.columnASZTAL_ROTATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AKTIVColumn {
                get {
                    return this.columnAKTIV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USEABLEColumn {
                get {
                    return this.columnUSEABLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAME_VISIBLEColumn {
                get {
                    return this.columnNAME_VISIBLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ASZTALRow this[int index] {
                get {
                    return ((ASZTALRow)(this.Rows[index]));
                }
            }
            
            public event ASZTALRowChangeEventHandler ASZTALRowChanging;
            
            public event ASZTALRowChangeEventHandler ASZTALRowChanged;
            
            public event ASZTALRowChangeEventHandler ASZTALRowDeleting;
            
            public event ASZTALRowChangeEventHandler ASZTALRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddASZTALRow(ASZTALRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ASZTALRow AddASZTALRow(string ASZTAL_SZAM, int ASZTAL_TIPUS_ID, int ASZTAL_POS_X, int ASZTAL_POS_Y, int HELY_ID, int ASZTAL_ROTATE, int AKTIV, int USEABLE, int NAME_VISIBLE) {
                ASZTALRow rowASZTALRow = ((ASZTALRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ASZTAL_SZAM,
                        ASZTAL_TIPUS_ID,
                        ASZTAL_POS_X,
                        ASZTAL_POS_Y,
                        HELY_ID,
                        ASZTAL_ROTATE,
                        AKTIV,
                        USEABLE,
                        NAME_VISIBLE};
                rowASZTALRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowASZTALRow);
                return rowASZTALRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ASZTALRow FindByASZTAL_ID(int ASZTAL_ID) {
                return ((ASZTALRow)(this.Rows.Find(new object[] {
                            ASZTAL_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ASZTALDataTable cln = ((ASZTALDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ASZTALDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnASZTAL_ID = base.Columns["ASZTAL_ID"];
                this.columnASZTAL_SZAM = base.Columns["ASZTAL_SZAM"];
                this.columnASZTAL_TIPUS_ID = base.Columns["ASZTAL_TIPUS_ID"];
                this.columnASZTAL_POS_X = base.Columns["ASZTAL_POS_X"];
                this.columnASZTAL_POS_Y = base.Columns["ASZTAL_POS_Y"];
                this.columnHELY_ID = base.Columns["HELY_ID"];
                this.columnASZTAL_ROTATE = base.Columns["ASZTAL_ROTATE"];
                this.columnAKTIV = base.Columns["AKTIV"];
                this.columnUSEABLE = base.Columns["USEABLE"];
                this.columnNAME_VISIBLE = base.Columns["NAME_VISIBLE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnASZTAL_ID = new global::System.Data.DataColumn("ASZTAL_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASZTAL_ID);
                this.columnASZTAL_SZAM = new global::System.Data.DataColumn("ASZTAL_SZAM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASZTAL_SZAM);
                this.columnASZTAL_TIPUS_ID = new global::System.Data.DataColumn("ASZTAL_TIPUS_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASZTAL_TIPUS_ID);
                this.columnASZTAL_POS_X = new global::System.Data.DataColumn("ASZTAL_POS_X", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASZTAL_POS_X);
                this.columnASZTAL_POS_Y = new global::System.Data.DataColumn("ASZTAL_POS_Y", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASZTAL_POS_Y);
                this.columnHELY_ID = new global::System.Data.DataColumn("HELY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHELY_ID);
                this.columnASZTAL_ROTATE = new global::System.Data.DataColumn("ASZTAL_ROTATE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASZTAL_ROTATE);
                this.columnAKTIV = new global::System.Data.DataColumn("AKTIV", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAKTIV);
                this.columnUSEABLE = new global::System.Data.DataColumn("USEABLE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSEABLE);
                this.columnNAME_VISIBLE = new global::System.Data.DataColumn("NAME_VISIBLE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_VISIBLE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnASZTAL_ID}, true));
                this.columnASZTAL_ID.AutoIncrement = true;
                this.columnASZTAL_ID.AutoIncrementSeed = -1;
                this.columnASZTAL_ID.AutoIncrementStep = -1;
                this.columnASZTAL_ID.AllowDBNull = false;
                this.columnASZTAL_ID.ReadOnly = true;
                this.columnASZTAL_ID.Unique = true;
                this.columnASZTAL_SZAM.AllowDBNull = false;
                this.columnASZTAL_SZAM.MaxLength = 10;
                this.columnASZTAL_TIPUS_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ASZTALRow NewASZTALRow() {
                return ((ASZTALRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ASZTALRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ASZTALRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ASZTALRowChanged != null)) {
                    this.ASZTALRowChanged(this, new ASZTALRowChangeEvent(((ASZTALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ASZTALRowChanging != null)) {
                    this.ASZTALRowChanging(this, new ASZTALRowChangeEvent(((ASZTALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ASZTALRowDeleted != null)) {
                    this.ASZTALRowDeleted(this, new ASZTALRowChangeEvent(((ASZTALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ASZTALRowDeleting != null)) {
                    this.ASZTALRowDeleting(this, new ASZTALRowChangeEvent(((ASZTALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveASZTALRow(ASZTALRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                eCafe_Szamlakor ds = new eCafe_Szamlakor();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ASZTALDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CIKKDataTable : global::System.Data.TypedTableBase<CIKKRow> {
            
            private global::System.Data.DataColumn columnCIKK_ID;
            
            private global::System.Data.DataColumn columnMEGNEVEZES;
            
            private global::System.Data.DataColumn columnCIKK_TIPUS;
            
            private global::System.Data.DataColumn columnCIKKCSOPORT_ID;
            
            private global::System.Data.DataColumn columnERTEKESITES_TIPUSA;
            
            private global::System.Data.DataColumn columnMEGYS_ID;
            
            private global::System.Data.DataColumn columnOTHER_FILTER_ID;
            
            private global::System.Data.DataColumn columnDEFAULT_RAKTAR;
            
            private global::System.Data.DataColumn columnSZJ_SZAM;
            
            private global::System.Data.DataColumn columnCIKKSZAM;
            
            private global::System.Data.DataColumn columnEAN_KOD;
            
            private global::System.Data.DataColumn columnMINIMUM_KESZLET;
            
            private global::System.Data.DataColumn columnOPTIMALIS_KESZLET;
            
            private global::System.Data.DataColumn columnELADASI_AR;
            
            private global::System.Data.DataColumn columnHELYETTES_TERMEK;
            
            private global::System.Data.DataColumn columnMAX_KEDVEZMENY_SZ;
            
            private global::System.Data.DataColumn columnMAX_KEDVEZM_FT;
            
            private global::System.Data.DataColumn columnMEGJEGYZES;
            
            private global::System.Data.DataColumn columnAKTIV;
            
            private global::System.Data.DataColumn columnGYORSKOD;
            
            private global::System.Data.DataColumn columnRECEPT_TEXT;
            
            private global::System.Data.DataColumn columnSPEC_ZARAS;
            
            private global::System.Data.DataColumn columnRECEPT_MODSZER;
            
            private global::System.Data.DataColumn columnRECEPT_ALK_TART;
            
            private global::System.Data.DataColumn columnRECEPT_POHAR;
            
            private global::System.Data.DataColumn columnELADASI_AR_NETTO;
            
            private global::System.Data.DataColumn columnAUTO_MEGRENDELO;
            
            private global::System.Data.DataColumn columnVIRTUAL;
            
            private global::System.Data.DataColumn columnCIKK_ROVID_NEV;
            
            private global::System.Data.DataColumn columnCIKK_TOP_LIST;
            
            private global::System.Data.DataColumn columnCIKKCSOP_PREFER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CIKKDataTable() {
                this.TableName = "CIKK";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CIKKDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CIKKDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CIKK_IDColumn {
                get {
                    return this.columnCIKK_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MEGNEVEZESColumn {
                get {
                    return this.columnMEGNEVEZES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CIKK_TIPUSColumn {
                get {
                    return this.columnCIKK_TIPUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CIKKCSOPORT_IDColumn {
                get {
                    return this.columnCIKKCSOPORT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ERTEKESITES_TIPUSAColumn {
                get {
                    return this.columnERTEKESITES_TIPUSA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MEGYS_IDColumn {
                get {
                    return this.columnMEGYS_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OTHER_FILTER_IDColumn {
                get {
                    return this.columnOTHER_FILTER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEFAULT_RAKTARColumn {
                get {
                    return this.columnDEFAULT_RAKTAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SZJ_SZAMColumn {
                get {
                    return this.columnSZJ_SZAM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CIKKSZAMColumn {
                get {
                    return this.columnCIKKSZAM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EAN_KODColumn {
                get {
                    return this.columnEAN_KOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MINIMUM_KESZLETColumn {
                get {
                    return this.columnMINIMUM_KESZLET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OPTIMALIS_KESZLETColumn {
                get {
                    return this.columnOPTIMALIS_KESZLET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ELADASI_ARColumn {
                get {
                    return this.columnELADASI_AR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HELYETTES_TERMEKColumn {
                get {
                    return this.columnHELYETTES_TERMEK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAX_KEDVEZMENY_SZColumn {
                get {
                    return this.columnMAX_KEDVEZMENY_SZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAX_KEDVEZM_FTColumn {
                get {
                    return this.columnMAX_KEDVEZM_FT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MEGJEGYZESColumn {
                get {
                    return this.columnMEGJEGYZES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AKTIVColumn {
                get {
                    return this.columnAKTIV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GYORSKODColumn {
                get {
                    return this.columnGYORSKOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RECEPT_TEXTColumn {
                get {
                    return this.columnRECEPT_TEXT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SPEC_ZARASColumn {
                get {
                    return this.columnSPEC_ZARAS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RECEPT_MODSZERColumn {
                get {
                    return this.columnRECEPT_MODSZER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RECEPT_ALK_TARTColumn {
                get {
                    return this.columnRECEPT_ALK_TART;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RECEPT_POHARColumn {
                get {
                    return this.columnRECEPT_POHAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ELADASI_AR_NETTOColumn {
                get {
                    return this.columnELADASI_AR_NETTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AUTO_MEGRENDELOColumn {
                get {
                    return this.columnAUTO_MEGRENDELO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VIRTUALColumn {
                get {
                    return this.columnVIRTUAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CIKK_ROVID_NEVColumn {
                get {
                    return this.columnCIKK_ROVID_NEV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CIKK_TOP_LISTColumn {
                get {
                    return this.columnCIKK_TOP_LIST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CIKKCSOP_PREFERColumn {
                get {
                    return this.columnCIKKCSOP_PREFER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CIKKRow this[int index] {
                get {
                    return ((CIKKRow)(this.Rows[index]));
                }
            }
            
            public event CIKKRowChangeEventHandler CIKKRowChanging;
            
            public event CIKKRowChangeEventHandler CIKKRowChanged;
            
            public event CIKKRowChangeEventHandler CIKKRowDeleting;
            
            public event CIKKRowChangeEventHandler CIKKRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCIKKRow(CIKKRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CIKKRow AddCIKKRow(
                        string MEGNEVEZES, 
                        int CIKK_TIPUS, 
                        int CIKKCSOPORT_ID, 
                        string ERTEKESITES_TIPUSA, 
                        string MEGYS_ID, 
                        int OTHER_FILTER_ID, 
                        int DEFAULT_RAKTAR, 
                        string SZJ_SZAM, 
                        string CIKKSZAM, 
                        string EAN_KOD, 
                        double MINIMUM_KESZLET, 
                        double OPTIMALIS_KESZLET, 
                        double ELADASI_AR, 
                        int HELYETTES_TERMEK, 
                        double MAX_KEDVEZMENY_SZ, 
                        double MAX_KEDVEZM_FT, 
                        string MEGJEGYZES, 
                        int AKTIV, 
                        string GYORSKOD, 
                        string RECEPT_TEXT, 
                        int SPEC_ZARAS, 
                        string RECEPT_MODSZER, 
                        string RECEPT_ALK_TART, 
                        string RECEPT_POHAR, 
                        double ELADASI_AR_NETTO, 
                        int AUTO_MEGRENDELO, 
                        int VIRTUAL, 
                        string CIKK_ROVID_NEV, 
                        int CIKK_TOP_LIST, 
                        int CIKKCSOP_PREFER) {
                CIKKRow rowCIKKRow = ((CIKKRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MEGNEVEZES,
                        CIKK_TIPUS,
                        CIKKCSOPORT_ID,
                        ERTEKESITES_TIPUSA,
                        MEGYS_ID,
                        OTHER_FILTER_ID,
                        DEFAULT_RAKTAR,
                        SZJ_SZAM,
                        CIKKSZAM,
                        EAN_KOD,
                        MINIMUM_KESZLET,
                        OPTIMALIS_KESZLET,
                        ELADASI_AR,
                        HELYETTES_TERMEK,
                        MAX_KEDVEZMENY_SZ,
                        MAX_KEDVEZM_FT,
                        MEGJEGYZES,
                        AKTIV,
                        GYORSKOD,
                        RECEPT_TEXT,
                        SPEC_ZARAS,
                        RECEPT_MODSZER,
                        RECEPT_ALK_TART,
                        RECEPT_POHAR,
                        ELADASI_AR_NETTO,
                        AUTO_MEGRENDELO,
                        VIRTUAL,
                        CIKK_ROVID_NEV,
                        CIKK_TOP_LIST,
                        CIKKCSOP_PREFER};
                rowCIKKRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCIKKRow);
                return rowCIKKRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CIKKRow FindByCIKK_ID(int CIKK_ID) {
                return ((CIKKRow)(this.Rows.Find(new object[] {
                            CIKK_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CIKKDataTable cln = ((CIKKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CIKKDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCIKK_ID = base.Columns["CIKK_ID"];
                this.columnMEGNEVEZES = base.Columns["MEGNEVEZES"];
                this.columnCIKK_TIPUS = base.Columns["CIKK_TIPUS"];
                this.columnCIKKCSOPORT_ID = base.Columns["CIKKCSOPORT_ID"];
                this.columnERTEKESITES_TIPUSA = base.Columns["ERTEKESITES_TIPUSA"];
                this.columnMEGYS_ID = base.Columns["MEGYS_ID"];
                this.columnOTHER_FILTER_ID = base.Columns["OTHER_FILTER_ID"];
                this.columnDEFAULT_RAKTAR = base.Columns["DEFAULT_RAKTAR"];
                this.columnSZJ_SZAM = base.Columns["SZJ_SZAM"];
                this.columnCIKKSZAM = base.Columns["CIKKSZAM"];
                this.columnEAN_KOD = base.Columns["EAN_KOD"];
                this.columnMINIMUM_KESZLET = base.Columns["MINIMUM_KESZLET"];
                this.columnOPTIMALIS_KESZLET = base.Columns["OPTIMALIS_KESZLET"];
                this.columnELADASI_AR = base.Columns["ELADASI_AR"];
                this.columnHELYETTES_TERMEK = base.Columns["HELYETTES_TERMEK"];
                this.columnMAX_KEDVEZMENY_SZ = base.Columns["MAX_KEDVEZMENY_SZ"];
                this.columnMAX_KEDVEZM_FT = base.Columns["MAX_KEDVEZM_FT"];
                this.columnMEGJEGYZES = base.Columns["MEGJEGYZES"];
                this.columnAKTIV = base.Columns["AKTIV"];
                this.columnGYORSKOD = base.Columns["GYORSKOD"];
                this.columnRECEPT_TEXT = base.Columns["RECEPT_TEXT"];
                this.columnSPEC_ZARAS = base.Columns["SPEC_ZARAS"];
                this.columnRECEPT_MODSZER = base.Columns["RECEPT_MODSZER"];
                this.columnRECEPT_ALK_TART = base.Columns["RECEPT_ALK_TART"];
                this.columnRECEPT_POHAR = base.Columns["RECEPT_POHAR"];
                this.columnELADASI_AR_NETTO = base.Columns["ELADASI_AR_NETTO"];
                this.columnAUTO_MEGRENDELO = base.Columns["AUTO_MEGRENDELO"];
                this.columnVIRTUAL = base.Columns["VIRTUAL"];
                this.columnCIKK_ROVID_NEV = base.Columns["CIKK_ROVID_NEV"];
                this.columnCIKK_TOP_LIST = base.Columns["CIKK_TOP_LIST"];
                this.columnCIKKCSOP_PREFER = base.Columns["CIKKCSOP_PREFER"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCIKK_ID = new global::System.Data.DataColumn("CIKK_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCIKK_ID);
                this.columnMEGNEVEZES = new global::System.Data.DataColumn("MEGNEVEZES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEGNEVEZES);
                this.columnCIKK_TIPUS = new global::System.Data.DataColumn("CIKK_TIPUS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCIKK_TIPUS);
                this.columnCIKKCSOPORT_ID = new global::System.Data.DataColumn("CIKKCSOPORT_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCIKKCSOPORT_ID);
                this.columnERTEKESITES_TIPUSA = new global::System.Data.DataColumn("ERTEKESITES_TIPUSA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnERTEKESITES_TIPUSA);
                this.columnMEGYS_ID = new global::System.Data.DataColumn("MEGYS_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEGYS_ID);
                this.columnOTHER_FILTER_ID = new global::System.Data.DataColumn("OTHER_FILTER_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTHER_FILTER_ID);
                this.columnDEFAULT_RAKTAR = new global::System.Data.DataColumn("DEFAULT_RAKTAR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEFAULT_RAKTAR);
                this.columnSZJ_SZAM = new global::System.Data.DataColumn("SZJ_SZAM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSZJ_SZAM);
                this.columnCIKKSZAM = new global::System.Data.DataColumn("CIKKSZAM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCIKKSZAM);
                this.columnEAN_KOD = new global::System.Data.DataColumn("EAN_KOD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEAN_KOD);
                this.columnMINIMUM_KESZLET = new global::System.Data.DataColumn("MINIMUM_KESZLET", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMINIMUM_KESZLET);
                this.columnOPTIMALIS_KESZLET = new global::System.Data.DataColumn("OPTIMALIS_KESZLET", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPTIMALIS_KESZLET);
                this.columnELADASI_AR = new global::System.Data.DataColumn("ELADASI_AR", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnELADASI_AR);
                this.columnHELYETTES_TERMEK = new global::System.Data.DataColumn("HELYETTES_TERMEK", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHELYETTES_TERMEK);
                this.columnMAX_KEDVEZMENY_SZ = new global::System.Data.DataColumn("MAX_KEDVEZMENY_SZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAX_KEDVEZMENY_SZ);
                this.columnMAX_KEDVEZM_FT = new global::System.Data.DataColumn("MAX_KEDVEZM_FT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAX_KEDVEZM_FT);
                this.columnMEGJEGYZES = new global::System.Data.DataColumn("MEGJEGYZES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEGJEGYZES);
                this.columnAKTIV = new global::System.Data.DataColumn("AKTIV", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAKTIV);
                this.columnGYORSKOD = new global::System.Data.DataColumn("GYORSKOD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGYORSKOD);
                this.columnRECEPT_TEXT = new global::System.Data.DataColumn("RECEPT_TEXT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECEPT_TEXT);
                this.columnSPEC_ZARAS = new global::System.Data.DataColumn("SPEC_ZARAS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPEC_ZARAS);
                this.columnRECEPT_MODSZER = new global::System.Data.DataColumn("RECEPT_MODSZER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECEPT_MODSZER);
                this.columnRECEPT_ALK_TART = new global::System.Data.DataColumn("RECEPT_ALK_TART", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECEPT_ALK_TART);
                this.columnRECEPT_POHAR = new global::System.Data.DataColumn("RECEPT_POHAR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECEPT_POHAR);
                this.columnELADASI_AR_NETTO = new global::System.Data.DataColumn("ELADASI_AR_NETTO", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnELADASI_AR_NETTO);
                this.columnAUTO_MEGRENDELO = new global::System.Data.DataColumn("AUTO_MEGRENDELO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAUTO_MEGRENDELO);
                this.columnVIRTUAL = new global::System.Data.DataColumn("VIRTUAL", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVIRTUAL);
                this.columnCIKK_ROVID_NEV = new global::System.Data.DataColumn("CIKK_ROVID_NEV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCIKK_ROVID_NEV);
                this.columnCIKK_TOP_LIST = new global::System.Data.DataColumn("CIKK_TOP_LIST", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCIKK_TOP_LIST);
                this.columnCIKKCSOP_PREFER = new global::System.Data.DataColumn("CIKKCSOP_PREFER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCIKKCSOP_PREFER);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCIKK_ID}, true));
                this.columnCIKK_ID.AutoIncrement = true;
                this.columnCIKK_ID.AutoIncrementSeed = -1;
                this.columnCIKK_ID.AutoIncrementStep = -1;
                this.columnCIKK_ID.AllowDBNull = false;
                this.columnCIKK_ID.ReadOnly = true;
                this.columnCIKK_ID.Unique = true;
                this.columnMEGNEVEZES.AllowDBNull = false;
                this.columnMEGNEVEZES.MaxLength = 50;
                this.columnCIKK_TIPUS.AllowDBNull = false;
                this.columnERTEKESITES_TIPUSA.MaxLength = 1;
                this.columnMEGYS_ID.MaxLength = 10;
                this.columnSZJ_SZAM.MaxLength = 30;
                this.columnCIKKSZAM.MaxLength = 50;
                this.columnEAN_KOD.MaxLength = 28;
                this.columnMEGJEGYZES.MaxLength = 4000;
                this.columnGYORSKOD.MaxLength = 10;
                this.columnRECEPT_TEXT.MaxLength = 2147483647;
                this.columnRECEPT_MODSZER.MaxLength = 100;
                this.columnRECEPT_ALK_TART.MaxLength = 100;
                this.columnRECEPT_POHAR.MaxLength = 100;
                this.columnCIKK_ROVID_NEV.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CIKKRow NewCIKKRow() {
                return ((CIKKRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CIKKRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CIKKRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CIKKRowChanged != null)) {
                    this.CIKKRowChanged(this, new CIKKRowChangeEvent(((CIKKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CIKKRowChanging != null)) {
                    this.CIKKRowChanging(this, new CIKKRowChangeEvent(((CIKKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CIKKRowDeleted != null)) {
                    this.CIKKRowDeleted(this, new CIKKRowChangeEvent(((CIKKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CIKKRowDeleting != null)) {
                    this.CIKKRowDeleting(this, new CIKKRowChangeEvent(((CIKKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCIKKRow(CIKKRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                eCafe_Szamlakor ds = new eCafe_Szamlakor();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CIKKDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MEGYSDataTable : global::System.Data.TypedTableBase<MEGYSRow> {
            
            private global::System.Data.DataColumn columnMEGYS_ID;
            
            private global::System.Data.DataColumn columnMEGYS_MEGNEVEZES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEGYSDataTable() {
                this.TableName = "MEGYS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MEGYSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MEGYSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MEGYS_IDColumn {
                get {
                    return this.columnMEGYS_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MEGYS_MEGNEVEZESColumn {
                get {
                    return this.columnMEGYS_MEGNEVEZES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEGYSRow this[int index] {
                get {
                    return ((MEGYSRow)(this.Rows[index]));
                }
            }
            
            public event MEGYSRowChangeEventHandler MEGYSRowChanging;
            
            public event MEGYSRowChangeEventHandler MEGYSRowChanged;
            
            public event MEGYSRowChangeEventHandler MEGYSRowDeleting;
            
            public event MEGYSRowChangeEventHandler MEGYSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMEGYSRow(MEGYSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEGYSRow AddMEGYSRow(string MEGYS_ID, string MEGYS_MEGNEVEZES) {
                MEGYSRow rowMEGYSRow = ((MEGYSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MEGYS_ID,
                        MEGYS_MEGNEVEZES};
                rowMEGYSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMEGYSRow);
                return rowMEGYSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MEGYSDataTable cln = ((MEGYSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MEGYSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMEGYS_ID = base.Columns["MEGYS_ID"];
                this.columnMEGYS_MEGNEVEZES = base.Columns["MEGYS_MEGNEVEZES"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMEGYS_ID = new global::System.Data.DataColumn("MEGYS_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEGYS_ID);
                this.columnMEGYS_MEGNEVEZES = new global::System.Data.DataColumn("MEGYS_MEGNEVEZES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEGYS_MEGNEVEZES);
                this.columnMEGYS_ID.MaxLength = 50;
                this.columnMEGYS_MEGNEVEZES.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEGYSRow NewMEGYSRow() {
                return ((MEGYSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MEGYSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MEGYSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MEGYSRowChanged != null)) {
                    this.MEGYSRowChanged(this, new MEGYSRowChangeEvent(((MEGYSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MEGYSRowChanging != null)) {
                    this.MEGYSRowChanging(this, new MEGYSRowChangeEvent(((MEGYSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MEGYSRowDeleted != null)) {
                    this.MEGYSRowDeleted(this, new MEGYSRowChangeEvent(((MEGYSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MEGYSRowDeleting != null)) {
                    this.MEGYSRowDeleting(this, new MEGYSRowChangeEvent(((MEGYSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMEGYSRow(MEGYSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                eCafe_Szamlakor ds = new eCafe_Szamlakor();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MEGYSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PARTNERDataTable : global::System.Data.TypedTableBase<PARTNERRow> {
            
            private global::System.Data.DataColumn columnPARTNER_ID;
            
            private global::System.Data.DataColumn columnP_TIPUS;
            
            private global::System.Data.DataColumn columnP_NEV;
            
            private global::System.Data.DataColumn columnP_NEV2;
            
            private global::System.Data.DataColumn columnP_NEV3;
            
            private global::System.Data.DataColumn columnAKTIV;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PARTNERDataTable() {
                this.TableName = "PARTNER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PARTNERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PARTNERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PARTNER_IDColumn {
                get {
                    return this.columnPARTNER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P_TIPUSColumn {
                get {
                    return this.columnP_TIPUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P_NEVColumn {
                get {
                    return this.columnP_NEV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P_NEV2Column {
                get {
                    return this.columnP_NEV2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P_NEV3Column {
                get {
                    return this.columnP_NEV3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AKTIVColumn {
                get {
                    return this.columnAKTIV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PARTNERRow this[int index] {
                get {
                    return ((PARTNERRow)(this.Rows[index]));
                }
            }
            
            public event PARTNERRowChangeEventHandler PARTNERRowChanging;
            
            public event PARTNERRowChangeEventHandler PARTNERRowChanged;
            
            public event PARTNERRowChangeEventHandler PARTNERRowDeleting;
            
            public event PARTNERRowChangeEventHandler PARTNERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPARTNERRow(PARTNERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PARTNERRow AddPARTNERRow(string P_TIPUS, string P_NEV, string P_NEV2, string P_NEV3, int AKTIV) {
                PARTNERRow rowPARTNERRow = ((PARTNERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        P_TIPUS,
                        P_NEV,
                        P_NEV2,
                        P_NEV3,
                        AKTIV};
                rowPARTNERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPARTNERRow);
                return rowPARTNERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PARTNERRow FindByPARTNER_ID(int PARTNER_ID) {
                return ((PARTNERRow)(this.Rows.Find(new object[] {
                            PARTNER_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PARTNERDataTable cln = ((PARTNERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PARTNERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPARTNER_ID = base.Columns["PARTNER_ID"];
                this.columnP_TIPUS = base.Columns["P_TIPUS"];
                this.columnP_NEV = base.Columns["P_NEV"];
                this.columnP_NEV2 = base.Columns["P_NEV2"];
                this.columnP_NEV3 = base.Columns["P_NEV3"];
                this.columnAKTIV = base.Columns["AKTIV"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPARTNER_ID = new global::System.Data.DataColumn("PARTNER_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARTNER_ID);
                this.columnP_TIPUS = new global::System.Data.DataColumn("P_TIPUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP_TIPUS);
                this.columnP_NEV = new global::System.Data.DataColumn("P_NEV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP_NEV);
                this.columnP_NEV2 = new global::System.Data.DataColumn("P_NEV2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP_NEV2);
                this.columnP_NEV3 = new global::System.Data.DataColumn("P_NEV3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP_NEV3);
                this.columnAKTIV = new global::System.Data.DataColumn("AKTIV", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAKTIV);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPARTNER_ID}, true));
                this.columnPARTNER_ID.AutoIncrement = true;
                this.columnPARTNER_ID.AutoIncrementSeed = -1;
                this.columnPARTNER_ID.AutoIncrementStep = -1;
                this.columnPARTNER_ID.AllowDBNull = false;
                this.columnPARTNER_ID.ReadOnly = true;
                this.columnPARTNER_ID.Unique = true;
                this.columnP_TIPUS.MaxLength = 1;
                this.columnP_NEV.MaxLength = 150;
                this.columnP_NEV2.MaxLength = 150;
                this.columnP_NEV3.MaxLength = 150;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PARTNERRow NewPARTNERRow() {
                return ((PARTNERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PARTNERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PARTNERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PARTNERRowChanged != null)) {
                    this.PARTNERRowChanged(this, new PARTNERRowChangeEvent(((PARTNERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PARTNERRowChanging != null)) {
                    this.PARTNERRowChanging(this, new PARTNERRowChangeEvent(((PARTNERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PARTNERRowDeleted != null)) {
                    this.PARTNERRowDeleted(this, new PARTNERRowChangeEvent(((PARTNERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PARTNERRowDeleting != null)) {
                    this.PARTNERRowDeleting(this, new PARTNERRowChangeEvent(((PARTNERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePARTNERRow(PARTNERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                eCafe_Szamlakor ds = new eCafe_Szamlakor();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PARTNERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RENDELES_FEJDataTable : global::System.Data.TypedTableBase<RENDELES_FEJRow> {
            
            private global::System.Data.DataColumn columnRENDELES_ID;
            
            private global::System.Data.DataColumn columnASZTAL_ID;
            
            private global::System.Data.DataColumn columnDATUM;
            
            private global::System.Data.DataColumn columnPARTNER_ID;
            
            private global::System.Data.DataColumn columnFIZETVE;
            
            private global::System.Data.DataColumn columnAKTIV;
            
            private global::System.Data.DataColumn columnUSER_ID;
            
            private global::System.Data.DataColumn columnEV;
            
            private global::System.Data.DataColumn columnHO;
            
            private global::System.Data.DataColumn columnNAP;
            
            private global::System.Data.DataColumn columnKEDVEZMENY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RENDELES_FEJDataTable() {
                this.TableName = "RENDELES_FEJ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RENDELES_FEJDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RENDELES_FEJDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RENDELES_IDColumn {
                get {
                    return this.columnRENDELES_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ASZTAL_IDColumn {
                get {
                    return this.columnASZTAL_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATUMColumn {
                get {
                    return this.columnDATUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PARTNER_IDColumn {
                get {
                    return this.columnPARTNER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FIZETVEColumn {
                get {
                    return this.columnFIZETVE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AKTIVColumn {
                get {
                    return this.columnAKTIV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USER_IDColumn {
                get {
                    return this.columnUSER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EVColumn {
                get {
                    return this.columnEV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HOColumn {
                get {
                    return this.columnHO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAPColumn {
                get {
                    return this.columnNAP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KEDVEZMENYColumn {
                get {
                    return this.columnKEDVEZMENY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RENDELES_FEJRow this[int index] {
                get {
                    return ((RENDELES_FEJRow)(this.Rows[index]));
                }
            }
            
            public event RENDELES_FEJRowChangeEventHandler RENDELES_FEJRowChanging;
            
            public event RENDELES_FEJRowChangeEventHandler RENDELES_FEJRowChanged;
            
            public event RENDELES_FEJRowChangeEventHandler RENDELES_FEJRowDeleting;
            
            public event RENDELES_FEJRowChangeEventHandler RENDELES_FEJRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRENDELES_FEJRow(RENDELES_FEJRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RENDELES_FEJRow AddRENDELES_FEJRow(ASZTALRow parentASZTALRowByASZTAL_RENDELES_FEJ, System.DateTime DATUM, int PARTNER_ID, int FIZETVE, int AKTIV, int USER_ID, int EV, int HO, int NAP, double KEDVEZMENY) {
                RENDELES_FEJRow rowRENDELES_FEJRow = ((RENDELES_FEJRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        DATUM,
                        PARTNER_ID,
                        FIZETVE,
                        AKTIV,
                        USER_ID,
                        EV,
                        HO,
                        NAP,
                        KEDVEZMENY};
                if ((parentASZTALRowByASZTAL_RENDELES_FEJ != null)) {
                    columnValuesArray[1] = parentASZTALRowByASZTAL_RENDELES_FEJ[0];
                }
                rowRENDELES_FEJRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRENDELES_FEJRow);
                return rowRENDELES_FEJRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RENDELES_FEJRow FindByRENDELES_ID(int RENDELES_ID) {
                return ((RENDELES_FEJRow)(this.Rows.Find(new object[] {
                            RENDELES_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RENDELES_FEJDataTable cln = ((RENDELES_FEJDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RENDELES_FEJDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRENDELES_ID = base.Columns["RENDELES_ID"];
                this.columnASZTAL_ID = base.Columns["ASZTAL_ID"];
                this.columnDATUM = base.Columns["DATUM"];
                this.columnPARTNER_ID = base.Columns["PARTNER_ID"];
                this.columnFIZETVE = base.Columns["FIZETVE"];
                this.columnAKTIV = base.Columns["AKTIV"];
                this.columnUSER_ID = base.Columns["USER_ID"];
                this.columnEV = base.Columns["EV"];
                this.columnHO = base.Columns["HO"];
                this.columnNAP = base.Columns["NAP"];
                this.columnKEDVEZMENY = base.Columns["KEDVEZMENY"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRENDELES_ID = new global::System.Data.DataColumn("RENDELES_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRENDELES_ID);
                this.columnASZTAL_ID = new global::System.Data.DataColumn("ASZTAL_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASZTAL_ID);
                this.columnDATUM = new global::System.Data.DataColumn("DATUM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATUM);
                this.columnPARTNER_ID = new global::System.Data.DataColumn("PARTNER_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARTNER_ID);
                this.columnFIZETVE = new global::System.Data.DataColumn("FIZETVE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIZETVE);
                this.columnAKTIV = new global::System.Data.DataColumn("AKTIV", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAKTIV);
                this.columnUSER_ID = new global::System.Data.DataColumn("USER_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_ID);
                this.columnEV = new global::System.Data.DataColumn("EV", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEV);
                this.columnHO = new global::System.Data.DataColumn("HO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHO);
                this.columnNAP = new global::System.Data.DataColumn("NAP", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAP);
                this.columnKEDVEZMENY = new global::System.Data.DataColumn("KEDVEZMENY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEDVEZMENY);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRENDELES_ID}, true));
                this.columnRENDELES_ID.AutoIncrement = true;
                this.columnRENDELES_ID.AutoIncrementSeed = -1;
                this.columnRENDELES_ID.AutoIncrementStep = -1;
                this.columnRENDELES_ID.AllowDBNull = false;
                this.columnRENDELES_ID.ReadOnly = true;
                this.columnRENDELES_ID.Unique = true;
                this.columnASZTAL_ID.AllowDBNull = false;
                this.columnDATUM.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RENDELES_FEJRow NewRENDELES_FEJRow() {
                return ((RENDELES_FEJRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RENDELES_FEJRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RENDELES_FEJRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RENDELES_FEJRowChanged != null)) {
                    this.RENDELES_FEJRowChanged(this, new RENDELES_FEJRowChangeEvent(((RENDELES_FEJRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RENDELES_FEJRowChanging != null)) {
                    this.RENDELES_FEJRowChanging(this, new RENDELES_FEJRowChangeEvent(((RENDELES_FEJRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RENDELES_FEJRowDeleted != null)) {
                    this.RENDELES_FEJRowDeleted(this, new RENDELES_FEJRowChangeEvent(((RENDELES_FEJRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RENDELES_FEJRowDeleting != null)) {
                    this.RENDELES_FEJRowDeleting(this, new RENDELES_FEJRowChangeEvent(((RENDELES_FEJRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRENDELES_FEJRow(RENDELES_FEJRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                eCafe_Szamlakor ds = new eCafe_Szamlakor();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RENDELES_FEJDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RENDELES_SORDataTable : global::System.Data.TypedTableBase<RENDELES_SORRow> {
            
            private global::System.Data.DataColumn columnSOR_ID;
            
            private global::System.Data.DataColumn columnRENDELES_ID;
            
            private global::System.Data.DataColumn columnCIKK_ID;
            
            private global::System.Data.DataColumn columnDB;
            
            private global::System.Data.DataColumn columnDATUM;
            
            private global::System.Data.DataColumn columnERTEK;
            
            private global::System.Data.DataColumn columnDELETED;
            
            private global::System.Data.DataColumn columnRAKTAR_ID;
            
            private global::System.Data.DataColumn columnFIZETVE;
            
            private global::System.Data.DataColumn columnCANCELED;
            
            private global::System.Data.DataColumn columnMODIFIED_USER;
            
            private global::System.Data.DataColumn columnNETTO_ERTEK;
            
            private global::System.Data.DataColumn columnAFA_ERTEK;
            
            private global::System.Data.DataColumn columnLIT_KISZ_ID;
            
            private global::System.Data.DataColumn columnKEDVEZMENY;
            
            private global::System.Data.DataColumn columnKEDV_PARTNER_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RENDELES_SORDataTable() {
                this.TableName = "RENDELES_SOR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RENDELES_SORDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RENDELES_SORDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOR_IDColumn {
                get {
                    return this.columnSOR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RENDELES_IDColumn {
                get {
                    return this.columnRENDELES_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CIKK_IDColumn {
                get {
                    return this.columnCIKK_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DBColumn {
                get {
                    return this.columnDB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATUMColumn {
                get {
                    return this.columnDATUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ERTEKColumn {
                get {
                    return this.columnERTEK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DELETEDColumn {
                get {
                    return this.columnDELETED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RAKTAR_IDColumn {
                get {
                    return this.columnRAKTAR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FIZETVEColumn {
                get {
                    return this.columnFIZETVE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CANCELEDColumn {
                get {
                    return this.columnCANCELED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODIFIED_USERColumn {
                get {
                    return this.columnMODIFIED_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NETTO_ERTEKColumn {
                get {
                    return this.columnNETTO_ERTEK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AFA_ERTEKColumn {
                get {
                    return this.columnAFA_ERTEK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LIT_KISZ_IDColumn {
                get {
                    return this.columnLIT_KISZ_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KEDVEZMENYColumn {
                get {
                    return this.columnKEDVEZMENY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KEDV_PARTNER_IDColumn {
                get {
                    return this.columnKEDV_PARTNER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RENDELES_SORRow this[int index] {
                get {
                    return ((RENDELES_SORRow)(this.Rows[index]));
                }
            }
            
            public event RENDELES_SORRowChangeEventHandler RENDELES_SORRowChanging;
            
            public event RENDELES_SORRowChangeEventHandler RENDELES_SORRowChanged;
            
            public event RENDELES_SORRowChangeEventHandler RENDELES_SORRowDeleting;
            
            public event RENDELES_SORRowChangeEventHandler RENDELES_SORRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRENDELES_SORRow(RENDELES_SORRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RENDELES_SORRow AddRENDELES_SORRow(RENDELES_FEJRow parentRENDELES_FEJRowByFK_RENDELES_SOR_RENDELES_SOR, int CIKK_ID, double DB, System.DateTime DATUM, double ERTEK, int DELETED, int RAKTAR_ID, int FIZETVE, int CANCELED, int MODIFIED_USER, double NETTO_ERTEK, double AFA_ERTEK, int LIT_KISZ_ID, double KEDVEZMENY, int KEDV_PARTNER_ID) {
                RENDELES_SORRow rowRENDELES_SORRow = ((RENDELES_SORRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        CIKK_ID,
                        DB,
                        DATUM,
                        ERTEK,
                        DELETED,
                        RAKTAR_ID,
                        FIZETVE,
                        CANCELED,
                        MODIFIED_USER,
                        NETTO_ERTEK,
                        AFA_ERTEK,
                        LIT_KISZ_ID,
                        KEDVEZMENY,
                        KEDV_PARTNER_ID};
                if ((parentRENDELES_FEJRowByFK_RENDELES_SOR_RENDELES_SOR != null)) {
                    columnValuesArray[1] = parentRENDELES_FEJRowByFK_RENDELES_SOR_RENDELES_SOR[0];
                }
                rowRENDELES_SORRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRENDELES_SORRow);
                return rowRENDELES_SORRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RENDELES_SORRow FindBySOR_ID(int SOR_ID) {
                return ((RENDELES_SORRow)(this.Rows.Find(new object[] {
                            SOR_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RENDELES_SORDataTable cln = ((RENDELES_SORDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RENDELES_SORDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSOR_ID = base.Columns["SOR_ID"];
                this.columnRENDELES_ID = base.Columns["RENDELES_ID"];
                this.columnCIKK_ID = base.Columns["CIKK_ID"];
                this.columnDB = base.Columns["DB"];
                this.columnDATUM = base.Columns["DATUM"];
                this.columnERTEK = base.Columns["ERTEK"];
                this.columnDELETED = base.Columns["DELETED"];
                this.columnRAKTAR_ID = base.Columns["RAKTAR_ID"];
                this.columnFIZETVE = base.Columns["FIZETVE"];
                this.columnCANCELED = base.Columns["CANCELED"];
                this.columnMODIFIED_USER = base.Columns["MODIFIED_USER"];
                this.columnNETTO_ERTEK = base.Columns["NETTO_ERTEK"];
                this.columnAFA_ERTEK = base.Columns["AFA_ERTEK"];
                this.columnLIT_KISZ_ID = base.Columns["LIT_KISZ_ID"];
                this.columnKEDVEZMENY = base.Columns["KEDVEZMENY"];
                this.columnKEDV_PARTNER_ID = base.Columns["KEDV_PARTNER_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSOR_ID = new global::System.Data.DataColumn("SOR_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOR_ID);
                this.columnRENDELES_ID = new global::System.Data.DataColumn("RENDELES_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRENDELES_ID);
                this.columnCIKK_ID = new global::System.Data.DataColumn("CIKK_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCIKK_ID);
                this.columnDB = new global::System.Data.DataColumn("DB", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDB);
                this.columnDATUM = new global::System.Data.DataColumn("DATUM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATUM);
                this.columnERTEK = new global::System.Data.DataColumn("ERTEK", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnERTEK);
                this.columnDELETED = new global::System.Data.DataColumn("DELETED", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDELETED);
                this.columnRAKTAR_ID = new global::System.Data.DataColumn("RAKTAR_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRAKTAR_ID);
                this.columnFIZETVE = new global::System.Data.DataColumn("FIZETVE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIZETVE);
                this.columnCANCELED = new global::System.Data.DataColumn("CANCELED", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCANCELED);
                this.columnMODIFIED_USER = new global::System.Data.DataColumn("MODIFIED_USER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_USER);
                this.columnNETTO_ERTEK = new global::System.Data.DataColumn("NETTO_ERTEK", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNETTO_ERTEK);
                this.columnAFA_ERTEK = new global::System.Data.DataColumn("AFA_ERTEK", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAFA_ERTEK);
                this.columnLIT_KISZ_ID = new global::System.Data.DataColumn("LIT_KISZ_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIT_KISZ_ID);
                this.columnKEDVEZMENY = new global::System.Data.DataColumn("KEDVEZMENY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEDVEZMENY);
                this.columnKEDV_PARTNER_ID = new global::System.Data.DataColumn("KEDV_PARTNER_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEDV_PARTNER_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSOR_ID}, true));
                this.columnSOR_ID.AutoIncrement = true;
                this.columnSOR_ID.AutoIncrementSeed = -1;
                this.columnSOR_ID.AutoIncrementStep = -1;
                this.columnSOR_ID.AllowDBNull = false;
                this.columnSOR_ID.ReadOnly = true;
                this.columnSOR_ID.Unique = true;
                this.columnRENDELES_ID.AllowDBNull = false;
                this.columnCIKK_ID.AllowDBNull = false;
                this.columnDB.AllowDBNull = false;
                this.columnDELETED.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RENDELES_SORRow NewRENDELES_SORRow() {
                return ((RENDELES_SORRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RENDELES_SORRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RENDELES_SORRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RENDELES_SORRowChanged != null)) {
                    this.RENDELES_SORRowChanged(this, new RENDELES_SORRowChangeEvent(((RENDELES_SORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RENDELES_SORRowChanging != null)) {
                    this.RENDELES_SORRowChanging(this, new RENDELES_SORRowChangeEvent(((RENDELES_SORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RENDELES_SORRowDeleted != null)) {
                    this.RENDELES_SORRowDeleted(this, new RENDELES_SORRowChangeEvent(((RENDELES_SORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RENDELES_SORRowDeleting != null)) {
                    this.RENDELES_SORRowDeleting(this, new RENDELES_SORRowChangeEvent(((RENDELES_SORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRENDELES_SORRow(RENDELES_SORRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                eCafe_Szamlakor ds = new eCafe_Szamlakor();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RENDELES_SORDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SZAMLA_FEJDataTable : global::System.Data.TypedTableBase<SZAMLA_FEJRow> {
            
            private global::System.Data.DataColumn columnSZAMLA_FEJ_ID;
            
            private global::System.Data.DataColumn columnSZAMLA_SORSZAM;
            
            private global::System.Data.DataColumn columnPARTNER_ID;
            
            private global::System.Data.DataColumn columnRENDELES_ID;
            
            private global::System.Data.DataColumn columnOSSZESEN_NETTO;
            
            private global::System.Data.DataColumn columnOSSZESEN_BRUTTO;
            
            private global::System.Data.DataColumn columnOSSZESEN_AFA;
            
            private global::System.Data.DataColumn columnKEDVEZMENY;
            
            private global::System.Data.DataColumn columnFIZETETT_OSSZEG;
            
            private global::System.Data.DataColumn columnFIZETESI_MOD;
            
            private global::System.Data.DataColumn columnSZAMLA_DATUMA;
            
            private global::System.Data.DataColumn columnEV;
            
            private global::System.Data.DataColumn columnHO;
            
            private global::System.Data.DataColumn columnNAP;
            
            private global::System.Data.DataColumn columnUSER_ID;
            
            private global::System.Data.DataColumn columnP_NEV;
            
            private global::System.Data.DataColumn columnP_NEV2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZAMLA_FEJDataTable() {
                this.TableName = "SZAMLA_FEJ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SZAMLA_FEJDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SZAMLA_FEJDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SZAMLA_FEJ_IDColumn {
                get {
                    return this.columnSZAMLA_FEJ_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SZAMLA_SORSZAMColumn {
                get {
                    return this.columnSZAMLA_SORSZAM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PARTNER_IDColumn {
                get {
                    return this.columnPARTNER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RENDELES_IDColumn {
                get {
                    return this.columnRENDELES_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OSSZESEN_NETTOColumn {
                get {
                    return this.columnOSSZESEN_NETTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OSSZESEN_BRUTTOColumn {
                get {
                    return this.columnOSSZESEN_BRUTTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OSSZESEN_AFAColumn {
                get {
                    return this.columnOSSZESEN_AFA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KEDVEZMENYColumn {
                get {
                    return this.columnKEDVEZMENY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FIZETETT_OSSZEGColumn {
                get {
                    return this.columnFIZETETT_OSSZEG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FIZETESI_MODColumn {
                get {
                    return this.columnFIZETESI_MOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SZAMLA_DATUMAColumn {
                get {
                    return this.columnSZAMLA_DATUMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EVColumn {
                get {
                    return this.columnEV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HOColumn {
                get {
                    return this.columnHO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAPColumn {
                get {
                    return this.columnNAP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USER_IDColumn {
                get {
                    return this.columnUSER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P_NEVColumn {
                get {
                    return this.columnP_NEV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P_NEV2Column {
                get {
                    return this.columnP_NEV2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZAMLA_FEJRow this[int index] {
                get {
                    return ((SZAMLA_FEJRow)(this.Rows[index]));
                }
            }
            
            public event SZAMLA_FEJRowChangeEventHandler SZAMLA_FEJRowChanging;
            
            public event SZAMLA_FEJRowChangeEventHandler SZAMLA_FEJRowChanged;
            
            public event SZAMLA_FEJRowChangeEventHandler SZAMLA_FEJRowDeleting;
            
            public event SZAMLA_FEJRowChangeEventHandler SZAMLA_FEJRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSZAMLA_FEJRow(SZAMLA_FEJRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZAMLA_FEJRow AddSZAMLA_FEJRow(
                        string SZAMLA_SORSZAM, 
                        PARTNERRow parentPARTNERRowByPARTNER_SZAMLA_FEJ, 
                        int RENDELES_ID, 
                        double OSSZESEN_NETTO, 
                        double OSSZESEN_BRUTTO, 
                        double OSSZESEN_AFA, 
                        double KEDVEZMENY, 
                        double FIZETETT_OSSZEG, 
                        int FIZETESI_MOD, 
                        System.DateTime SZAMLA_DATUMA, 
                        int EV, 
                        int HO, 
                        int NAP, 
                        int USER_ID, 
                        string P_NEV, 
                        string P_NEV2) {
                SZAMLA_FEJRow rowSZAMLA_FEJRow = ((SZAMLA_FEJRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SZAMLA_SORSZAM,
                        null,
                        RENDELES_ID,
                        OSSZESEN_NETTO,
                        OSSZESEN_BRUTTO,
                        OSSZESEN_AFA,
                        KEDVEZMENY,
                        FIZETETT_OSSZEG,
                        FIZETESI_MOD,
                        SZAMLA_DATUMA,
                        EV,
                        HO,
                        NAP,
                        USER_ID,
                        P_NEV,
                        P_NEV2};
                if ((parentPARTNERRowByPARTNER_SZAMLA_FEJ != null)) {
                    columnValuesArray[2] = parentPARTNERRowByPARTNER_SZAMLA_FEJ[0];
                }
                rowSZAMLA_FEJRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSZAMLA_FEJRow);
                return rowSZAMLA_FEJRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZAMLA_FEJRow FindBySZAMLA_FEJ_ID(int SZAMLA_FEJ_ID) {
                return ((SZAMLA_FEJRow)(this.Rows.Find(new object[] {
                            SZAMLA_FEJ_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SZAMLA_FEJDataTable cln = ((SZAMLA_FEJDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SZAMLA_FEJDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSZAMLA_FEJ_ID = base.Columns["SZAMLA_FEJ_ID"];
                this.columnSZAMLA_SORSZAM = base.Columns["SZAMLA_SORSZAM"];
                this.columnPARTNER_ID = base.Columns["PARTNER_ID"];
                this.columnRENDELES_ID = base.Columns["RENDELES_ID"];
                this.columnOSSZESEN_NETTO = base.Columns["OSSZESEN_NETTO"];
                this.columnOSSZESEN_BRUTTO = base.Columns["OSSZESEN_BRUTTO"];
                this.columnOSSZESEN_AFA = base.Columns["OSSZESEN_AFA"];
                this.columnKEDVEZMENY = base.Columns["KEDVEZMENY"];
                this.columnFIZETETT_OSSZEG = base.Columns["FIZETETT_OSSZEG"];
                this.columnFIZETESI_MOD = base.Columns["FIZETESI_MOD"];
                this.columnSZAMLA_DATUMA = base.Columns["SZAMLA_DATUMA"];
                this.columnEV = base.Columns["EV"];
                this.columnHO = base.Columns["HO"];
                this.columnNAP = base.Columns["NAP"];
                this.columnUSER_ID = base.Columns["USER_ID"];
                this.columnP_NEV = base.Columns["P_NEV"];
                this.columnP_NEV2 = base.Columns["P_NEV2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSZAMLA_FEJ_ID = new global::System.Data.DataColumn("SZAMLA_FEJ_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSZAMLA_FEJ_ID);
                this.columnSZAMLA_SORSZAM = new global::System.Data.DataColumn("SZAMLA_SORSZAM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSZAMLA_SORSZAM);
                this.columnPARTNER_ID = new global::System.Data.DataColumn("PARTNER_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARTNER_ID);
                this.columnRENDELES_ID = new global::System.Data.DataColumn("RENDELES_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRENDELES_ID);
                this.columnOSSZESEN_NETTO = new global::System.Data.DataColumn("OSSZESEN_NETTO", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSSZESEN_NETTO);
                this.columnOSSZESEN_BRUTTO = new global::System.Data.DataColumn("OSSZESEN_BRUTTO", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSSZESEN_BRUTTO);
                this.columnOSSZESEN_AFA = new global::System.Data.DataColumn("OSSZESEN_AFA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSSZESEN_AFA);
                this.columnKEDVEZMENY = new global::System.Data.DataColumn("KEDVEZMENY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEDVEZMENY);
                this.columnFIZETETT_OSSZEG = new global::System.Data.DataColumn("FIZETETT_OSSZEG", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIZETETT_OSSZEG);
                this.columnFIZETESI_MOD = new global::System.Data.DataColumn("FIZETESI_MOD", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIZETESI_MOD);
                this.columnSZAMLA_DATUMA = new global::System.Data.DataColumn("SZAMLA_DATUMA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSZAMLA_DATUMA);
                this.columnEV = new global::System.Data.DataColumn("EV", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEV);
                this.columnHO = new global::System.Data.DataColumn("HO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHO);
                this.columnNAP = new global::System.Data.DataColumn("NAP", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAP);
                this.columnUSER_ID = new global::System.Data.DataColumn("USER_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_ID);
                this.columnP_NEV = new global::System.Data.DataColumn("P_NEV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP_NEV);
                this.columnP_NEV2 = new global::System.Data.DataColumn("P_NEV2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP_NEV2);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSZAMLA_FEJ_ID}, true));
                this.columnSZAMLA_FEJ_ID.AutoIncrement = true;
                this.columnSZAMLA_FEJ_ID.AutoIncrementSeed = -1;
                this.columnSZAMLA_FEJ_ID.AutoIncrementStep = -1;
                this.columnSZAMLA_FEJ_ID.AllowDBNull = false;
                this.columnSZAMLA_FEJ_ID.ReadOnly = true;
                this.columnSZAMLA_FEJ_ID.Unique = true;
                this.columnSZAMLA_SORSZAM.MaxLength = 50;
                this.columnSZAMLA_DATUMA.Caption = "Számla dátuma";
                this.columnEV.AllowDBNull = false;
                this.columnHO.AllowDBNull = false;
                this.columnNAP.AllowDBNull = false;
                this.columnP_NEV.MaxLength = 150;
                this.columnP_NEV2.MaxLength = 150;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZAMLA_FEJRow NewSZAMLA_FEJRow() {
                return ((SZAMLA_FEJRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SZAMLA_FEJRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SZAMLA_FEJRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SZAMLA_FEJRowChanged != null)) {
                    this.SZAMLA_FEJRowChanged(this, new SZAMLA_FEJRowChangeEvent(((SZAMLA_FEJRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SZAMLA_FEJRowChanging != null)) {
                    this.SZAMLA_FEJRowChanging(this, new SZAMLA_FEJRowChangeEvent(((SZAMLA_FEJRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SZAMLA_FEJRowDeleted != null)) {
                    this.SZAMLA_FEJRowDeleted(this, new SZAMLA_FEJRowChangeEvent(((SZAMLA_FEJRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SZAMLA_FEJRowDeleting != null)) {
                    this.SZAMLA_FEJRowDeleting(this, new SZAMLA_FEJRowChangeEvent(((SZAMLA_FEJRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSZAMLA_FEJRow(SZAMLA_FEJRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                eCafe_Szamlakor ds = new eCafe_Szamlakor();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SZAMLA_FEJDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SZAMLA_TETELDataTable : global::System.Data.TypedTableBase<SZAMLA_TETELRow> {
            
            private global::System.Data.DataColumn columnTETEL_ID;
            
            private global::System.Data.DataColumn columnRENDELES_SOR_ID;
            
            private global::System.Data.DataColumn columnCIKK_ID;
            
            private global::System.Data.DataColumn columnMENNYISEG;
            
            private global::System.Data.DataColumn columnEGYSEGAR;
            
            private global::System.Data.DataColumn columnNETTO;
            
            private global::System.Data.DataColumn columnAFA;
            
            private global::System.Data.DataColumn columnBRUTTO;
            
            private global::System.Data.DataColumn columnAFA_KOD;
            
            private global::System.Data.DataColumn columnMEGJEGYZES;
            
            private global::System.Data.DataColumn columnCIKK_MEGNEVEZES;
            
            private global::System.Data.DataColumn columnSZAMLA_FEJ_ID;
            
            private global::System.Data.DataColumn columnKALK_MENNYISEG;
            
            private global::System.Data.DataColumn columnKEDVEZMENY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZAMLA_TETELDataTable() {
                this.TableName = "SZAMLA_TETEL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SZAMLA_TETELDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SZAMLA_TETELDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TETEL_IDColumn {
                get {
                    return this.columnTETEL_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RENDELES_SOR_IDColumn {
                get {
                    return this.columnRENDELES_SOR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CIKK_IDColumn {
                get {
                    return this.columnCIKK_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MENNYISEGColumn {
                get {
                    return this.columnMENNYISEG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EGYSEGARColumn {
                get {
                    return this.columnEGYSEGAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NETTOColumn {
                get {
                    return this.columnNETTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AFAColumn {
                get {
                    return this.columnAFA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRUTTOColumn {
                get {
                    return this.columnBRUTTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AFA_KODColumn {
                get {
                    return this.columnAFA_KOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MEGJEGYZESColumn {
                get {
                    return this.columnMEGJEGYZES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CIKK_MEGNEVEZESColumn {
                get {
                    return this.columnCIKK_MEGNEVEZES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SZAMLA_FEJ_IDColumn {
                get {
                    return this.columnSZAMLA_FEJ_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KALK_MENNYISEGColumn {
                get {
                    return this.columnKALK_MENNYISEG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KEDVEZMENYColumn {
                get {
                    return this.columnKEDVEZMENY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZAMLA_TETELRow this[int index] {
                get {
                    return ((SZAMLA_TETELRow)(this.Rows[index]));
                }
            }
            
            public event SZAMLA_TETELRowChangeEventHandler SZAMLA_TETELRowChanging;
            
            public event SZAMLA_TETELRowChangeEventHandler SZAMLA_TETELRowChanged;
            
            public event SZAMLA_TETELRowChangeEventHandler SZAMLA_TETELRowDeleting;
            
            public event SZAMLA_TETELRowChangeEventHandler SZAMLA_TETELRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSZAMLA_TETELRow(SZAMLA_TETELRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZAMLA_TETELRow AddSZAMLA_TETELRow(RENDELES_SORRow parentRENDELES_SORRowByRENDELES_SOR_SZAMLA_TETEL, CIKKRow parentCIKKRowByCIKK_SZAMLA_TETEL, double MENNYISEG, double EGYSEGAR, double NETTO, double AFA, double BRUTTO, AFARow parentAFARowByAFA_SZAMLA_TETEL, string MEGJEGYZES, string CIKK_MEGNEVEZES, SZAMLA_FEJRow parentSZAMLA_FEJRowBySZAMLA_FEJ_SZAMLA_TETEL, double KALK_MENNYISEG, double KEDVEZMENY) {
                SZAMLA_TETELRow rowSZAMLA_TETELRow = ((SZAMLA_TETELRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        MENNYISEG,
                        EGYSEGAR,
                        NETTO,
                        AFA,
                        BRUTTO,
                        null,
                        MEGJEGYZES,
                        CIKK_MEGNEVEZES,
                        null,
                        KALK_MENNYISEG,
                        KEDVEZMENY};
                if ((parentRENDELES_SORRowByRENDELES_SOR_SZAMLA_TETEL != null)) {
                    columnValuesArray[1] = parentRENDELES_SORRowByRENDELES_SOR_SZAMLA_TETEL[0];
                }
                if ((parentCIKKRowByCIKK_SZAMLA_TETEL != null)) {
                    columnValuesArray[2] = parentCIKKRowByCIKK_SZAMLA_TETEL[0];
                }
                if ((parentAFARowByAFA_SZAMLA_TETEL != null)) {
                    columnValuesArray[8] = parentAFARowByAFA_SZAMLA_TETEL[0];
                }
                if ((parentSZAMLA_FEJRowBySZAMLA_FEJ_SZAMLA_TETEL != null)) {
                    columnValuesArray[11] = parentSZAMLA_FEJRowBySZAMLA_FEJ_SZAMLA_TETEL[0];
                }
                rowSZAMLA_TETELRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSZAMLA_TETELRow);
                return rowSZAMLA_TETELRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZAMLA_TETELRow FindByTETEL_ID(int TETEL_ID) {
                return ((SZAMLA_TETELRow)(this.Rows.Find(new object[] {
                            TETEL_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SZAMLA_TETELDataTable cln = ((SZAMLA_TETELDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SZAMLA_TETELDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTETEL_ID = base.Columns["TETEL_ID"];
                this.columnRENDELES_SOR_ID = base.Columns["RENDELES_SOR_ID"];
                this.columnCIKK_ID = base.Columns["CIKK_ID"];
                this.columnMENNYISEG = base.Columns["MENNYISEG"];
                this.columnEGYSEGAR = base.Columns["EGYSEGAR"];
                this.columnNETTO = base.Columns["NETTO"];
                this.columnAFA = base.Columns["AFA"];
                this.columnBRUTTO = base.Columns["BRUTTO"];
                this.columnAFA_KOD = base.Columns["AFA_KOD"];
                this.columnMEGJEGYZES = base.Columns["MEGJEGYZES"];
                this.columnCIKK_MEGNEVEZES = base.Columns["CIKK_MEGNEVEZES"];
                this.columnSZAMLA_FEJ_ID = base.Columns["SZAMLA_FEJ_ID"];
                this.columnKALK_MENNYISEG = base.Columns["KALK_MENNYISEG"];
                this.columnKEDVEZMENY = base.Columns["KEDVEZMENY"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTETEL_ID = new global::System.Data.DataColumn("TETEL_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTETEL_ID);
                this.columnRENDELES_SOR_ID = new global::System.Data.DataColumn("RENDELES_SOR_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRENDELES_SOR_ID);
                this.columnCIKK_ID = new global::System.Data.DataColumn("CIKK_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCIKK_ID);
                this.columnMENNYISEG = new global::System.Data.DataColumn("MENNYISEG", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMENNYISEG);
                this.columnEGYSEGAR = new global::System.Data.DataColumn("EGYSEGAR", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEGYSEGAR);
                this.columnNETTO = new global::System.Data.DataColumn("NETTO", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNETTO);
                this.columnAFA = new global::System.Data.DataColumn("AFA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAFA);
                this.columnBRUTTO = new global::System.Data.DataColumn("BRUTTO", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRUTTO);
                this.columnAFA_KOD = new global::System.Data.DataColumn("AFA_KOD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAFA_KOD);
                this.columnMEGJEGYZES = new global::System.Data.DataColumn("MEGJEGYZES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEGJEGYZES);
                this.columnCIKK_MEGNEVEZES = new global::System.Data.DataColumn("CIKK_MEGNEVEZES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCIKK_MEGNEVEZES);
                this.columnSZAMLA_FEJ_ID = new global::System.Data.DataColumn("SZAMLA_FEJ_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSZAMLA_FEJ_ID);
                this.columnKALK_MENNYISEG = new global::System.Data.DataColumn("KALK_MENNYISEG", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKALK_MENNYISEG);
                this.columnKEDVEZMENY = new global::System.Data.DataColumn("KEDVEZMENY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEDVEZMENY);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTETEL_ID}, true));
                this.columnTETEL_ID.AutoIncrement = true;
                this.columnTETEL_ID.AutoIncrementSeed = -1;
                this.columnTETEL_ID.AutoIncrementStep = -1;
                this.columnTETEL_ID.AllowDBNull = false;
                this.columnTETEL_ID.ReadOnly = true;
                this.columnTETEL_ID.Unique = true;
                this.columnRENDELES_SOR_ID.AllowDBNull = false;
                this.columnAFA_KOD.MaxLength = 2;
                this.columnMEGJEGYZES.MaxLength = 50;
                this.columnCIKK_MEGNEVEZES.MaxLength = 50;
                this.columnSZAMLA_FEJ_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZAMLA_TETELRow NewSZAMLA_TETELRow() {
                return ((SZAMLA_TETELRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SZAMLA_TETELRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SZAMLA_TETELRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SZAMLA_TETELRowChanged != null)) {
                    this.SZAMLA_TETELRowChanged(this, new SZAMLA_TETELRowChangeEvent(((SZAMLA_TETELRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SZAMLA_TETELRowChanging != null)) {
                    this.SZAMLA_TETELRowChanging(this, new SZAMLA_TETELRowChangeEvent(((SZAMLA_TETELRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SZAMLA_TETELRowDeleted != null)) {
                    this.SZAMLA_TETELRowDeleted(this, new SZAMLA_TETELRowChangeEvent(((SZAMLA_TETELRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SZAMLA_TETELRowDeleting != null)) {
                    this.SZAMLA_TETELRowDeleting(this, new SZAMLA_TETELRowChangeEvent(((SZAMLA_TETELRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSZAMLA_TETELRow(SZAMLA_TETELRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                eCafe_Szamlakor ds = new eCafe_Szamlakor();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SZAMLA_TETELDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AFARow : global::System.Data.DataRow {
            
            private AFADataTable tableAFA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AFARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAFA = ((AFADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AFA_KOD {
                get {
                    return ((string)(this[this.tableAFA.AFA_KODColumn]));
                }
                set {
                    this[this.tableAFA.AFA_KODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AFA_NEV {
                get {
                    return ((string)(this[this.tableAFA.AFA_NEVColumn]));
                }
                set {
                    this[this.tableAFA.AFA_NEVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AFA_ERTEK {
                get {
                    return ((double)(this[this.tableAFA.AFA_ERTEKColumn]));
                }
                set {
                    this[this.tableAFA.AFA_ERTEKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZAMLA_TETELRow[] GetSZAMLA_TETELRows() {
                if ((this.Table.ChildRelations["AFA_SZAMLA_TETEL"] == null)) {
                    return new SZAMLA_TETELRow[0];
                }
                else {
                    return ((SZAMLA_TETELRow[])(base.GetChildRows(this.Table.ChildRelations["AFA_SZAMLA_TETEL"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ASZTALRow : global::System.Data.DataRow {
            
            private ASZTALDataTable tableASZTAL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ASZTALRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableASZTAL = ((ASZTALDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ASZTAL_ID {
                get {
                    return ((int)(this[this.tableASZTAL.ASZTAL_IDColumn]));
                }
                set {
                    this[this.tableASZTAL.ASZTAL_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ASZTAL_SZAM {
                get {
                    return ((string)(this[this.tableASZTAL.ASZTAL_SZAMColumn]));
                }
                set {
                    this[this.tableASZTAL.ASZTAL_SZAMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ASZTAL_TIPUS_ID {
                get {
                    return ((int)(this[this.tableASZTAL.ASZTAL_TIPUS_IDColumn]));
                }
                set {
                    this[this.tableASZTAL.ASZTAL_TIPUS_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ASZTAL_POS_X {
                get {
                    try {
                        return ((int)(this[this.tableASZTAL.ASZTAL_POS_XColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ASZTAL_POS_X\' in table \'ASZTAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASZTAL.ASZTAL_POS_XColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ASZTAL_POS_Y {
                get {
                    try {
                        return ((int)(this[this.tableASZTAL.ASZTAL_POS_YColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ASZTAL_POS_Y\' in table \'ASZTAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASZTAL.ASZTAL_POS_YColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HELY_ID {
                get {
                    try {
                        return ((int)(this[this.tableASZTAL.HELY_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HELY_ID\' in table \'ASZTAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASZTAL.HELY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ASZTAL_ROTATE {
                get {
                    try {
                        return ((int)(this[this.tableASZTAL.ASZTAL_ROTATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ASZTAL_ROTATE\' in table \'ASZTAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASZTAL.ASZTAL_ROTATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AKTIV {
                get {
                    try {
                        return ((int)(this[this.tableASZTAL.AKTIVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AKTIV\' in table \'ASZTAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASZTAL.AKTIVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USEABLE {
                get {
                    try {
                        return ((int)(this[this.tableASZTAL.USEABLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USEABLE\' in table \'ASZTAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASZTAL.USEABLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NAME_VISIBLE {
                get {
                    try {
                        return ((int)(this[this.tableASZTAL.NAME_VISIBLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAME_VISIBLE\' in table \'ASZTAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASZTAL.NAME_VISIBLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsASZTAL_POS_XNull() {
                return this.IsNull(this.tableASZTAL.ASZTAL_POS_XColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetASZTAL_POS_XNull() {
                this[this.tableASZTAL.ASZTAL_POS_XColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsASZTAL_POS_YNull() {
                return this.IsNull(this.tableASZTAL.ASZTAL_POS_YColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetASZTAL_POS_YNull() {
                this[this.tableASZTAL.ASZTAL_POS_YColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHELY_IDNull() {
                return this.IsNull(this.tableASZTAL.HELY_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHELY_IDNull() {
                this[this.tableASZTAL.HELY_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsASZTAL_ROTATENull() {
                return this.IsNull(this.tableASZTAL.ASZTAL_ROTATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetASZTAL_ROTATENull() {
                this[this.tableASZTAL.ASZTAL_ROTATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAKTIVNull() {
                return this.IsNull(this.tableASZTAL.AKTIVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAKTIVNull() {
                this[this.tableASZTAL.AKTIVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSEABLENull() {
                return this.IsNull(this.tableASZTAL.USEABLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSEABLENull() {
                this[this.tableASZTAL.USEABLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAME_VISIBLENull() {
                return this.IsNull(this.tableASZTAL.NAME_VISIBLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAME_VISIBLENull() {
                this[this.tableASZTAL.NAME_VISIBLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RENDELES_FEJRow[] GetRENDELES_FEJRows() {
                if ((this.Table.ChildRelations["ASZTAL_RENDELES_FEJ"] == null)) {
                    return new RENDELES_FEJRow[0];
                }
                else {
                    return ((RENDELES_FEJRow[])(base.GetChildRows(this.Table.ChildRelations["ASZTAL_RENDELES_FEJ"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CIKKRow : global::System.Data.DataRow {
            
            private CIKKDataTable tableCIKK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CIKKRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCIKK = ((CIKKDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CIKK_ID {
                get {
                    return ((int)(this[this.tableCIKK.CIKK_IDColumn]));
                }
                set {
                    this[this.tableCIKK.CIKK_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MEGNEVEZES {
                get {
                    return ((string)(this[this.tableCIKK.MEGNEVEZESColumn]));
                }
                set {
                    this[this.tableCIKK.MEGNEVEZESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CIKK_TIPUS {
                get {
                    return ((int)(this[this.tableCIKK.CIKK_TIPUSColumn]));
                }
                set {
                    this[this.tableCIKK.CIKK_TIPUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CIKKCSOPORT_ID {
                get {
                    try {
                        return ((int)(this[this.tableCIKK.CIKKCSOPORT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CIKKCSOPORT_ID\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.CIKKCSOPORT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ERTEKESITES_TIPUSA {
                get {
                    try {
                        return ((string)(this[this.tableCIKK.ERTEKESITES_TIPUSAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ERTEKESITES_TIPUSA\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.ERTEKESITES_TIPUSAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MEGYS_ID {
                get {
                    try {
                        return ((string)(this[this.tableCIKK.MEGYS_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEGYS_ID\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.MEGYS_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OTHER_FILTER_ID {
                get {
                    try {
                        return ((int)(this[this.tableCIKK.OTHER_FILTER_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OTHER_FILTER_ID\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.OTHER_FILTER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DEFAULT_RAKTAR {
                get {
                    try {
                        return ((int)(this[this.tableCIKK.DEFAULT_RAKTARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEFAULT_RAKTAR\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.DEFAULT_RAKTARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SZJ_SZAM {
                get {
                    try {
                        return ((string)(this[this.tableCIKK.SZJ_SZAMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SZJ_SZAM\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.SZJ_SZAMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CIKKSZAM {
                get {
                    try {
                        return ((string)(this[this.tableCIKK.CIKKSZAMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CIKKSZAM\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.CIKKSZAMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EAN_KOD {
                get {
                    try {
                        return ((string)(this[this.tableCIKK.EAN_KODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EAN_KOD\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.EAN_KODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MINIMUM_KESZLET {
                get {
                    try {
                        return ((double)(this[this.tableCIKK.MINIMUM_KESZLETColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MINIMUM_KESZLET\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.MINIMUM_KESZLETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double OPTIMALIS_KESZLET {
                get {
                    try {
                        return ((double)(this[this.tableCIKK.OPTIMALIS_KESZLETColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPTIMALIS_KESZLET\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.OPTIMALIS_KESZLETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ELADASI_AR {
                get {
                    try {
                        return ((double)(this[this.tableCIKK.ELADASI_ARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ELADASI_AR\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.ELADASI_ARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HELYETTES_TERMEK {
                get {
                    try {
                        return ((int)(this[this.tableCIKK.HELYETTES_TERMEKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HELYETTES_TERMEK\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.HELYETTES_TERMEKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MAX_KEDVEZMENY_SZ {
                get {
                    try {
                        return ((double)(this[this.tableCIKK.MAX_KEDVEZMENY_SZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAX_KEDVEZMENY_SZ\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.MAX_KEDVEZMENY_SZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MAX_KEDVEZM_FT {
                get {
                    try {
                        return ((double)(this[this.tableCIKK.MAX_KEDVEZM_FTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAX_KEDVEZM_FT\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.MAX_KEDVEZM_FTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MEGJEGYZES {
                get {
                    try {
                        return ((string)(this[this.tableCIKK.MEGJEGYZESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEGJEGYZES\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.MEGJEGYZESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AKTIV {
                get {
                    try {
                        return ((int)(this[this.tableCIKK.AKTIVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AKTIV\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.AKTIVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GYORSKOD {
                get {
                    try {
                        return ((string)(this[this.tableCIKK.GYORSKODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GYORSKOD\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.GYORSKODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RECEPT_TEXT {
                get {
                    try {
                        return ((string)(this[this.tableCIKK.RECEPT_TEXTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RECEPT_TEXT\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.RECEPT_TEXTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SPEC_ZARAS {
                get {
                    try {
                        return ((int)(this[this.tableCIKK.SPEC_ZARASColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SPEC_ZARAS\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.SPEC_ZARASColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RECEPT_MODSZER {
                get {
                    try {
                        return ((string)(this[this.tableCIKK.RECEPT_MODSZERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RECEPT_MODSZER\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.RECEPT_MODSZERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RECEPT_ALK_TART {
                get {
                    try {
                        return ((string)(this[this.tableCIKK.RECEPT_ALK_TARTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RECEPT_ALK_TART\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.RECEPT_ALK_TARTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RECEPT_POHAR {
                get {
                    try {
                        return ((string)(this[this.tableCIKK.RECEPT_POHARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RECEPT_POHAR\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.RECEPT_POHARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ELADASI_AR_NETTO {
                get {
                    try {
                        return ((double)(this[this.tableCIKK.ELADASI_AR_NETTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ELADASI_AR_NETTO\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.ELADASI_AR_NETTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AUTO_MEGRENDELO {
                get {
                    try {
                        return ((int)(this[this.tableCIKK.AUTO_MEGRENDELOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AUTO_MEGRENDELO\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.AUTO_MEGRENDELOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int VIRTUAL {
                get {
                    try {
                        return ((int)(this[this.tableCIKK.VIRTUALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VIRTUAL\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.VIRTUALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CIKK_ROVID_NEV {
                get {
                    try {
                        return ((string)(this[this.tableCIKK.CIKK_ROVID_NEVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CIKK_ROVID_NEV\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.CIKK_ROVID_NEVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CIKK_TOP_LIST {
                get {
                    try {
                        return ((int)(this[this.tableCIKK.CIKK_TOP_LISTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CIKK_TOP_LIST\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.CIKK_TOP_LISTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CIKKCSOP_PREFER {
                get {
                    try {
                        return ((int)(this[this.tableCIKK.CIKKCSOP_PREFERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CIKKCSOP_PREFER\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.CIKKCSOP_PREFERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCIKKCSOPORT_IDNull() {
                return this.IsNull(this.tableCIKK.CIKKCSOPORT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCIKKCSOPORT_IDNull() {
                this[this.tableCIKK.CIKKCSOPORT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsERTEKESITES_TIPUSANull() {
                return this.IsNull(this.tableCIKK.ERTEKESITES_TIPUSAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetERTEKESITES_TIPUSANull() {
                this[this.tableCIKK.ERTEKESITES_TIPUSAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMEGYS_IDNull() {
                return this.IsNull(this.tableCIKK.MEGYS_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMEGYS_IDNull() {
                this[this.tableCIKK.MEGYS_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOTHER_FILTER_IDNull() {
                return this.IsNull(this.tableCIKK.OTHER_FILTER_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOTHER_FILTER_IDNull() {
                this[this.tableCIKK.OTHER_FILTER_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEFAULT_RAKTARNull() {
                return this.IsNull(this.tableCIKK.DEFAULT_RAKTARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEFAULT_RAKTARNull() {
                this[this.tableCIKK.DEFAULT_RAKTARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSZJ_SZAMNull() {
                return this.IsNull(this.tableCIKK.SZJ_SZAMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSZJ_SZAMNull() {
                this[this.tableCIKK.SZJ_SZAMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCIKKSZAMNull() {
                return this.IsNull(this.tableCIKK.CIKKSZAMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCIKKSZAMNull() {
                this[this.tableCIKK.CIKKSZAMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEAN_KODNull() {
                return this.IsNull(this.tableCIKK.EAN_KODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEAN_KODNull() {
                this[this.tableCIKK.EAN_KODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMINIMUM_KESZLETNull() {
                return this.IsNull(this.tableCIKK.MINIMUM_KESZLETColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMINIMUM_KESZLETNull() {
                this[this.tableCIKK.MINIMUM_KESZLETColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOPTIMALIS_KESZLETNull() {
                return this.IsNull(this.tableCIKK.OPTIMALIS_KESZLETColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOPTIMALIS_KESZLETNull() {
                this[this.tableCIKK.OPTIMALIS_KESZLETColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsELADASI_ARNull() {
                return this.IsNull(this.tableCIKK.ELADASI_ARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetELADASI_ARNull() {
                this[this.tableCIKK.ELADASI_ARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHELYETTES_TERMEKNull() {
                return this.IsNull(this.tableCIKK.HELYETTES_TERMEKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHELYETTES_TERMEKNull() {
                this[this.tableCIKK.HELYETTES_TERMEKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAX_KEDVEZMENY_SZNull() {
                return this.IsNull(this.tableCIKK.MAX_KEDVEZMENY_SZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAX_KEDVEZMENY_SZNull() {
                this[this.tableCIKK.MAX_KEDVEZMENY_SZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAX_KEDVEZM_FTNull() {
                return this.IsNull(this.tableCIKK.MAX_KEDVEZM_FTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAX_KEDVEZM_FTNull() {
                this[this.tableCIKK.MAX_KEDVEZM_FTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMEGJEGYZESNull() {
                return this.IsNull(this.tableCIKK.MEGJEGYZESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMEGJEGYZESNull() {
                this[this.tableCIKK.MEGJEGYZESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAKTIVNull() {
                return this.IsNull(this.tableCIKK.AKTIVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAKTIVNull() {
                this[this.tableCIKK.AKTIVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGYORSKODNull() {
                return this.IsNull(this.tableCIKK.GYORSKODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGYORSKODNull() {
                this[this.tableCIKK.GYORSKODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRECEPT_TEXTNull() {
                return this.IsNull(this.tableCIKK.RECEPT_TEXTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRECEPT_TEXTNull() {
                this[this.tableCIKK.RECEPT_TEXTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSPEC_ZARASNull() {
                return this.IsNull(this.tableCIKK.SPEC_ZARASColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSPEC_ZARASNull() {
                this[this.tableCIKK.SPEC_ZARASColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRECEPT_MODSZERNull() {
                return this.IsNull(this.tableCIKK.RECEPT_MODSZERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRECEPT_MODSZERNull() {
                this[this.tableCIKK.RECEPT_MODSZERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRECEPT_ALK_TARTNull() {
                return this.IsNull(this.tableCIKK.RECEPT_ALK_TARTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRECEPT_ALK_TARTNull() {
                this[this.tableCIKK.RECEPT_ALK_TARTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRECEPT_POHARNull() {
                return this.IsNull(this.tableCIKK.RECEPT_POHARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRECEPT_POHARNull() {
                this[this.tableCIKK.RECEPT_POHARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsELADASI_AR_NETTONull() {
                return this.IsNull(this.tableCIKK.ELADASI_AR_NETTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetELADASI_AR_NETTONull() {
                this[this.tableCIKK.ELADASI_AR_NETTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAUTO_MEGRENDELONull() {
                return this.IsNull(this.tableCIKK.AUTO_MEGRENDELOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAUTO_MEGRENDELONull() {
                this[this.tableCIKK.AUTO_MEGRENDELOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVIRTUALNull() {
                return this.IsNull(this.tableCIKK.VIRTUALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVIRTUALNull() {
                this[this.tableCIKK.VIRTUALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCIKK_ROVID_NEVNull() {
                return this.IsNull(this.tableCIKK.CIKK_ROVID_NEVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCIKK_ROVID_NEVNull() {
                this[this.tableCIKK.CIKK_ROVID_NEVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCIKK_TOP_LISTNull() {
                return this.IsNull(this.tableCIKK.CIKK_TOP_LISTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCIKK_TOP_LISTNull() {
                this[this.tableCIKK.CIKK_TOP_LISTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCIKKCSOP_PREFERNull() {
                return this.IsNull(this.tableCIKK.CIKKCSOP_PREFERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCIKKCSOP_PREFERNull() {
                this[this.tableCIKK.CIKKCSOP_PREFERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZAMLA_TETELRow[] GetSZAMLA_TETELRows() {
                if ((this.Table.ChildRelations["CIKK_SZAMLA_TETEL"] == null)) {
                    return new SZAMLA_TETELRow[0];
                }
                else {
                    return ((SZAMLA_TETELRow[])(base.GetChildRows(this.Table.ChildRelations["CIKK_SZAMLA_TETEL"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MEGYSRow : global::System.Data.DataRow {
            
            private MEGYSDataTable tableMEGYS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MEGYSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMEGYS = ((MEGYSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MEGYS_ID {
                get {
                    try {
                        return ((string)(this[this.tableMEGYS.MEGYS_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEGYS_ID\' in table \'MEGYS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEGYS.MEGYS_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MEGYS_MEGNEVEZES {
                get {
                    try {
                        return ((string)(this[this.tableMEGYS.MEGYS_MEGNEVEZESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEGYS_MEGNEVEZES\' in table \'MEGYS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEGYS.MEGYS_MEGNEVEZESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMEGYS_IDNull() {
                return this.IsNull(this.tableMEGYS.MEGYS_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMEGYS_IDNull() {
                this[this.tableMEGYS.MEGYS_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMEGYS_MEGNEVEZESNull() {
                return this.IsNull(this.tableMEGYS.MEGYS_MEGNEVEZESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMEGYS_MEGNEVEZESNull() {
                this[this.tableMEGYS.MEGYS_MEGNEVEZESColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PARTNERRow : global::System.Data.DataRow {
            
            private PARTNERDataTable tablePARTNER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PARTNERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePARTNER = ((PARTNERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PARTNER_ID {
                get {
                    return ((int)(this[this.tablePARTNER.PARTNER_IDColumn]));
                }
                set {
                    this[this.tablePARTNER.PARTNER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string P_TIPUS {
                get {
                    try {
                        return ((string)(this[this.tablePARTNER.P_TIPUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P_TIPUS\' in table \'PARTNER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePARTNER.P_TIPUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string P_NEV {
                get {
                    try {
                        return ((string)(this[this.tablePARTNER.P_NEVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P_NEV\' in table \'PARTNER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePARTNER.P_NEVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string P_NEV2 {
                get {
                    try {
                        return ((string)(this[this.tablePARTNER.P_NEV2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P_NEV2\' in table \'PARTNER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePARTNER.P_NEV2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string P_NEV3 {
                get {
                    try {
                        return ((string)(this[this.tablePARTNER.P_NEV3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P_NEV3\' in table \'PARTNER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePARTNER.P_NEV3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AKTIV {
                get {
                    try {
                        return ((int)(this[this.tablePARTNER.AKTIVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AKTIV\' in table \'PARTNER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePARTNER.AKTIVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP_TIPUSNull() {
                return this.IsNull(this.tablePARTNER.P_TIPUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP_TIPUSNull() {
                this[this.tablePARTNER.P_TIPUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP_NEVNull() {
                return this.IsNull(this.tablePARTNER.P_NEVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP_NEVNull() {
                this[this.tablePARTNER.P_NEVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP_NEV2Null() {
                return this.IsNull(this.tablePARTNER.P_NEV2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP_NEV2Null() {
                this[this.tablePARTNER.P_NEV2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP_NEV3Null() {
                return this.IsNull(this.tablePARTNER.P_NEV3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP_NEV3Null() {
                this[this.tablePARTNER.P_NEV3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAKTIVNull() {
                return this.IsNull(this.tablePARTNER.AKTIVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAKTIVNull() {
                this[this.tablePARTNER.AKTIVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZAMLA_FEJRow[] GetSZAMLA_FEJRows() {
                if ((this.Table.ChildRelations["PARTNER_SZAMLA_FEJ"] == null)) {
                    return new SZAMLA_FEJRow[0];
                }
                else {
                    return ((SZAMLA_FEJRow[])(base.GetChildRows(this.Table.ChildRelations["PARTNER_SZAMLA_FEJ"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RENDELES_FEJRow : global::System.Data.DataRow {
            
            private RENDELES_FEJDataTable tableRENDELES_FEJ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RENDELES_FEJRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRENDELES_FEJ = ((RENDELES_FEJDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RENDELES_ID {
                get {
                    return ((int)(this[this.tableRENDELES_FEJ.RENDELES_IDColumn]));
                }
                set {
                    this[this.tableRENDELES_FEJ.RENDELES_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ASZTAL_ID {
                get {
                    return ((int)(this[this.tableRENDELES_FEJ.ASZTAL_IDColumn]));
                }
                set {
                    this[this.tableRENDELES_FEJ.ASZTAL_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATUM {
                get {
                    return ((global::System.DateTime)(this[this.tableRENDELES_FEJ.DATUMColumn]));
                }
                set {
                    this[this.tableRENDELES_FEJ.DATUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PARTNER_ID {
                get {
                    try {
                        return ((int)(this[this.tableRENDELES_FEJ.PARTNER_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PARTNER_ID\' in table \'RENDELES_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRENDELES_FEJ.PARTNER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FIZETVE {
                get {
                    try {
                        return ((int)(this[this.tableRENDELES_FEJ.FIZETVEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FIZETVE\' in table \'RENDELES_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRENDELES_FEJ.FIZETVEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AKTIV {
                get {
                    try {
                        return ((int)(this[this.tableRENDELES_FEJ.AKTIVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AKTIV\' in table \'RENDELES_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRENDELES_FEJ.AKTIVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USER_ID {
                get {
                    try {
                        return ((int)(this[this.tableRENDELES_FEJ.USER_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USER_ID\' in table \'RENDELES_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRENDELES_FEJ.USER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EV {
                get {
                    try {
                        return ((int)(this[this.tableRENDELES_FEJ.EVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EV\' in table \'RENDELES_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRENDELES_FEJ.EVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HO {
                get {
                    try {
                        return ((int)(this[this.tableRENDELES_FEJ.HOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HO\' in table \'RENDELES_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRENDELES_FEJ.HOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NAP {
                get {
                    try {
                        return ((int)(this[this.tableRENDELES_FEJ.NAPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAP\' in table \'RENDELES_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRENDELES_FEJ.NAPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double KEDVEZMENY {
                get {
                    try {
                        return ((double)(this[this.tableRENDELES_FEJ.KEDVEZMENYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KEDVEZMENY\' in table \'RENDELES_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRENDELES_FEJ.KEDVEZMENYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ASZTALRow ASZTALRow {
                get {
                    return ((ASZTALRow)(this.GetParentRow(this.Table.ParentRelations["ASZTAL_RENDELES_FEJ"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ASZTAL_RENDELES_FEJ"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPARTNER_IDNull() {
                return this.IsNull(this.tableRENDELES_FEJ.PARTNER_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPARTNER_IDNull() {
                this[this.tableRENDELES_FEJ.PARTNER_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFIZETVENull() {
                return this.IsNull(this.tableRENDELES_FEJ.FIZETVEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFIZETVENull() {
                this[this.tableRENDELES_FEJ.FIZETVEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAKTIVNull() {
                return this.IsNull(this.tableRENDELES_FEJ.AKTIVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAKTIVNull() {
                this[this.tableRENDELES_FEJ.AKTIVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSER_IDNull() {
                return this.IsNull(this.tableRENDELES_FEJ.USER_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSER_IDNull() {
                this[this.tableRENDELES_FEJ.USER_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEVNull() {
                return this.IsNull(this.tableRENDELES_FEJ.EVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEVNull() {
                this[this.tableRENDELES_FEJ.EVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHONull() {
                return this.IsNull(this.tableRENDELES_FEJ.HOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHONull() {
                this[this.tableRENDELES_FEJ.HOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAPNull() {
                return this.IsNull(this.tableRENDELES_FEJ.NAPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAPNull() {
                this[this.tableRENDELES_FEJ.NAPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKEDVEZMENYNull() {
                return this.IsNull(this.tableRENDELES_FEJ.KEDVEZMENYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKEDVEZMENYNull() {
                this[this.tableRENDELES_FEJ.KEDVEZMENYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RENDELES_SORRow[] GetRENDELES_SORRows() {
                if ((this.Table.ChildRelations["FK_RENDELES_SOR_RENDELES_SOR"] == null)) {
                    return new RENDELES_SORRow[0];
                }
                else {
                    return ((RENDELES_SORRow[])(base.GetChildRows(this.Table.ChildRelations["FK_RENDELES_SOR_RENDELES_SOR"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RENDELES_SORRow : global::System.Data.DataRow {
            
            private RENDELES_SORDataTable tableRENDELES_SOR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RENDELES_SORRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRENDELES_SOR = ((RENDELES_SORDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SOR_ID {
                get {
                    return ((int)(this[this.tableRENDELES_SOR.SOR_IDColumn]));
                }
                set {
                    this[this.tableRENDELES_SOR.SOR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RENDELES_ID {
                get {
                    return ((int)(this[this.tableRENDELES_SOR.RENDELES_IDColumn]));
                }
                set {
                    this[this.tableRENDELES_SOR.RENDELES_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CIKK_ID {
                get {
                    return ((int)(this[this.tableRENDELES_SOR.CIKK_IDColumn]));
                }
                set {
                    this[this.tableRENDELES_SOR.CIKK_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DB {
                get {
                    return ((double)(this[this.tableRENDELES_SOR.DBColumn]));
                }
                set {
                    this[this.tableRENDELES_SOR.DBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATUM {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRENDELES_SOR.DATUMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATUM\' in table \'RENDELES_SOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRENDELES_SOR.DATUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ERTEK {
                get {
                    try {
                        return ((double)(this[this.tableRENDELES_SOR.ERTEKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ERTEK\' in table \'RENDELES_SOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRENDELES_SOR.ERTEKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DELETED {
                get {
                    return ((int)(this[this.tableRENDELES_SOR.DELETEDColumn]));
                }
                set {
                    this[this.tableRENDELES_SOR.DELETEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RAKTAR_ID {
                get {
                    try {
                        return ((int)(this[this.tableRENDELES_SOR.RAKTAR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RAKTAR_ID\' in table \'RENDELES_SOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRENDELES_SOR.RAKTAR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FIZETVE {
                get {
                    try {
                        return ((int)(this[this.tableRENDELES_SOR.FIZETVEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FIZETVE\' in table \'RENDELES_SOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRENDELES_SOR.FIZETVEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CANCELED {
                get {
                    try {
                        return ((int)(this[this.tableRENDELES_SOR.CANCELEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CANCELED\' in table \'RENDELES_SOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRENDELES_SOR.CANCELEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MODIFIED_USER {
                get {
                    try {
                        return ((int)(this[this.tableRENDELES_SOR.MODIFIED_USERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MODIFIED_USER\' in table \'RENDELES_SOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRENDELES_SOR.MODIFIED_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double NETTO_ERTEK {
                get {
                    try {
                        return ((double)(this[this.tableRENDELES_SOR.NETTO_ERTEKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NETTO_ERTEK\' in table \'RENDELES_SOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRENDELES_SOR.NETTO_ERTEKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AFA_ERTEK {
                get {
                    try {
                        return ((double)(this[this.tableRENDELES_SOR.AFA_ERTEKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AFA_ERTEK\' in table \'RENDELES_SOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRENDELES_SOR.AFA_ERTEKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LIT_KISZ_ID {
                get {
                    try {
                        return ((int)(this[this.tableRENDELES_SOR.LIT_KISZ_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LIT_KISZ_ID\' in table \'RENDELES_SOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRENDELES_SOR.LIT_KISZ_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double KEDVEZMENY {
                get {
                    try {
                        return ((double)(this[this.tableRENDELES_SOR.KEDVEZMENYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KEDVEZMENY\' in table \'RENDELES_SOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRENDELES_SOR.KEDVEZMENYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int KEDV_PARTNER_ID {
                get {
                    try {
                        return ((int)(this[this.tableRENDELES_SOR.KEDV_PARTNER_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KEDV_PARTNER_ID\' in table \'RENDELES_SOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRENDELES_SOR.KEDV_PARTNER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RENDELES_FEJRow RENDELES_FEJRow {
                get {
                    return ((RENDELES_FEJRow)(this.GetParentRow(this.Table.ParentRelations["FK_RENDELES_SOR_RENDELES_SOR"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_RENDELES_SOR_RENDELES_SOR"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATUMNull() {
                return this.IsNull(this.tableRENDELES_SOR.DATUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATUMNull() {
                this[this.tableRENDELES_SOR.DATUMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsERTEKNull() {
                return this.IsNull(this.tableRENDELES_SOR.ERTEKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetERTEKNull() {
                this[this.tableRENDELES_SOR.ERTEKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRAKTAR_IDNull() {
                return this.IsNull(this.tableRENDELES_SOR.RAKTAR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRAKTAR_IDNull() {
                this[this.tableRENDELES_SOR.RAKTAR_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFIZETVENull() {
                return this.IsNull(this.tableRENDELES_SOR.FIZETVEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFIZETVENull() {
                this[this.tableRENDELES_SOR.FIZETVEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCANCELEDNull() {
                return this.IsNull(this.tableRENDELES_SOR.CANCELEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCANCELEDNull() {
                this[this.tableRENDELES_SOR.CANCELEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_USERNull() {
                return this.IsNull(this.tableRENDELES_SOR.MODIFIED_USERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_USERNull() {
                this[this.tableRENDELES_SOR.MODIFIED_USERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNETTO_ERTEKNull() {
                return this.IsNull(this.tableRENDELES_SOR.NETTO_ERTEKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNETTO_ERTEKNull() {
                this[this.tableRENDELES_SOR.NETTO_ERTEKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAFA_ERTEKNull() {
                return this.IsNull(this.tableRENDELES_SOR.AFA_ERTEKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAFA_ERTEKNull() {
                this[this.tableRENDELES_SOR.AFA_ERTEKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLIT_KISZ_IDNull() {
                return this.IsNull(this.tableRENDELES_SOR.LIT_KISZ_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLIT_KISZ_IDNull() {
                this[this.tableRENDELES_SOR.LIT_KISZ_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKEDVEZMENYNull() {
                return this.IsNull(this.tableRENDELES_SOR.KEDVEZMENYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKEDVEZMENYNull() {
                this[this.tableRENDELES_SOR.KEDVEZMENYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKEDV_PARTNER_IDNull() {
                return this.IsNull(this.tableRENDELES_SOR.KEDV_PARTNER_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKEDV_PARTNER_IDNull() {
                this[this.tableRENDELES_SOR.KEDV_PARTNER_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZAMLA_TETELRow[] GetSZAMLA_TETELRows() {
                if ((this.Table.ChildRelations["RENDELES_SOR_SZAMLA_TETEL"] == null)) {
                    return new SZAMLA_TETELRow[0];
                }
                else {
                    return ((SZAMLA_TETELRow[])(base.GetChildRows(this.Table.ChildRelations["RENDELES_SOR_SZAMLA_TETEL"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SZAMLA_FEJRow : global::System.Data.DataRow {
            
            private SZAMLA_FEJDataTable tableSZAMLA_FEJ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SZAMLA_FEJRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSZAMLA_FEJ = ((SZAMLA_FEJDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SZAMLA_FEJ_ID {
                get {
                    return ((int)(this[this.tableSZAMLA_FEJ.SZAMLA_FEJ_IDColumn]));
                }
                set {
                    this[this.tableSZAMLA_FEJ.SZAMLA_FEJ_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SZAMLA_SORSZAM {
                get {
                    try {
                        return ((string)(this[this.tableSZAMLA_FEJ.SZAMLA_SORSZAMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SZAMLA_SORSZAM\' in table \'SZAMLA_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_FEJ.SZAMLA_SORSZAMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PARTNER_ID {
                get {
                    try {
                        return ((int)(this[this.tableSZAMLA_FEJ.PARTNER_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PARTNER_ID\' in table \'SZAMLA_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_FEJ.PARTNER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RENDELES_ID {
                get {
                    try {
                        return ((int)(this[this.tableSZAMLA_FEJ.RENDELES_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RENDELES_ID\' in table \'SZAMLA_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_FEJ.RENDELES_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double OSSZESEN_NETTO {
                get {
                    try {
                        return ((double)(this[this.tableSZAMLA_FEJ.OSSZESEN_NETTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OSSZESEN_NETTO\' in table \'SZAMLA_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_FEJ.OSSZESEN_NETTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double OSSZESEN_BRUTTO {
                get {
                    try {
                        return ((double)(this[this.tableSZAMLA_FEJ.OSSZESEN_BRUTTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OSSZESEN_BRUTTO\' in table \'SZAMLA_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_FEJ.OSSZESEN_BRUTTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double OSSZESEN_AFA {
                get {
                    try {
                        return ((double)(this[this.tableSZAMLA_FEJ.OSSZESEN_AFAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OSSZESEN_AFA\' in table \'SZAMLA_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_FEJ.OSSZESEN_AFAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double KEDVEZMENY {
                get {
                    try {
                        return ((double)(this[this.tableSZAMLA_FEJ.KEDVEZMENYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KEDVEZMENY\' in table \'SZAMLA_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_FEJ.KEDVEZMENYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FIZETETT_OSSZEG {
                get {
                    try {
                        return ((double)(this[this.tableSZAMLA_FEJ.FIZETETT_OSSZEGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FIZETETT_OSSZEG\' in table \'SZAMLA_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_FEJ.FIZETETT_OSSZEGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FIZETESI_MOD {
                get {
                    try {
                        return ((int)(this[this.tableSZAMLA_FEJ.FIZETESI_MODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FIZETESI_MOD\' in table \'SZAMLA_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_FEJ.FIZETESI_MODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SZAMLA_DATUMA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSZAMLA_FEJ.SZAMLA_DATUMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SZAMLA_DATUMA\' in table \'SZAMLA_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_FEJ.SZAMLA_DATUMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EV {
                get {
                    return ((int)(this[this.tableSZAMLA_FEJ.EVColumn]));
                }
                set {
                    this[this.tableSZAMLA_FEJ.EVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HO {
                get {
                    return ((int)(this[this.tableSZAMLA_FEJ.HOColumn]));
                }
                set {
                    this[this.tableSZAMLA_FEJ.HOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NAP {
                get {
                    return ((int)(this[this.tableSZAMLA_FEJ.NAPColumn]));
                }
                set {
                    this[this.tableSZAMLA_FEJ.NAPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USER_ID {
                get {
                    try {
                        return ((int)(this[this.tableSZAMLA_FEJ.USER_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USER_ID\' in table \'SZAMLA_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_FEJ.USER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string P_NEV {
                get {
                    try {
                        return ((string)(this[this.tableSZAMLA_FEJ.P_NEVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P_NEV\' in table \'SZAMLA_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_FEJ.P_NEVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string P_NEV2 {
                get {
                    try {
                        return ((string)(this[this.tableSZAMLA_FEJ.P_NEV2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P_NEV2\' in table \'SZAMLA_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_FEJ.P_NEV2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PARTNERRow PARTNERRow {
                get {
                    return ((PARTNERRow)(this.GetParentRow(this.Table.ParentRelations["PARTNER_SZAMLA_FEJ"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["PARTNER_SZAMLA_FEJ"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSZAMLA_SORSZAMNull() {
                return this.IsNull(this.tableSZAMLA_FEJ.SZAMLA_SORSZAMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSZAMLA_SORSZAMNull() {
                this[this.tableSZAMLA_FEJ.SZAMLA_SORSZAMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPARTNER_IDNull() {
                return this.IsNull(this.tableSZAMLA_FEJ.PARTNER_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPARTNER_IDNull() {
                this[this.tableSZAMLA_FEJ.PARTNER_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRENDELES_IDNull() {
                return this.IsNull(this.tableSZAMLA_FEJ.RENDELES_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRENDELES_IDNull() {
                this[this.tableSZAMLA_FEJ.RENDELES_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSSZESEN_NETTONull() {
                return this.IsNull(this.tableSZAMLA_FEJ.OSSZESEN_NETTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSSZESEN_NETTONull() {
                this[this.tableSZAMLA_FEJ.OSSZESEN_NETTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSSZESEN_BRUTTONull() {
                return this.IsNull(this.tableSZAMLA_FEJ.OSSZESEN_BRUTTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSSZESEN_BRUTTONull() {
                this[this.tableSZAMLA_FEJ.OSSZESEN_BRUTTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSSZESEN_AFANull() {
                return this.IsNull(this.tableSZAMLA_FEJ.OSSZESEN_AFAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSSZESEN_AFANull() {
                this[this.tableSZAMLA_FEJ.OSSZESEN_AFAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKEDVEZMENYNull() {
                return this.IsNull(this.tableSZAMLA_FEJ.KEDVEZMENYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKEDVEZMENYNull() {
                this[this.tableSZAMLA_FEJ.KEDVEZMENYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFIZETETT_OSSZEGNull() {
                return this.IsNull(this.tableSZAMLA_FEJ.FIZETETT_OSSZEGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFIZETETT_OSSZEGNull() {
                this[this.tableSZAMLA_FEJ.FIZETETT_OSSZEGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFIZETESI_MODNull() {
                return this.IsNull(this.tableSZAMLA_FEJ.FIZETESI_MODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFIZETESI_MODNull() {
                this[this.tableSZAMLA_FEJ.FIZETESI_MODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSZAMLA_DATUMANull() {
                return this.IsNull(this.tableSZAMLA_FEJ.SZAMLA_DATUMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSZAMLA_DATUMANull() {
                this[this.tableSZAMLA_FEJ.SZAMLA_DATUMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSER_IDNull() {
                return this.IsNull(this.tableSZAMLA_FEJ.USER_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSER_IDNull() {
                this[this.tableSZAMLA_FEJ.USER_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP_NEVNull() {
                return this.IsNull(this.tableSZAMLA_FEJ.P_NEVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP_NEVNull() {
                this[this.tableSZAMLA_FEJ.P_NEVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP_NEV2Null() {
                return this.IsNull(this.tableSZAMLA_FEJ.P_NEV2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP_NEV2Null() {
                this[this.tableSZAMLA_FEJ.P_NEV2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZAMLA_TETELRow[] GetSZAMLA_TETELRows() {
                if ((this.Table.ChildRelations["SZAMLA_FEJ_SZAMLA_TETEL"] == null)) {
                    return new SZAMLA_TETELRow[0];
                }
                else {
                    return ((SZAMLA_TETELRow[])(base.GetChildRows(this.Table.ChildRelations["SZAMLA_FEJ_SZAMLA_TETEL"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SZAMLA_TETELRow : global::System.Data.DataRow {
            
            private SZAMLA_TETELDataTable tableSZAMLA_TETEL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SZAMLA_TETELRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSZAMLA_TETEL = ((SZAMLA_TETELDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TETEL_ID {
                get {
                    return ((int)(this[this.tableSZAMLA_TETEL.TETEL_IDColumn]));
                }
                set {
                    this[this.tableSZAMLA_TETEL.TETEL_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RENDELES_SOR_ID {
                get {
                    return ((int)(this[this.tableSZAMLA_TETEL.RENDELES_SOR_IDColumn]));
                }
                set {
                    this[this.tableSZAMLA_TETEL.RENDELES_SOR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CIKK_ID {
                get {
                    try {
                        return ((int)(this[this.tableSZAMLA_TETEL.CIKK_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CIKK_ID\' in table \'SZAMLA_TETEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_TETEL.CIKK_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MENNYISEG {
                get {
                    try {
                        return ((double)(this[this.tableSZAMLA_TETEL.MENNYISEGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MENNYISEG\' in table \'SZAMLA_TETEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_TETEL.MENNYISEGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double EGYSEGAR {
                get {
                    try {
                        return ((double)(this[this.tableSZAMLA_TETEL.EGYSEGARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EGYSEGAR\' in table \'SZAMLA_TETEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_TETEL.EGYSEGARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double NETTO {
                get {
                    try {
                        return ((double)(this[this.tableSZAMLA_TETEL.NETTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NETTO\' in table \'SZAMLA_TETEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_TETEL.NETTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AFA {
                get {
                    try {
                        return ((double)(this[this.tableSZAMLA_TETEL.AFAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AFA\' in table \'SZAMLA_TETEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_TETEL.AFAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BRUTTO {
                get {
                    try {
                        return ((double)(this[this.tableSZAMLA_TETEL.BRUTTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BRUTTO\' in table \'SZAMLA_TETEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_TETEL.BRUTTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AFA_KOD {
                get {
                    try {
                        return ((string)(this[this.tableSZAMLA_TETEL.AFA_KODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AFA_KOD\' in table \'SZAMLA_TETEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_TETEL.AFA_KODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MEGJEGYZES {
                get {
                    try {
                        return ((string)(this[this.tableSZAMLA_TETEL.MEGJEGYZESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEGJEGYZES\' in table \'SZAMLA_TETEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_TETEL.MEGJEGYZESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CIKK_MEGNEVEZES {
                get {
                    try {
                        return ((string)(this[this.tableSZAMLA_TETEL.CIKK_MEGNEVEZESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CIKK_MEGNEVEZES\' in table \'SZAMLA_TETEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_TETEL.CIKK_MEGNEVEZESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SZAMLA_FEJ_ID {
                get {
                    return ((int)(this[this.tableSZAMLA_TETEL.SZAMLA_FEJ_IDColumn]));
                }
                set {
                    this[this.tableSZAMLA_TETEL.SZAMLA_FEJ_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double KALK_MENNYISEG {
                get {
                    try {
                        return ((double)(this[this.tableSZAMLA_TETEL.KALK_MENNYISEGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KALK_MENNYISEG\' in table \'SZAMLA_TETEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_TETEL.KALK_MENNYISEGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double KEDVEZMENY {
                get {
                    try {
                        return ((double)(this[this.tableSZAMLA_TETEL.KEDVEZMENYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KEDVEZMENY\' in table \'SZAMLA_TETEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZAMLA_TETEL.KEDVEZMENYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZAMLA_FEJRow SZAMLA_FEJRow {
                get {
                    return ((SZAMLA_FEJRow)(this.GetParentRow(this.Table.ParentRelations["SZAMLA_FEJ_SZAMLA_TETEL"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SZAMLA_FEJ_SZAMLA_TETEL"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CIKKRow CIKKRow {
                get {
                    return ((CIKKRow)(this.GetParentRow(this.Table.ParentRelations["CIKK_SZAMLA_TETEL"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["CIKK_SZAMLA_TETEL"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AFARow AFARow {
                get {
                    return ((AFARow)(this.GetParentRow(this.Table.ParentRelations["AFA_SZAMLA_TETEL"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["AFA_SZAMLA_TETEL"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RENDELES_SORRow RENDELES_SORRow {
                get {
                    return ((RENDELES_SORRow)(this.GetParentRow(this.Table.ParentRelations["RENDELES_SOR_SZAMLA_TETEL"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["RENDELES_SOR_SZAMLA_TETEL"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCIKK_IDNull() {
                return this.IsNull(this.tableSZAMLA_TETEL.CIKK_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCIKK_IDNull() {
                this[this.tableSZAMLA_TETEL.CIKK_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMENNYISEGNull() {
                return this.IsNull(this.tableSZAMLA_TETEL.MENNYISEGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMENNYISEGNull() {
                this[this.tableSZAMLA_TETEL.MENNYISEGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEGYSEGARNull() {
                return this.IsNull(this.tableSZAMLA_TETEL.EGYSEGARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEGYSEGARNull() {
                this[this.tableSZAMLA_TETEL.EGYSEGARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNETTONull() {
                return this.IsNull(this.tableSZAMLA_TETEL.NETTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNETTONull() {
                this[this.tableSZAMLA_TETEL.NETTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAFANull() {
                return this.IsNull(this.tableSZAMLA_TETEL.AFAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAFANull() {
                this[this.tableSZAMLA_TETEL.AFAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRUTTONull() {
                return this.IsNull(this.tableSZAMLA_TETEL.BRUTTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRUTTONull() {
                this[this.tableSZAMLA_TETEL.BRUTTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAFA_KODNull() {
                return this.IsNull(this.tableSZAMLA_TETEL.AFA_KODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAFA_KODNull() {
                this[this.tableSZAMLA_TETEL.AFA_KODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMEGJEGYZESNull() {
                return this.IsNull(this.tableSZAMLA_TETEL.MEGJEGYZESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMEGJEGYZESNull() {
                this[this.tableSZAMLA_TETEL.MEGJEGYZESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCIKK_MEGNEVEZESNull() {
                return this.IsNull(this.tableSZAMLA_TETEL.CIKK_MEGNEVEZESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCIKK_MEGNEVEZESNull() {
                this[this.tableSZAMLA_TETEL.CIKK_MEGNEVEZESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKALK_MENNYISEGNull() {
                return this.IsNull(this.tableSZAMLA_TETEL.KALK_MENNYISEGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKALK_MENNYISEGNull() {
                this[this.tableSZAMLA_TETEL.KALK_MENNYISEGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKEDVEZMENYNull() {
                return this.IsNull(this.tableSZAMLA_TETEL.KEDVEZMENYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKEDVEZMENYNull() {
                this[this.tableSZAMLA_TETEL.KEDVEZMENYColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AFARowChangeEvent : global::System.EventArgs {
            
            private AFARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AFARowChangeEvent(AFARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AFARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ASZTALRowChangeEvent : global::System.EventArgs {
            
            private ASZTALRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ASZTALRowChangeEvent(ASZTALRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ASZTALRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CIKKRowChangeEvent : global::System.EventArgs {
            
            private CIKKRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CIKKRowChangeEvent(CIKKRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CIKKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MEGYSRowChangeEvent : global::System.EventArgs {
            
            private MEGYSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEGYSRowChangeEvent(MEGYSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEGYSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PARTNERRowChangeEvent : global::System.EventArgs {
            
            private PARTNERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PARTNERRowChangeEvent(PARTNERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PARTNERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RENDELES_FEJRowChangeEvent : global::System.EventArgs {
            
            private RENDELES_FEJRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RENDELES_FEJRowChangeEvent(RENDELES_FEJRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RENDELES_FEJRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RENDELES_SORRowChangeEvent : global::System.EventArgs {
            
            private RENDELES_SORRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RENDELES_SORRowChangeEvent(RENDELES_SORRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RENDELES_SORRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SZAMLA_FEJRowChangeEvent : global::System.EventArgs {
            
            private SZAMLA_FEJRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZAMLA_FEJRowChangeEvent(SZAMLA_FEJRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZAMLA_FEJRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SZAMLA_TETELRowChangeEvent : global::System.EventArgs {
            
            private SZAMLA_TETELRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZAMLA_TETELRowChangeEvent(SZAMLA_TETELRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZAMLA_TETELRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace e_Cafe.SQL.DataSets.eCafe_SzamlakorTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AFATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AFATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "AFA";
            tableMapping.ColumnMappings.Add("AFA_KOD", "AFA_KOD");
            tableMapping.ColumnMappings.Add("AFA_NEV", "AFA_NEV");
            tableMapping.ColumnMappings.Add("AFA_ERTEK", "AFA_ERTEK");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[AFA] WHERE (([AFA_KOD] = @Original_AFA_KOD) AND ([AFA_NEV] = @" +
                "Original_AFA_NEV) AND ([AFA_ERTEK] = @Original_AFA_ERTEK))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AFA_KOD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA_KOD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AFA_NEV", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA_NEV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AFA_ERTEK", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA_ERTEK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[AFA] ([AFA_KOD], [AFA_NEV], [AFA_ERTEK]) VALUES (@AFA_KOD, @AF" +
                "A_NEV, @AFA_ERTEK);\r\nSELECT AFA_KOD, AFA_NEV, AFA_ERTEK FROM AFA WHERE (AFA_KOD " +
                "= @AFA_KOD)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AFA_KOD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA_KOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AFA_NEV", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA_NEV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AFA_ERTEK", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA_ERTEK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[AFA] SET [AFA_KOD] = @AFA_KOD, [AFA_NEV] = @AFA_NEV, [AFA_ERTEK] = @AFA_ERTEK WHERE (([AFA_KOD] = @Original_AFA_KOD) AND ([AFA_NEV] = @Original_AFA_NEV) AND ([AFA_ERTEK] = @Original_AFA_ERTEK));
SELECT AFA_KOD, AFA_NEV, AFA_ERTEK FROM AFA WHERE (AFA_KOD = @AFA_KOD)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AFA_KOD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA_KOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AFA_NEV", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA_NEV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AFA_ERTEK", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA_ERTEK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AFA_KOD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA_KOD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AFA_NEV", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA_NEV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AFA_ERTEK", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA_ERTEK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::e_Cafe.Properties.Settings.Default.ECAFEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT AFA_KOD, AFA_NEV, AFA_ERTEK FROM dbo.AFA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(eCafe_Szamlakor.AFADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual eCafe_Szamlakor.AFADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            eCafe_Szamlakor.AFADataTable dataTable = new eCafe_Szamlakor.AFADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(eCafe_Szamlakor.AFADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(eCafe_Szamlakor dataSet) {
            return this.Adapter.Update(dataSet, "AFA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_AFA_KOD, string Original_AFA_NEV, double Original_AFA_ERTEK) {
            if ((Original_AFA_KOD == null)) {
                throw new global::System.ArgumentNullException("Original_AFA_KOD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_AFA_KOD));
            }
            if ((Original_AFA_NEV == null)) {
                throw new global::System.ArgumentNullException("Original_AFA_NEV");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_AFA_NEV));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((double)(Original_AFA_ERTEK));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string AFA_KOD, string AFA_NEV, double AFA_ERTEK) {
            if ((AFA_KOD == null)) {
                throw new global::System.ArgumentNullException("AFA_KOD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(AFA_KOD));
            }
            if ((AFA_NEV == null)) {
                throw new global::System.ArgumentNullException("AFA_NEV");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(AFA_NEV));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((double)(AFA_ERTEK));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string AFA_KOD, string AFA_NEV, double AFA_ERTEK, string Original_AFA_KOD, string Original_AFA_NEV, double Original_AFA_ERTEK) {
            if ((AFA_KOD == null)) {
                throw new global::System.ArgumentNullException("AFA_KOD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(AFA_KOD));
            }
            if ((AFA_NEV == null)) {
                throw new global::System.ArgumentNullException("AFA_NEV");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(AFA_NEV));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(AFA_ERTEK));
            if ((Original_AFA_KOD == null)) {
                throw new global::System.ArgumentNullException("Original_AFA_KOD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_AFA_KOD));
            }
            if ((Original_AFA_NEV == null)) {
                throw new global::System.ArgumentNullException("Original_AFA_NEV");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_AFA_NEV));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(Original_AFA_ERTEK));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string AFA_NEV, double AFA_ERTEK, string Original_AFA_KOD, string Original_AFA_NEV, double Original_AFA_ERTEK) {
            return this.Update(Original_AFA_KOD, AFA_NEV, AFA_ERTEK, Original_AFA_KOD, Original_AFA_NEV, Original_AFA_ERTEK);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ASZTALTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ASZTALTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ASZTAL";
            tableMapping.ColumnMappings.Add("ASZTAL_ID", "ASZTAL_ID");
            tableMapping.ColumnMappings.Add("ASZTAL_SZAM", "ASZTAL_SZAM");
            tableMapping.ColumnMappings.Add("ASZTAL_TIPUS_ID", "ASZTAL_TIPUS_ID");
            tableMapping.ColumnMappings.Add("ASZTAL_POS_X", "ASZTAL_POS_X");
            tableMapping.ColumnMappings.Add("ASZTAL_POS_Y", "ASZTAL_POS_Y");
            tableMapping.ColumnMappings.Add("HELY_ID", "HELY_ID");
            tableMapping.ColumnMappings.Add("ASZTAL_ROTATE", "ASZTAL_ROTATE");
            tableMapping.ColumnMappings.Add("AKTIV", "AKTIV");
            tableMapping.ColumnMappings.Add("USEABLE", "USEABLE");
            tableMapping.ColumnMappings.Add("NAME_VISIBLE", "NAME_VISIBLE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ASZTAL] WHERE (([ASZTAL_ID] = @Original_ASZTAL_ID) AND ([ASZTAL_SZAM] = @Original_ASZTAL_SZAM) AND ([ASZTAL_TIPUS_ID] = @Original_ASZTAL_TIPUS_ID) AND ((@IsNull_ASZTAL_POS_X = 1 AND [ASZTAL_POS_X] IS NULL) OR ([ASZTAL_POS_X] = @Original_ASZTAL_POS_X)) AND ((@IsNull_ASZTAL_POS_Y = 1 AND [ASZTAL_POS_Y] IS NULL) OR ([ASZTAL_POS_Y] = @Original_ASZTAL_POS_Y)) AND ((@IsNull_HELY_ID = 1 AND [HELY_ID] IS NULL) OR ([HELY_ID] = @Original_HELY_ID)) AND ((@IsNull_ASZTAL_ROTATE = 1 AND [ASZTAL_ROTATE] IS NULL) OR ([ASZTAL_ROTATE] = @Original_ASZTAL_ROTATE)) AND ((@IsNull_AKTIV = 1 AND [AKTIV] IS NULL) OR ([AKTIV] = @Original_AKTIV)) AND ((@IsNull_USEABLE = 1 AND [USEABLE] IS NULL) OR ([USEABLE] = @Original_USEABLE)) AND ((@IsNull_NAME_VISIBLE = 1 AND [NAME_VISIBLE] IS NULL) OR ([NAME_VISIBLE] = @Original_NAME_VISIBLE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ASZTAL_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ASZTAL_SZAM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_SZAM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ASZTAL_TIPUS_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_TIPUS_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ASZTAL_POS_X", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_POS_X", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ASZTAL_POS_X", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_POS_X", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ASZTAL_POS_Y", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_POS_Y", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ASZTAL_POS_Y", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_POS_Y", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HELY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HELY_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HELY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HELY_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ASZTAL_ROTATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_ROTATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ASZTAL_ROTATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_ROTATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AKTIV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKTIV", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AKTIV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKTIV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USEABLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USEABLE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USEABLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USEABLE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NAME_VISIBLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_VISIBLE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_VISIBLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_VISIBLE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ASZTAL] ([ASZTAL_SZAM], [ASZTAL_TIPUS_ID], [ASZTAL_POS_X], [ASZTAL_POS_Y], [HELY_ID], [ASZTAL_ROTATE], [AKTIV], [USEABLE], [NAME_VISIBLE]) VALUES (@ASZTAL_SZAM, @ASZTAL_TIPUS_ID, @ASZTAL_POS_X, @ASZTAL_POS_Y, @HELY_ID, @ASZTAL_ROTATE, @AKTIV, @USEABLE, @NAME_VISIBLE);
SELECT ASZTAL_ID, ASZTAL_SZAM, ASZTAL_TIPUS_ID, ASZTAL_POS_X, ASZTAL_POS_Y, HELY_ID, ASZTAL_ROTATE, AKTIV, USEABLE, NAME_VISIBLE FROM ASZTAL WHERE (ASZTAL_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ASZTAL_SZAM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_SZAM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ASZTAL_TIPUS_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_TIPUS_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ASZTAL_POS_X", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_POS_X", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ASZTAL_POS_Y", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_POS_Y", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HELY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HELY_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ASZTAL_ROTATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_ROTATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AKTIV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKTIV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USEABLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USEABLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_VISIBLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_VISIBLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ASZTAL] SET [ASZTAL_SZAM] = @ASZTAL_SZAM, [ASZTAL_TIPUS_ID] = @ASZTAL_TIPUS_ID, [ASZTAL_POS_X] = @ASZTAL_POS_X, [ASZTAL_POS_Y] = @ASZTAL_POS_Y, [HELY_ID] = @HELY_ID, [ASZTAL_ROTATE] = @ASZTAL_ROTATE, [AKTIV] = @AKTIV, [USEABLE] = @USEABLE, [NAME_VISIBLE] = @NAME_VISIBLE WHERE (([ASZTAL_ID] = @Original_ASZTAL_ID) AND ([ASZTAL_SZAM] = @Original_ASZTAL_SZAM) AND ([ASZTAL_TIPUS_ID] = @Original_ASZTAL_TIPUS_ID) AND ((@IsNull_ASZTAL_POS_X = 1 AND [ASZTAL_POS_X] IS NULL) OR ([ASZTAL_POS_X] = @Original_ASZTAL_POS_X)) AND ((@IsNull_ASZTAL_POS_Y = 1 AND [ASZTAL_POS_Y] IS NULL) OR ([ASZTAL_POS_Y] = @Original_ASZTAL_POS_Y)) AND ((@IsNull_HELY_ID = 1 AND [HELY_ID] IS NULL) OR ([HELY_ID] = @Original_HELY_ID)) AND ((@IsNull_ASZTAL_ROTATE = 1 AND [ASZTAL_ROTATE] IS NULL) OR ([ASZTAL_ROTATE] = @Original_ASZTAL_ROTATE)) AND ((@IsNull_AKTIV = 1 AND [AKTIV] IS NULL) OR ([AKTIV] = @Original_AKTIV)) AND ((@IsNull_USEABLE = 1 AND [USEABLE] IS NULL) OR ([USEABLE] = @Original_USEABLE)) AND ((@IsNull_NAME_VISIBLE = 1 AND [NAME_VISIBLE] IS NULL) OR ([NAME_VISIBLE] = @Original_NAME_VISIBLE)));
SELECT ASZTAL_ID, ASZTAL_SZAM, ASZTAL_TIPUS_ID, ASZTAL_POS_X, ASZTAL_POS_Y, HELY_ID, ASZTAL_ROTATE, AKTIV, USEABLE, NAME_VISIBLE FROM ASZTAL WHERE (ASZTAL_ID = @ASZTAL_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ASZTAL_SZAM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_SZAM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ASZTAL_TIPUS_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_TIPUS_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ASZTAL_POS_X", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_POS_X", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ASZTAL_POS_Y", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_POS_Y", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HELY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HELY_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ASZTAL_ROTATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_ROTATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AKTIV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKTIV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USEABLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USEABLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_VISIBLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_VISIBLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ASZTAL_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ASZTAL_SZAM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_SZAM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ASZTAL_TIPUS_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_TIPUS_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ASZTAL_POS_X", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_POS_X", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ASZTAL_POS_X", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_POS_X", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ASZTAL_POS_Y", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_POS_Y", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ASZTAL_POS_Y", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_POS_Y", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HELY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HELY_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HELY_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HELY_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ASZTAL_ROTATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_ROTATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ASZTAL_ROTATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_ROTATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AKTIV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKTIV", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AKTIV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKTIV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USEABLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USEABLE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USEABLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USEABLE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NAME_VISIBLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_VISIBLE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_VISIBLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_VISIBLE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ASZTAL_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::e_Cafe.Properties.Settings.Default.ECAFEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ASZTAL_ID, ASZTAL_SZAM, ASZTAL_TIPUS_ID, ASZTAL_POS_X, ASZTAL_POS_Y, HELY_" +
                "ID, ASZTAL_ROTATE, AKTIV, USEABLE, NAME_VISIBLE FROM dbo.ASZTAL";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(eCafe_Szamlakor.ASZTALDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual eCafe_Szamlakor.ASZTALDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            eCafe_Szamlakor.ASZTALDataTable dataTable = new eCafe_Szamlakor.ASZTALDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(eCafe_Szamlakor.ASZTALDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(eCafe_Szamlakor dataSet) {
            return this.Adapter.Update(dataSet, "ASZTAL");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ASZTAL_ID, string Original_ASZTAL_SZAM, int Original_ASZTAL_TIPUS_ID, global::System.Nullable<int> Original_ASZTAL_POS_X, global::System.Nullable<int> Original_ASZTAL_POS_Y, global::System.Nullable<int> Original_HELY_ID, global::System.Nullable<int> Original_ASZTAL_ROTATE, global::System.Nullable<int> Original_AKTIV, global::System.Nullable<int> Original_USEABLE, global::System.Nullable<int> Original_NAME_VISIBLE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ASZTAL_ID));
            if ((Original_ASZTAL_SZAM == null)) {
                throw new global::System.ArgumentNullException("Original_ASZTAL_SZAM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ASZTAL_SZAM));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ASZTAL_TIPUS_ID));
            if ((Original_ASZTAL_POS_X.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_ASZTAL_POS_X.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_ASZTAL_POS_Y.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_ASZTAL_POS_Y.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_HELY_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_HELY_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_ASZTAL_ROTATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_ASZTAL_ROTATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_AKTIV.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_AKTIV.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_USEABLE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_USEABLE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_NAME_VISIBLE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_NAME_VISIBLE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ASZTAL_SZAM, int ASZTAL_TIPUS_ID, global::System.Nullable<int> ASZTAL_POS_X, global::System.Nullable<int> ASZTAL_POS_Y, global::System.Nullable<int> HELY_ID, global::System.Nullable<int> ASZTAL_ROTATE, global::System.Nullable<int> AKTIV, global::System.Nullable<int> USEABLE, global::System.Nullable<int> NAME_VISIBLE) {
            if ((ASZTAL_SZAM == null)) {
                throw new global::System.ArgumentNullException("ASZTAL_SZAM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ASZTAL_SZAM));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ASZTAL_TIPUS_ID));
            if ((ASZTAL_POS_X.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(ASZTAL_POS_X.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ASZTAL_POS_Y.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(ASZTAL_POS_Y.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((HELY_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(HELY_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ASZTAL_ROTATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(ASZTAL_ROTATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((AKTIV.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(AKTIV.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((USEABLE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(USEABLE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((NAME_VISIBLE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(NAME_VISIBLE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ASZTAL_SZAM, 
                    int ASZTAL_TIPUS_ID, 
                    global::System.Nullable<int> ASZTAL_POS_X, 
                    global::System.Nullable<int> ASZTAL_POS_Y, 
                    global::System.Nullable<int> HELY_ID, 
                    global::System.Nullable<int> ASZTAL_ROTATE, 
                    global::System.Nullable<int> AKTIV, 
                    global::System.Nullable<int> USEABLE, 
                    global::System.Nullable<int> NAME_VISIBLE, 
                    int Original_ASZTAL_ID, 
                    string Original_ASZTAL_SZAM, 
                    int Original_ASZTAL_TIPUS_ID, 
                    global::System.Nullable<int> Original_ASZTAL_POS_X, 
                    global::System.Nullable<int> Original_ASZTAL_POS_Y, 
                    global::System.Nullable<int> Original_HELY_ID, 
                    global::System.Nullable<int> Original_ASZTAL_ROTATE, 
                    global::System.Nullable<int> Original_AKTIV, 
                    global::System.Nullable<int> Original_USEABLE, 
                    global::System.Nullable<int> Original_NAME_VISIBLE, 
                    int ASZTAL_ID) {
            if ((ASZTAL_SZAM == null)) {
                throw new global::System.ArgumentNullException("ASZTAL_SZAM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ASZTAL_SZAM));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ASZTAL_TIPUS_ID));
            if ((ASZTAL_POS_X.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(ASZTAL_POS_X.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ASZTAL_POS_Y.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ASZTAL_POS_Y.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((HELY_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(HELY_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ASZTAL_ROTATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(ASZTAL_ROTATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((AKTIV.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(AKTIV.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((USEABLE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(USEABLE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((NAME_VISIBLE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(NAME_VISIBLE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_ASZTAL_ID));
            if ((Original_ASZTAL_SZAM == null)) {
                throw new global::System.ArgumentNullException("Original_ASZTAL_SZAM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_ASZTAL_SZAM));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_ASZTAL_TIPUS_ID));
            if ((Original_ASZTAL_POS_X.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_ASZTAL_POS_X.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_ASZTAL_POS_Y.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_ASZTAL_POS_Y.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_HELY_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_HELY_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_ASZTAL_ROTATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_ASZTAL_ROTATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_AKTIV.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_AKTIV.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_USEABLE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_USEABLE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_NAME_VISIBLE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(Original_NAME_VISIBLE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(ASZTAL_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ASZTAL_SZAM, 
                    int ASZTAL_TIPUS_ID, 
                    global::System.Nullable<int> ASZTAL_POS_X, 
                    global::System.Nullable<int> ASZTAL_POS_Y, 
                    global::System.Nullable<int> HELY_ID, 
                    global::System.Nullable<int> ASZTAL_ROTATE, 
                    global::System.Nullable<int> AKTIV, 
                    global::System.Nullable<int> USEABLE, 
                    global::System.Nullable<int> NAME_VISIBLE, 
                    int Original_ASZTAL_ID, 
                    string Original_ASZTAL_SZAM, 
                    int Original_ASZTAL_TIPUS_ID, 
                    global::System.Nullable<int> Original_ASZTAL_POS_X, 
                    global::System.Nullable<int> Original_ASZTAL_POS_Y, 
                    global::System.Nullable<int> Original_HELY_ID, 
                    global::System.Nullable<int> Original_ASZTAL_ROTATE, 
                    global::System.Nullable<int> Original_AKTIV, 
                    global::System.Nullable<int> Original_USEABLE, 
                    global::System.Nullable<int> Original_NAME_VISIBLE) {
            return this.Update(ASZTAL_SZAM, ASZTAL_TIPUS_ID, ASZTAL_POS_X, ASZTAL_POS_Y, HELY_ID, ASZTAL_ROTATE, AKTIV, USEABLE, NAME_VISIBLE, Original_ASZTAL_ID, Original_ASZTAL_SZAM, Original_ASZTAL_TIPUS_ID, Original_ASZTAL_POS_X, Original_ASZTAL_POS_Y, Original_HELY_ID, Original_ASZTAL_ROTATE, Original_AKTIV, Original_USEABLE, Original_NAME_VISIBLE, Original_ASZTAL_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CIKKTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CIKKTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CIKK";
            tableMapping.ColumnMappings.Add("CIKK_ID", "CIKK_ID");
            tableMapping.ColumnMappings.Add("MEGNEVEZES", "MEGNEVEZES");
            tableMapping.ColumnMappings.Add("CIKK_TIPUS", "CIKK_TIPUS");
            tableMapping.ColumnMappings.Add("CIKKCSOPORT_ID", "CIKKCSOPORT_ID");
            tableMapping.ColumnMappings.Add("ERTEKESITES_TIPUSA", "ERTEKESITES_TIPUSA");
            tableMapping.ColumnMappings.Add("MEGYS_ID", "MEGYS_ID");
            tableMapping.ColumnMappings.Add("OTHER_FILTER_ID", "OTHER_FILTER_ID");
            tableMapping.ColumnMappings.Add("DEFAULT_RAKTAR", "DEFAULT_RAKTAR");
            tableMapping.ColumnMappings.Add("SZJ_SZAM", "SZJ_SZAM");
            tableMapping.ColumnMappings.Add("CIKKSZAM", "CIKKSZAM");
            tableMapping.ColumnMappings.Add("EAN_KOD", "EAN_KOD");
            tableMapping.ColumnMappings.Add("MINIMUM_KESZLET", "MINIMUM_KESZLET");
            tableMapping.ColumnMappings.Add("OPTIMALIS_KESZLET", "OPTIMALIS_KESZLET");
            tableMapping.ColumnMappings.Add("ELADASI_AR", "ELADASI_AR");
            tableMapping.ColumnMappings.Add("HELYETTES_TERMEK", "HELYETTES_TERMEK");
            tableMapping.ColumnMappings.Add("MAX_KEDVEZMENY_SZ", "MAX_KEDVEZMENY_SZ");
            tableMapping.ColumnMappings.Add("MAX_KEDVEZM_FT", "MAX_KEDVEZM_FT");
            tableMapping.ColumnMappings.Add("MEGJEGYZES", "MEGJEGYZES");
            tableMapping.ColumnMappings.Add("AKTIV", "AKTIV");
            tableMapping.ColumnMappings.Add("GYORSKOD", "GYORSKOD");
            tableMapping.ColumnMappings.Add("RECEPT_TEXT", "RECEPT_TEXT");
            tableMapping.ColumnMappings.Add("SPEC_ZARAS", "SPEC_ZARAS");
            tableMapping.ColumnMappings.Add("RECEPT_MODSZER", "RECEPT_MODSZER");
            tableMapping.ColumnMappings.Add("RECEPT_ALK_TART", "RECEPT_ALK_TART");
            tableMapping.ColumnMappings.Add("RECEPT_POHAR", "RECEPT_POHAR");
            tableMapping.ColumnMappings.Add("ELADASI_AR_NETTO", "ELADASI_AR_NETTO");
            tableMapping.ColumnMappings.Add("AUTO_MEGRENDELO", "AUTO_MEGRENDELO");
            tableMapping.ColumnMappings.Add("VIRTUAL", "VIRTUAL");
            tableMapping.ColumnMappings.Add("CIKK_ROVID_NEV", "CIKK_ROVID_NEV");
            tableMapping.ColumnMappings.Add("CIKK_TOP_LIST", "CIKK_TOP_LIST");
            tableMapping.ColumnMappings.Add("CIKKCSOP_PREFER", "CIKKCSOP_PREFER");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[CIKK] WHERE (([CIKK_ID] = @Original_CIKK_ID) AND ([MEGNEVEZES]" +
                " = @Original_MEGNEVEZES) AND ([CIKK_TIPUS] = @Original_CIKK_TIPUS) AND ((@IsNull" +
                "_CIKKCSOPORT_ID = 1 AND [CIKKCSOPORT_ID] IS NULL) OR ([CIKKCSOPORT_ID] = @Origin" +
                "al_CIKKCSOPORT_ID)) AND ((@IsNull_ERTEKESITES_TIPUSA = 1 AND [ERTEKESITES_TIPUSA" +
                "] IS NULL) OR ([ERTEKESITES_TIPUSA] = @Original_ERTEKESITES_TIPUSA)) AND ((@IsNu" +
                "ll_MEGYS_ID = 1 AND [MEGYS_ID] IS NULL) OR ([MEGYS_ID] = @Original_MEGYS_ID)) AN" +
                "D ((@IsNull_OTHER_FILTER_ID = 1 AND [OTHER_FILTER_ID] IS NULL) OR ([OTHER_FILTER" +
                "_ID] = @Original_OTHER_FILTER_ID)) AND ((@IsNull_DEFAULT_RAKTAR = 1 AND [DEFAULT" +
                "_RAKTAR] IS NULL) OR ([DEFAULT_RAKTAR] = @Original_DEFAULT_RAKTAR)) AND ((@IsNul" +
                "l_SZJ_SZAM = 1 AND [SZJ_SZAM] IS NULL) OR ([SZJ_SZAM] = @Original_SZJ_SZAM)) AND" +
                " ((@IsNull_CIKKSZAM = 1 AND [CIKKSZAM] IS NULL) OR ([CIKKSZAM] = @Original_CIKKS" +
                "ZAM)) AND ((@IsNull_EAN_KOD = 1 AND [EAN_KOD] IS NULL) OR ([EAN_KOD] = @Original" +
                "_EAN_KOD)) AND ((@IsNull_MINIMUM_KESZLET = 1 AND [MINIMUM_KESZLET] IS NULL) OR (" +
                "[MINIMUM_KESZLET] = @Original_MINIMUM_KESZLET)) AND ((@IsNull_OPTIMALIS_KESZLET " +
                "= 1 AND [OPTIMALIS_KESZLET] IS NULL) OR ([OPTIMALIS_KESZLET] = @Original_OPTIMAL" +
                "IS_KESZLET)) AND ((@IsNull_ELADASI_AR = 1 AND [ELADASI_AR] IS NULL) OR ([ELADASI" +
                "_AR] = @Original_ELADASI_AR)) AND ((@IsNull_HELYETTES_TERMEK = 1 AND [HELYETTES_" +
                "TERMEK] IS NULL) OR ([HELYETTES_TERMEK] = @Original_HELYETTES_TERMEK)) AND ((@Is" +
                "Null_MAX_KEDVEZMENY_SZ = 1 AND [MAX_KEDVEZMENY_SZ] IS NULL) OR ([MAX_KEDVEZMENY_" +
                "SZ] = @Original_MAX_KEDVEZMENY_SZ)) AND ((@IsNull_MAX_KEDVEZM_FT = 1 AND [MAX_KE" +
                "DVEZM_FT] IS NULL) OR ([MAX_KEDVEZM_FT] = @Original_MAX_KEDVEZM_FT)) AND ((@IsNu" +
                "ll_MEGJEGYZES = 1 AND [MEGJEGYZES] IS NULL) OR ([MEGJEGYZES] = @Original_MEGJEGY" +
                "ZES)) AND ((@IsNull_AKTIV = 1 AND [AKTIV] IS NULL) OR ([AKTIV] = @Original_AKTIV" +
                ")) AND ((@IsNull_GYORSKOD = 1 AND [GYORSKOD] IS NULL) OR ([GYORSKOD] = @Original" +
                "_GYORSKOD)) AND ((@IsNull_SPEC_ZARAS = 1 AND [SPEC_ZARAS] IS NULL) OR ([SPEC_ZAR" +
                "AS] = @Original_SPEC_ZARAS)) AND ((@IsNull_RECEPT_MODSZER = 1 AND [RECEPT_MODSZE" +
                "R] IS NULL) OR ([RECEPT_MODSZER] = @Original_RECEPT_MODSZER)) AND ((@IsNull_RECE" +
                "PT_ALK_TART = 1 AND [RECEPT_ALK_TART] IS NULL) OR ([RECEPT_ALK_TART] = @Original" +
                "_RECEPT_ALK_TART)) AND ((@IsNull_RECEPT_POHAR = 1 AND [RECEPT_POHAR] IS NULL) OR" +
                " ([RECEPT_POHAR] = @Original_RECEPT_POHAR)) AND ((@IsNull_ELADASI_AR_NETTO = 1 A" +
                "ND [ELADASI_AR_NETTO] IS NULL) OR ([ELADASI_AR_NETTO] = @Original_ELADASI_AR_NET" +
                "TO)) AND ((@IsNull_AUTO_MEGRENDELO = 1 AND [AUTO_MEGRENDELO] IS NULL) OR ([AUTO_" +
                "MEGRENDELO] = @Original_AUTO_MEGRENDELO)) AND ((@IsNull_VIRTUAL = 1 AND [VIRTUAL" +
                "] IS NULL) OR ([VIRTUAL] = @Original_VIRTUAL)) AND ((@IsNull_CIKK_ROVID_NEV = 1 " +
                "AND [CIKK_ROVID_NEV] IS NULL) OR ([CIKK_ROVID_NEV] = @Original_CIKK_ROVID_NEV)) " +
                "AND ((@IsNull_CIKK_TOP_LIST = 1 AND [CIKK_TOP_LIST] IS NULL) OR ([CIKK_TOP_LIST]" +
                " = @Original_CIKK_TOP_LIST)) AND ((@IsNull_CIKKCSOP_PREFER = 1 AND [CIKKCSOP_PRE" +
                "FER] IS NULL) OR ([CIKKCSOP_PREFER] = @Original_CIKKCSOP_PREFER)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEGNEVEZES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGNEVEZES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKK_TIPUS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_TIPUS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CIKKCSOPORT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKCSOPORT_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKKCSOPORT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKCSOPORT_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ERTEKESITES_TIPUSA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ERTEKESITES_TIPUSA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ERTEKESITES_TIPUSA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ERTEKESITES_TIPUSA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MEGYS_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGYS_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEGYS_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGYS_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OTHER_FILTER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OTHER_FILTER_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OTHER_FILTER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OTHER_FILTER_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DEFAULT_RAKTAR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_RAKTAR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEFAULT_RAKTAR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_RAKTAR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SZJ_SZAM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZJ_SZAM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SZJ_SZAM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZJ_SZAM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CIKKSZAM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKSZAM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKKSZAM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKSZAM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EAN_KOD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EAN_KOD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EAN_KOD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EAN_KOD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MINIMUM_KESZLET", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MINIMUM_KESZLET", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MINIMUM_KESZLET", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MINIMUM_KESZLET", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPTIMALIS_KESZLET", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPTIMALIS_KESZLET", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPTIMALIS_KESZLET", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPTIMALIS_KESZLET", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ELADASI_AR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELADASI_AR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ELADASI_AR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELADASI_AR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HELYETTES_TERMEK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HELYETTES_TERMEK", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HELYETTES_TERMEK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HELYETTES_TERMEK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAX_KEDVEZMENY_SZ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAX_KEDVEZMENY_SZ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAX_KEDVEZMENY_SZ", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAX_KEDVEZMENY_SZ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAX_KEDVEZM_FT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAX_KEDVEZM_FT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAX_KEDVEZM_FT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAX_KEDVEZM_FT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MEGJEGYZES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGJEGYZES", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEGJEGYZES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGJEGYZES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AKTIV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKTIV", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AKTIV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKTIV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GYORSKOD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GYORSKOD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GYORSKOD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GYORSKOD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SPEC_ZARAS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPEC_ZARAS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SPEC_ZARAS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPEC_ZARAS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RECEPT_MODSZER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_MODSZER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECEPT_MODSZER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_MODSZER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RECEPT_ALK_TART", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_ALK_TART", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECEPT_ALK_TART", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_ALK_TART", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RECEPT_POHAR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_POHAR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECEPT_POHAR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_POHAR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ELADASI_AR_NETTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELADASI_AR_NETTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ELADASI_AR_NETTO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELADASI_AR_NETTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AUTO_MEGRENDELO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTO_MEGRENDELO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AUTO_MEGRENDELO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTO_MEGRENDELO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VIRTUAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIRTUAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VIRTUAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIRTUAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CIKK_ROVID_NEV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ROVID_NEV", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKK_ROVID_NEV", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ROVID_NEV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CIKK_TOP_LIST", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_TOP_LIST", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKK_TOP_LIST", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_TOP_LIST", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CIKKCSOP_PREFER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKCSOP_PREFER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKKCSOP_PREFER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKCSOP_PREFER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[CIKK] ([MEGNEVEZES], [CIKK_TIPUS], [CIKKCSOPORT_ID], [ERTEKESITES_TIPUSA], [MEGYS_ID], [OTHER_FILTER_ID], [DEFAULT_RAKTAR], [SZJ_SZAM], [CIKKSZAM], [EAN_KOD], [MINIMUM_KESZLET], [OPTIMALIS_KESZLET], [ELADASI_AR], [HELYETTES_TERMEK], [MAX_KEDVEZMENY_SZ], [MAX_KEDVEZM_FT], [MEGJEGYZES], [AKTIV], [GYORSKOD], [RECEPT_TEXT], [SPEC_ZARAS], [RECEPT_MODSZER], [RECEPT_ALK_TART], [RECEPT_POHAR], [ELADASI_AR_NETTO], [AUTO_MEGRENDELO], [VIRTUAL], [CIKK_ROVID_NEV], [CIKK_TOP_LIST], [CIKKCSOP_PREFER]) VALUES (@MEGNEVEZES, @CIKK_TIPUS, @CIKKCSOPORT_ID, @ERTEKESITES_TIPUSA, @MEGYS_ID, @OTHER_FILTER_ID, @DEFAULT_RAKTAR, @SZJ_SZAM, @CIKKSZAM, @EAN_KOD, @MINIMUM_KESZLET, @OPTIMALIS_KESZLET, @ELADASI_AR, @HELYETTES_TERMEK, @MAX_KEDVEZMENY_SZ, @MAX_KEDVEZM_FT, @MEGJEGYZES, @AKTIV, @GYORSKOD, @RECEPT_TEXT, @SPEC_ZARAS, @RECEPT_MODSZER, @RECEPT_ALK_TART, @RECEPT_POHAR, @ELADASI_AR_NETTO, @AUTO_MEGRENDELO, @VIRTUAL, @CIKK_ROVID_NEV, @CIKK_TOP_LIST, @CIKKCSOP_PREFER);
SELECT CIKK_ID, MEGNEVEZES, CIKK_TIPUS, CIKKCSOPORT_ID, ERTEKESITES_TIPUSA, MEGYS_ID, OTHER_FILTER_ID, DEFAULT_RAKTAR, SZJ_SZAM, CIKKSZAM, EAN_KOD, MINIMUM_KESZLET, OPTIMALIS_KESZLET, ELADASI_AR, HELYETTES_TERMEK, MAX_KEDVEZMENY_SZ, MAX_KEDVEZM_FT, MEGJEGYZES, AKTIV, GYORSKOD, RECEPT_TEXT, SPEC_ZARAS, RECEPT_MODSZER, RECEPT_ALK_TART, RECEPT_POHAR, ELADASI_AR_NETTO, AUTO_MEGRENDELO, VIRTUAL, CIKK_ROVID_NEV, CIKK_TOP_LIST, CIKKCSOP_PREFER FROM CIKK WHERE (CIKK_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEGNEVEZES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGNEVEZES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKK_TIPUS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_TIPUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKKCSOPORT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKCSOPORT_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ERTEKESITES_TIPUSA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ERTEKESITES_TIPUSA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEGYS_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGYS_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTHER_FILTER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OTHER_FILTER_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEFAULT_RAKTAR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_RAKTAR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SZJ_SZAM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZJ_SZAM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKKSZAM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKSZAM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EAN_KOD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EAN_KOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MINIMUM_KESZLET", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MINIMUM_KESZLET", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPTIMALIS_KESZLET", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPTIMALIS_KESZLET", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ELADASI_AR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELADASI_AR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HELYETTES_TERMEK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HELYETTES_TERMEK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAX_KEDVEZMENY_SZ", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAX_KEDVEZMENY_SZ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAX_KEDVEZM_FT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAX_KEDVEZM_FT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEGJEGYZES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGJEGYZES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AKTIV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKTIV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GYORSKOD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GYORSKOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEPT_TEXT", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_TEXT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPEC_ZARAS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPEC_ZARAS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEPT_MODSZER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_MODSZER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEPT_ALK_TART", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_ALK_TART", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEPT_POHAR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_POHAR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ELADASI_AR_NETTO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELADASI_AR_NETTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AUTO_MEGRENDELO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTO_MEGRENDELO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VIRTUAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIRTUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKK_ROVID_NEV", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ROVID_NEV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKK_TOP_LIST", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_TOP_LIST", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKKCSOP_PREFER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKCSOP_PREFER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[CIKK] SET [MEGNEVEZES] = @MEGNEVEZES, [CIKK_TIPUS] = @CIKK_TIPUS, [" +
                "CIKKCSOPORT_ID] = @CIKKCSOPORT_ID, [ERTEKESITES_TIPUSA] = @ERTEKESITES_TIPUSA, [" +
                "MEGYS_ID] = @MEGYS_ID, [OTHER_FILTER_ID] = @OTHER_FILTER_ID, [DEFAULT_RAKTAR] = " +
                "@DEFAULT_RAKTAR, [SZJ_SZAM] = @SZJ_SZAM, [CIKKSZAM] = @CIKKSZAM, [EAN_KOD] = @EA" +
                "N_KOD, [MINIMUM_KESZLET] = @MINIMUM_KESZLET, [OPTIMALIS_KESZLET] = @OPTIMALIS_KE" +
                "SZLET, [ELADASI_AR] = @ELADASI_AR, [HELYETTES_TERMEK] = @HELYETTES_TERMEK, [MAX_" +
                "KEDVEZMENY_SZ] = @MAX_KEDVEZMENY_SZ, [MAX_KEDVEZM_FT] = @MAX_KEDVEZM_FT, [MEGJEG" +
                "YZES] = @MEGJEGYZES, [AKTIV] = @AKTIV, [GYORSKOD] = @GYORSKOD, [RECEPT_TEXT] = @" +
                "RECEPT_TEXT, [SPEC_ZARAS] = @SPEC_ZARAS, [RECEPT_MODSZER] = @RECEPT_MODSZER, [RE" +
                "CEPT_ALK_TART] = @RECEPT_ALK_TART, [RECEPT_POHAR] = @RECEPT_POHAR, [ELADASI_AR_N" +
                "ETTO] = @ELADASI_AR_NETTO, [AUTO_MEGRENDELO] = @AUTO_MEGRENDELO, [VIRTUAL] = @VI" +
                "RTUAL, [CIKK_ROVID_NEV] = @CIKK_ROVID_NEV, [CIKK_TOP_LIST] = @CIKK_TOP_LIST, [CI" +
                "KKCSOP_PREFER] = @CIKKCSOP_PREFER WHERE (([CIKK_ID] = @Original_CIKK_ID) AND ([M" +
                "EGNEVEZES] = @Original_MEGNEVEZES) AND ([CIKK_TIPUS] = @Original_CIKK_TIPUS) AND" +
                " ((@IsNull_CIKKCSOPORT_ID = 1 AND [CIKKCSOPORT_ID] IS NULL) OR ([CIKKCSOPORT_ID]" +
                " = @Original_CIKKCSOPORT_ID)) AND ((@IsNull_ERTEKESITES_TIPUSA = 1 AND [ERTEKESI" +
                "TES_TIPUSA] IS NULL) OR ([ERTEKESITES_TIPUSA] = @Original_ERTEKESITES_TIPUSA)) A" +
                "ND ((@IsNull_MEGYS_ID = 1 AND [MEGYS_ID] IS NULL) OR ([MEGYS_ID] = @Original_MEG" +
                "YS_ID)) AND ((@IsNull_OTHER_FILTER_ID = 1 AND [OTHER_FILTER_ID] IS NULL) OR ([OT" +
                "HER_FILTER_ID] = @Original_OTHER_FILTER_ID)) AND ((@IsNull_DEFAULT_RAKTAR = 1 AN" +
                "D [DEFAULT_RAKTAR] IS NULL) OR ([DEFAULT_RAKTAR] = @Original_DEFAULT_RAKTAR)) AN" +
                "D ((@IsNull_SZJ_SZAM = 1 AND [SZJ_SZAM] IS NULL) OR ([SZJ_SZAM] = @Original_SZJ_" +
                "SZAM)) AND ((@IsNull_CIKKSZAM = 1 AND [CIKKSZAM] IS NULL) OR ([CIKKSZAM] = @Orig" +
                "inal_CIKKSZAM)) AND ((@IsNull_EAN_KOD = 1 AND [EAN_KOD] IS NULL) OR ([EAN_KOD] =" +
                " @Original_EAN_KOD)) AND ((@IsNull_MINIMUM_KESZLET = 1 AND [MINIMUM_KESZLET] IS " +
                "NULL) OR ([MINIMUM_KESZLET] = @Original_MINIMUM_KESZLET)) AND ((@IsNull_OPTIMALI" +
                "S_KESZLET = 1 AND [OPTIMALIS_KESZLET] IS NULL) OR ([OPTIMALIS_KESZLET] = @Origin" +
                "al_OPTIMALIS_KESZLET)) AND ((@IsNull_ELADASI_AR = 1 AND [ELADASI_AR] IS NULL) OR" +
                " ([ELADASI_AR] = @Original_ELADASI_AR)) AND ((@IsNull_HELYETTES_TERMEK = 1 AND [" +
                "HELYETTES_TERMEK] IS NULL) OR ([HELYETTES_TERMEK] = @Original_HELYETTES_TERMEK))" +
                " AND ((@IsNull_MAX_KEDVEZMENY_SZ = 1 AND [MAX_KEDVEZMENY_SZ] IS NULL) OR ([MAX_K" +
                "EDVEZMENY_SZ] = @Original_MAX_KEDVEZMENY_SZ)) AND ((@IsNull_MAX_KEDVEZM_FT = 1 A" +
                "ND [MAX_KEDVEZM_FT] IS NULL) OR ([MAX_KEDVEZM_FT] = @Original_MAX_KEDVEZM_FT)) A" +
                "ND ((@IsNull_MEGJEGYZES = 1 AND [MEGJEGYZES] IS NULL) OR ([MEGJEGYZES] = @Origin" +
                "al_MEGJEGYZES)) AND ((@IsNull_AKTIV = 1 AND [AKTIV] IS NULL) OR ([AKTIV] = @Orig" +
                "inal_AKTIV)) AND ((@IsNull_GYORSKOD = 1 AND [GYORSKOD] IS NULL) OR ([GYORSKOD] =" +
                " @Original_GYORSKOD)) AND ((@IsNull_SPEC_ZARAS = 1 AND [SPEC_ZARAS] IS NULL) OR " +
                "([SPEC_ZARAS] = @Original_SPEC_ZARAS)) AND ((@IsNull_RECEPT_MODSZER = 1 AND [REC" +
                "EPT_MODSZER] IS NULL) OR ([RECEPT_MODSZER] = @Original_RECEPT_MODSZER)) AND ((@I" +
                "sNull_RECEPT_ALK_TART = 1 AND [RECEPT_ALK_TART] IS NULL) OR ([RECEPT_ALK_TART] =" +
                " @Original_RECEPT_ALK_TART)) AND ((@IsNull_RECEPT_POHAR = 1 AND [RECEPT_POHAR] I" +
                "S NULL) OR ([RECEPT_POHAR] = @Original_RECEPT_POHAR)) AND ((@IsNull_ELADASI_AR_N" +
                "ETTO = 1 AND [ELADASI_AR_NETTO] IS NULL) OR ([ELADASI_AR_NETTO] = @Original_ELAD" +
                "ASI_AR_NETTO)) AND ((@IsNull_AUTO_MEGRENDELO = 1 AND [AUTO_MEGRENDELO] IS NULL) " +
                "OR ([AUTO_MEGRENDELO] = @Original_AUTO_MEGRENDELO)) AND ((@IsNull_VIRTUAL = 1 AN" +
                "D [VIRTUAL] IS NULL) OR ([VIRTUAL] = @Original_VIRTUAL)) AND ((@IsNull_CIKK_ROVI" +
                "D_NEV = 1 AND [CIKK_ROVID_NEV] IS NULL) OR ([CIKK_ROVID_NEV] = @Original_CIKK_RO" +
                "VID_NEV)) AND ((@IsNull_CIKK_TOP_LIST = 1 AND [CIKK_TOP_LIST] IS NULL) OR ([CIKK" +
                "_TOP_LIST] = @Original_CIKK_TOP_LIST)) AND ((@IsNull_CIKKCSOP_PREFER = 1 AND [CI" +
                "KKCSOP_PREFER] IS NULL) OR ([CIKKCSOP_PREFER] = @Original_CIKKCSOP_PREFER)));\r\nS" +
                "ELECT CIKK_ID, MEGNEVEZES, CIKK_TIPUS, CIKKCSOPORT_ID, ERTEKESITES_TIPUSA, MEGYS" +
                "_ID, OTHER_FILTER_ID, DEFAULT_RAKTAR, SZJ_SZAM, CIKKSZAM, EAN_KOD, MINIMUM_KESZL" +
                "ET, OPTIMALIS_KESZLET, ELADASI_AR, HELYETTES_TERMEK, MAX_KEDVEZMENY_SZ, MAX_KEDV" +
                "EZM_FT, MEGJEGYZES, AKTIV, GYORSKOD, RECEPT_TEXT, SPEC_ZARAS, RECEPT_MODSZER, RE" +
                "CEPT_ALK_TART, RECEPT_POHAR, ELADASI_AR_NETTO, AUTO_MEGRENDELO, VIRTUAL, CIKK_RO" +
                "VID_NEV, CIKK_TOP_LIST, CIKKCSOP_PREFER FROM CIKK WHERE (CIKK_ID = @CIKK_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEGNEVEZES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGNEVEZES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKK_TIPUS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_TIPUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKKCSOPORT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKCSOPORT_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ERTEKESITES_TIPUSA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ERTEKESITES_TIPUSA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEGYS_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGYS_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTHER_FILTER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OTHER_FILTER_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEFAULT_RAKTAR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_RAKTAR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SZJ_SZAM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZJ_SZAM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKKSZAM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKSZAM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EAN_KOD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EAN_KOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MINIMUM_KESZLET", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MINIMUM_KESZLET", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPTIMALIS_KESZLET", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPTIMALIS_KESZLET", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ELADASI_AR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELADASI_AR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HELYETTES_TERMEK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HELYETTES_TERMEK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAX_KEDVEZMENY_SZ", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAX_KEDVEZMENY_SZ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAX_KEDVEZM_FT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAX_KEDVEZM_FT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEGJEGYZES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGJEGYZES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AKTIV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKTIV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GYORSKOD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GYORSKOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEPT_TEXT", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_TEXT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPEC_ZARAS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPEC_ZARAS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEPT_MODSZER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_MODSZER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEPT_ALK_TART", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_ALK_TART", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEPT_POHAR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_POHAR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ELADASI_AR_NETTO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELADASI_AR_NETTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AUTO_MEGRENDELO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTO_MEGRENDELO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VIRTUAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIRTUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKK_ROVID_NEV", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ROVID_NEV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKK_TOP_LIST", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_TOP_LIST", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKKCSOP_PREFER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKCSOP_PREFER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEGNEVEZES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGNEVEZES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKK_TIPUS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_TIPUS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CIKKCSOPORT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKCSOPORT_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKKCSOPORT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKCSOPORT_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ERTEKESITES_TIPUSA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ERTEKESITES_TIPUSA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ERTEKESITES_TIPUSA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ERTEKESITES_TIPUSA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MEGYS_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGYS_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEGYS_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGYS_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OTHER_FILTER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OTHER_FILTER_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OTHER_FILTER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OTHER_FILTER_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DEFAULT_RAKTAR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_RAKTAR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEFAULT_RAKTAR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_RAKTAR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SZJ_SZAM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZJ_SZAM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SZJ_SZAM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZJ_SZAM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CIKKSZAM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKSZAM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKKSZAM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKSZAM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EAN_KOD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EAN_KOD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EAN_KOD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EAN_KOD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MINIMUM_KESZLET", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MINIMUM_KESZLET", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MINIMUM_KESZLET", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MINIMUM_KESZLET", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPTIMALIS_KESZLET", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPTIMALIS_KESZLET", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPTIMALIS_KESZLET", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPTIMALIS_KESZLET", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ELADASI_AR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELADASI_AR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ELADASI_AR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELADASI_AR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HELYETTES_TERMEK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HELYETTES_TERMEK", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HELYETTES_TERMEK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HELYETTES_TERMEK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAX_KEDVEZMENY_SZ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAX_KEDVEZMENY_SZ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAX_KEDVEZMENY_SZ", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAX_KEDVEZMENY_SZ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAX_KEDVEZM_FT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAX_KEDVEZM_FT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAX_KEDVEZM_FT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAX_KEDVEZM_FT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MEGJEGYZES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGJEGYZES", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEGJEGYZES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGJEGYZES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AKTIV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKTIV", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AKTIV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKTIV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GYORSKOD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GYORSKOD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GYORSKOD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GYORSKOD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SPEC_ZARAS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPEC_ZARAS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SPEC_ZARAS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPEC_ZARAS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RECEPT_MODSZER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_MODSZER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECEPT_MODSZER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_MODSZER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RECEPT_ALK_TART", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_ALK_TART", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECEPT_ALK_TART", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_ALK_TART", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RECEPT_POHAR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_POHAR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECEPT_POHAR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_POHAR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ELADASI_AR_NETTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELADASI_AR_NETTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ELADASI_AR_NETTO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELADASI_AR_NETTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AUTO_MEGRENDELO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTO_MEGRENDELO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AUTO_MEGRENDELO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTO_MEGRENDELO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VIRTUAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIRTUAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VIRTUAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIRTUAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CIKK_ROVID_NEV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ROVID_NEV", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKK_ROVID_NEV", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ROVID_NEV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CIKK_TOP_LIST", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_TOP_LIST", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKK_TOP_LIST", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_TOP_LIST", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CIKKCSOP_PREFER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKCSOP_PREFER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKKCSOP_PREFER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKCSOP_PREFER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKK_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::e_Cafe.Properties.Settings.Default.ECAFEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT CIKK_ID, MEGNEVEZES, CIKK_TIPUS, CIKKCSOPORT_ID, ERTEKESITES_TIPUSA, MEGYS_ID, OTHER_FILTER_ID, DEFAULT_RAKTAR, SZJ_SZAM, CIKKSZAM, EAN_KOD, MINIMUM_KESZLET, OPTIMALIS_KESZLET, ELADASI_AR, HELYETTES_TERMEK, MAX_KEDVEZMENY_SZ, MAX_KEDVEZM_FT, MEGJEGYZES, AKTIV, GYORSKOD, RECEPT_TEXT, SPEC_ZARAS, RECEPT_MODSZER, RECEPT_ALK_TART, RECEPT_POHAR, ELADASI_AR_NETTO, AUTO_MEGRENDELO, VIRTUAL, CIKK_ROVID_NEV, CIKK_TOP_LIST, CIKKCSOP_PREFER FROM dbo.CIKK";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(eCafe_Szamlakor.CIKKDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual eCafe_Szamlakor.CIKKDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            eCafe_Szamlakor.CIKKDataTable dataTable = new eCafe_Szamlakor.CIKKDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(eCafe_Szamlakor.CIKKDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(eCafe_Szamlakor dataSet) {
            return this.Adapter.Update(dataSet, "CIKK");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_CIKK_ID, 
                    string Original_MEGNEVEZES, 
                    int Original_CIKK_TIPUS, 
                    global::System.Nullable<int> Original_CIKKCSOPORT_ID, 
                    string Original_ERTEKESITES_TIPUSA, 
                    string Original_MEGYS_ID, 
                    global::System.Nullable<int> Original_OTHER_FILTER_ID, 
                    global::System.Nullable<int> Original_DEFAULT_RAKTAR, 
                    string Original_SZJ_SZAM, 
                    string Original_CIKKSZAM, 
                    string Original_EAN_KOD, 
                    global::System.Nullable<double> Original_MINIMUM_KESZLET, 
                    global::System.Nullable<double> Original_OPTIMALIS_KESZLET, 
                    global::System.Nullable<double> Original_ELADASI_AR, 
                    global::System.Nullable<int> Original_HELYETTES_TERMEK, 
                    global::System.Nullable<double> Original_MAX_KEDVEZMENY_SZ, 
                    global::System.Nullable<double> Original_MAX_KEDVEZM_FT, 
                    string Original_MEGJEGYZES, 
                    global::System.Nullable<int> Original_AKTIV, 
                    string Original_GYORSKOD, 
                    global::System.Nullable<int> Original_SPEC_ZARAS, 
                    string Original_RECEPT_MODSZER, 
                    string Original_RECEPT_ALK_TART, 
                    string Original_RECEPT_POHAR, 
                    global::System.Nullable<double> Original_ELADASI_AR_NETTO, 
                    global::System.Nullable<int> Original_AUTO_MEGRENDELO, 
                    global::System.Nullable<int> Original_VIRTUAL, 
                    string Original_CIKK_ROVID_NEV, 
                    global::System.Nullable<int> Original_CIKK_TOP_LIST, 
                    global::System.Nullable<int> Original_CIKKCSOP_PREFER) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_CIKK_ID));
            if ((Original_MEGNEVEZES == null)) {
                throw new global::System.ArgumentNullException("Original_MEGNEVEZES");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_MEGNEVEZES));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_CIKK_TIPUS));
            if ((Original_CIKKCSOPORT_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_CIKKCSOPORT_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_ERTEKESITES_TIPUSA == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ERTEKESITES_TIPUSA));
            }
            if ((Original_MEGYS_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_MEGYS_ID));
            }
            if ((Original_OTHER_FILTER_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_OTHER_FILTER_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_DEFAULT_RAKTAR.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_DEFAULT_RAKTAR.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_SZJ_SZAM == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_SZJ_SZAM));
            }
            if ((Original_CIKKSZAM == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_CIKKSZAM));
            }
            if ((Original_EAN_KOD == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_EAN_KOD));
            }
            if ((Original_MINIMUM_KESZLET.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((double)(Original_MINIMUM_KESZLET.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_OPTIMALIS_KESZLET.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((double)(Original_OPTIMALIS_KESZLET.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_ELADASI_AR.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((double)(Original_ELADASI_AR.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_HELYETTES_TERMEK.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((int)(Original_HELYETTES_TERMEK.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_MAX_KEDVEZMENY_SZ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((double)(Original_MAX_KEDVEZMENY_SZ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_MAX_KEDVEZM_FT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((double)(Original_MAX_KEDVEZM_FT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_MEGJEGYZES == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_MEGJEGYZES));
            }
            if ((Original_AKTIV.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((int)(Original_AKTIV.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_GYORSKOD == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_GYORSKOD));
            }
            if ((Original_SPEC_ZARAS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((int)(Original_SPEC_ZARAS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_RECEPT_MODSZER == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_RECEPT_MODSZER));
            }
            if ((Original_RECEPT_ALK_TART == null)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_RECEPT_ALK_TART));
            }
            if ((Original_RECEPT_POHAR == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_RECEPT_POHAR));
            }
            if ((Original_ELADASI_AR_NETTO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((double)(Original_ELADASI_AR_NETTO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_AUTO_MEGRENDELO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((int)(Original_AUTO_MEGRENDELO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_VIRTUAL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((int)(Original_VIRTUAL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_CIKK_ROVID_NEV == null)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((string)(Original_CIKK_ROVID_NEV));
            }
            if ((Original_CIKK_TOP_LIST.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((int)(Original_CIKK_TOP_LIST.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_CIKKCSOP_PREFER.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((int)(Original_CIKKCSOP_PREFER.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string MEGNEVEZES, 
                    int CIKK_TIPUS, 
                    global::System.Nullable<int> CIKKCSOPORT_ID, 
                    string ERTEKESITES_TIPUSA, 
                    string MEGYS_ID, 
                    global::System.Nullable<int> OTHER_FILTER_ID, 
                    global::System.Nullable<int> DEFAULT_RAKTAR, 
                    string SZJ_SZAM, 
                    string CIKKSZAM, 
                    string EAN_KOD, 
                    global::System.Nullable<double> MINIMUM_KESZLET, 
                    global::System.Nullable<double> OPTIMALIS_KESZLET, 
                    global::System.Nullable<double> ELADASI_AR, 
                    global::System.Nullable<int> HELYETTES_TERMEK, 
                    global::System.Nullable<double> MAX_KEDVEZMENY_SZ, 
                    global::System.Nullable<double> MAX_KEDVEZM_FT, 
                    string MEGJEGYZES, 
                    global::System.Nullable<int> AKTIV, 
                    string GYORSKOD, 
                    string RECEPT_TEXT, 
                    global::System.Nullable<int> SPEC_ZARAS, 
                    string RECEPT_MODSZER, 
                    string RECEPT_ALK_TART, 
                    string RECEPT_POHAR, 
                    global::System.Nullable<double> ELADASI_AR_NETTO, 
                    global::System.Nullable<int> AUTO_MEGRENDELO, 
                    global::System.Nullable<int> VIRTUAL, 
                    string CIKK_ROVID_NEV, 
                    global::System.Nullable<int> CIKK_TOP_LIST, 
                    global::System.Nullable<int> CIKKCSOP_PREFER) {
            if ((MEGNEVEZES == null)) {
                throw new global::System.ArgumentNullException("MEGNEVEZES");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MEGNEVEZES));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(CIKK_TIPUS));
            if ((CIKKCSOPORT_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(CIKKCSOPORT_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ERTEKESITES_TIPUSA == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ERTEKESITES_TIPUSA));
            }
            if ((MEGYS_ID == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(MEGYS_ID));
            }
            if ((OTHER_FILTER_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(OTHER_FILTER_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((DEFAULT_RAKTAR.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(DEFAULT_RAKTAR.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((SZJ_SZAM == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(SZJ_SZAM));
            }
            if ((CIKKSZAM == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(CIKKSZAM));
            }
            if ((EAN_KOD == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(EAN_KOD));
            }
            if ((MINIMUM_KESZLET.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((double)(MINIMUM_KESZLET.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((OPTIMALIS_KESZLET.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(OPTIMALIS_KESZLET.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((ELADASI_AR.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((double)(ELADASI_AR.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((HELYETTES_TERMEK.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(HELYETTES_TERMEK.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((MAX_KEDVEZMENY_SZ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((double)(MAX_KEDVEZMENY_SZ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((MAX_KEDVEZM_FT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((double)(MAX_KEDVEZM_FT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((MEGJEGYZES == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(MEGJEGYZES));
            }
            if ((AKTIV.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((int)(AKTIV.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((GYORSKOD == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(GYORSKOD));
            }
            if ((RECEPT_TEXT == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(RECEPT_TEXT));
            }
            if ((SPEC_ZARAS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(SPEC_ZARAS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((RECEPT_MODSZER == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(RECEPT_MODSZER));
            }
            if ((RECEPT_ALK_TART == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(RECEPT_ALK_TART));
            }
            if ((RECEPT_POHAR == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(RECEPT_POHAR));
            }
            if ((ELADASI_AR_NETTO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((double)(ELADASI_AR_NETTO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((AUTO_MEGRENDELO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((int)(AUTO_MEGRENDELO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((VIRTUAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((int)(VIRTUAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((CIKK_ROVID_NEV == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(CIKK_ROVID_NEV));
            }
            if ((CIKK_TOP_LIST.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((int)(CIKK_TOP_LIST.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((CIKKCSOP_PREFER.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((int)(CIKKCSOP_PREFER.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string MEGNEVEZES, 
                    int CIKK_TIPUS, 
                    global::System.Nullable<int> CIKKCSOPORT_ID, 
                    string ERTEKESITES_TIPUSA, 
                    string MEGYS_ID, 
                    global::System.Nullable<int> OTHER_FILTER_ID, 
                    global::System.Nullable<int> DEFAULT_RAKTAR, 
                    string SZJ_SZAM, 
                    string CIKKSZAM, 
                    string EAN_KOD, 
                    global::System.Nullable<double> MINIMUM_KESZLET, 
                    global::System.Nullable<double> OPTIMALIS_KESZLET, 
                    global::System.Nullable<double> ELADASI_AR, 
                    global::System.Nullable<int> HELYETTES_TERMEK, 
                    global::System.Nullable<double> MAX_KEDVEZMENY_SZ, 
                    global::System.Nullable<double> MAX_KEDVEZM_FT, 
                    string MEGJEGYZES, 
                    global::System.Nullable<int> AKTIV, 
                    string GYORSKOD, 
                    string RECEPT_TEXT, 
                    global::System.Nullable<int> SPEC_ZARAS, 
                    string RECEPT_MODSZER, 
                    string RECEPT_ALK_TART, 
                    string RECEPT_POHAR, 
                    global::System.Nullable<double> ELADASI_AR_NETTO, 
                    global::System.Nullable<int> AUTO_MEGRENDELO, 
                    global::System.Nullable<int> VIRTUAL, 
                    string CIKK_ROVID_NEV, 
                    global::System.Nullable<int> CIKK_TOP_LIST, 
                    global::System.Nullable<int> CIKKCSOP_PREFER, 
                    int Original_CIKK_ID, 
                    string Original_MEGNEVEZES, 
                    int Original_CIKK_TIPUS, 
                    global::System.Nullable<int> Original_CIKKCSOPORT_ID, 
                    string Original_ERTEKESITES_TIPUSA, 
                    string Original_MEGYS_ID, 
                    global::System.Nullable<int> Original_OTHER_FILTER_ID, 
                    global::System.Nullable<int> Original_DEFAULT_RAKTAR, 
                    string Original_SZJ_SZAM, 
                    string Original_CIKKSZAM, 
                    string Original_EAN_KOD, 
                    global::System.Nullable<double> Original_MINIMUM_KESZLET, 
                    global::System.Nullable<double> Original_OPTIMALIS_KESZLET, 
                    global::System.Nullable<double> Original_ELADASI_AR, 
                    global::System.Nullable<int> Original_HELYETTES_TERMEK, 
                    global::System.Nullable<double> Original_MAX_KEDVEZMENY_SZ, 
                    global::System.Nullable<double> Original_MAX_KEDVEZM_FT, 
                    string Original_MEGJEGYZES, 
                    global::System.Nullable<int> Original_AKTIV, 
                    string Original_GYORSKOD, 
                    global::System.Nullable<int> Original_SPEC_ZARAS, 
                    string Original_RECEPT_MODSZER, 
                    string Original_RECEPT_ALK_TART, 
                    string Original_RECEPT_POHAR, 
                    global::System.Nullable<double> Original_ELADASI_AR_NETTO, 
                    global::System.Nullable<int> Original_AUTO_MEGRENDELO, 
                    global::System.Nullable<int> Original_VIRTUAL, 
                    string Original_CIKK_ROVID_NEV, 
                    global::System.Nullable<int> Original_CIKK_TOP_LIST, 
                    global::System.Nullable<int> Original_CIKKCSOP_PREFER, 
                    int CIKK_ID) {
            if ((MEGNEVEZES == null)) {
                throw new global::System.ArgumentNullException("MEGNEVEZES");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MEGNEVEZES));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(CIKK_TIPUS));
            if ((CIKKCSOPORT_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(CIKKCSOPORT_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ERTEKESITES_TIPUSA == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ERTEKESITES_TIPUSA));
            }
            if ((MEGYS_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(MEGYS_ID));
            }
            if ((OTHER_FILTER_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(OTHER_FILTER_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((DEFAULT_RAKTAR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(DEFAULT_RAKTAR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((SZJ_SZAM == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(SZJ_SZAM));
            }
            if ((CIKKSZAM == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(CIKKSZAM));
            }
            if ((EAN_KOD == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(EAN_KOD));
            }
            if ((MINIMUM_KESZLET.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(MINIMUM_KESZLET.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((OPTIMALIS_KESZLET.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(OPTIMALIS_KESZLET.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((ELADASI_AR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(ELADASI_AR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((HELYETTES_TERMEK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(HELYETTES_TERMEK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((MAX_KEDVEZMENY_SZ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(MAX_KEDVEZMENY_SZ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((MAX_KEDVEZM_FT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(MAX_KEDVEZM_FT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((MEGJEGYZES == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(MEGJEGYZES));
            }
            if ((AKTIV.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(AKTIV.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((GYORSKOD == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(GYORSKOD));
            }
            if ((RECEPT_TEXT == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(RECEPT_TEXT));
            }
            if ((SPEC_ZARAS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(SPEC_ZARAS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((RECEPT_MODSZER == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(RECEPT_MODSZER));
            }
            if ((RECEPT_ALK_TART == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(RECEPT_ALK_TART));
            }
            if ((RECEPT_POHAR == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(RECEPT_POHAR));
            }
            if ((ELADASI_AR_NETTO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((double)(ELADASI_AR_NETTO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((AUTO_MEGRENDELO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(AUTO_MEGRENDELO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((VIRTUAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(VIRTUAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((CIKK_ROVID_NEV == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(CIKK_ROVID_NEV));
            }
            if ((CIKK_TOP_LIST.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(CIKK_TOP_LIST.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((CIKKCSOP_PREFER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(CIKKCSOP_PREFER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(Original_CIKK_ID));
            if ((Original_MEGNEVEZES == null)) {
                throw new global::System.ArgumentNullException("Original_MEGNEVEZES");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_MEGNEVEZES));
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(Original_CIKK_TIPUS));
            if ((Original_CIKKCSOPORT_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(Original_CIKKCSOPORT_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_ERTEKESITES_TIPUSA == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_ERTEKESITES_TIPUSA));
            }
            if ((Original_MEGYS_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_MEGYS_ID));
            }
            if ((Original_OTHER_FILTER_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(Original_OTHER_FILTER_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_DEFAULT_RAKTAR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(Original_DEFAULT_RAKTAR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_SZJ_SZAM == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_SZJ_SZAM));
            }
            if ((Original_CIKKSZAM == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_CIKKSZAM));
            }
            if ((Original_EAN_KOD == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_EAN_KOD));
            }
            if ((Original_MINIMUM_KESZLET.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((double)(Original_MINIMUM_KESZLET.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_OPTIMALIS_KESZLET.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((double)(Original_OPTIMALIS_KESZLET.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_ELADASI_AR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((double)(Original_ELADASI_AR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_HELYETTES_TERMEK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((int)(Original_HELYETTES_TERMEK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_MAX_KEDVEZMENY_SZ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((double)(Original_MAX_KEDVEZMENY_SZ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_MAX_KEDVEZM_FT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((double)(Original_MAX_KEDVEZM_FT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_MEGJEGYZES == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_MEGJEGYZES));
            }
            if ((Original_AKTIV.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((int)(Original_AKTIV.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_GYORSKOD == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(Original_GYORSKOD));
            }
            if ((Original_SPEC_ZARAS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((int)(Original_SPEC_ZARAS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_RECEPT_MODSZER == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Original_RECEPT_MODSZER));
            }
            if ((Original_RECEPT_ALK_TART == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(Original_RECEPT_ALK_TART));
            }
            if ((Original_RECEPT_POHAR == null)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((string)(Original_RECEPT_POHAR));
            }
            if ((Original_ELADASI_AR_NETTO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[76].Value = ((double)(Original_ELADASI_AR_NETTO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Original_AUTO_MEGRENDELO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[78].Value = ((int)(Original_AUTO_MEGRENDELO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Original_VIRTUAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[80].Value = ((int)(Original_VIRTUAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((Original_CIKK_ROVID_NEV == null)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[82].Value = ((string)(Original_CIKK_ROVID_NEV));
            }
            if ((Original_CIKK_TOP_LIST.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((int)(Original_CIKK_TOP_LIST.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((Original_CIKKCSOP_PREFER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[86].Value = ((int)(Original_CIKKCSOP_PREFER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[87].Value = ((int)(CIKK_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string MEGNEVEZES, 
                    int CIKK_TIPUS, 
                    global::System.Nullable<int> CIKKCSOPORT_ID, 
                    string ERTEKESITES_TIPUSA, 
                    string MEGYS_ID, 
                    global::System.Nullable<int> OTHER_FILTER_ID, 
                    global::System.Nullable<int> DEFAULT_RAKTAR, 
                    string SZJ_SZAM, 
                    string CIKKSZAM, 
                    string EAN_KOD, 
                    global::System.Nullable<double> MINIMUM_KESZLET, 
                    global::System.Nullable<double> OPTIMALIS_KESZLET, 
                    global::System.Nullable<double> ELADASI_AR, 
                    global::System.Nullable<int> HELYETTES_TERMEK, 
                    global::System.Nullable<double> MAX_KEDVEZMENY_SZ, 
                    global::System.Nullable<double> MAX_KEDVEZM_FT, 
                    string MEGJEGYZES, 
                    global::System.Nullable<int> AKTIV, 
                    string GYORSKOD, 
                    string RECEPT_TEXT, 
                    global::System.Nullable<int> SPEC_ZARAS, 
                    string RECEPT_MODSZER, 
                    string RECEPT_ALK_TART, 
                    string RECEPT_POHAR, 
                    global::System.Nullable<double> ELADASI_AR_NETTO, 
                    global::System.Nullable<int> AUTO_MEGRENDELO, 
                    global::System.Nullable<int> VIRTUAL, 
                    string CIKK_ROVID_NEV, 
                    global::System.Nullable<int> CIKK_TOP_LIST, 
                    global::System.Nullable<int> CIKKCSOP_PREFER, 
                    int Original_CIKK_ID, 
                    string Original_MEGNEVEZES, 
                    int Original_CIKK_TIPUS, 
                    global::System.Nullable<int> Original_CIKKCSOPORT_ID, 
                    string Original_ERTEKESITES_TIPUSA, 
                    string Original_MEGYS_ID, 
                    global::System.Nullable<int> Original_OTHER_FILTER_ID, 
                    global::System.Nullable<int> Original_DEFAULT_RAKTAR, 
                    string Original_SZJ_SZAM, 
                    string Original_CIKKSZAM, 
                    string Original_EAN_KOD, 
                    global::System.Nullable<double> Original_MINIMUM_KESZLET, 
                    global::System.Nullable<double> Original_OPTIMALIS_KESZLET, 
                    global::System.Nullable<double> Original_ELADASI_AR, 
                    global::System.Nullable<int> Original_HELYETTES_TERMEK, 
                    global::System.Nullable<double> Original_MAX_KEDVEZMENY_SZ, 
                    global::System.Nullable<double> Original_MAX_KEDVEZM_FT, 
                    string Original_MEGJEGYZES, 
                    global::System.Nullable<int> Original_AKTIV, 
                    string Original_GYORSKOD, 
                    global::System.Nullable<int> Original_SPEC_ZARAS, 
                    string Original_RECEPT_MODSZER, 
                    string Original_RECEPT_ALK_TART, 
                    string Original_RECEPT_POHAR, 
                    global::System.Nullable<double> Original_ELADASI_AR_NETTO, 
                    global::System.Nullable<int> Original_AUTO_MEGRENDELO, 
                    global::System.Nullable<int> Original_VIRTUAL, 
                    string Original_CIKK_ROVID_NEV, 
                    global::System.Nullable<int> Original_CIKK_TOP_LIST, 
                    global::System.Nullable<int> Original_CIKKCSOP_PREFER) {
            return this.Update(MEGNEVEZES, CIKK_TIPUS, CIKKCSOPORT_ID, ERTEKESITES_TIPUSA, MEGYS_ID, OTHER_FILTER_ID, DEFAULT_RAKTAR, SZJ_SZAM, CIKKSZAM, EAN_KOD, MINIMUM_KESZLET, OPTIMALIS_KESZLET, ELADASI_AR, HELYETTES_TERMEK, MAX_KEDVEZMENY_SZ, MAX_KEDVEZM_FT, MEGJEGYZES, AKTIV, GYORSKOD, RECEPT_TEXT, SPEC_ZARAS, RECEPT_MODSZER, RECEPT_ALK_TART, RECEPT_POHAR, ELADASI_AR_NETTO, AUTO_MEGRENDELO, VIRTUAL, CIKK_ROVID_NEV, CIKK_TOP_LIST, CIKKCSOP_PREFER, Original_CIKK_ID, Original_MEGNEVEZES, Original_CIKK_TIPUS, Original_CIKKCSOPORT_ID, Original_ERTEKESITES_TIPUSA, Original_MEGYS_ID, Original_OTHER_FILTER_ID, Original_DEFAULT_RAKTAR, Original_SZJ_SZAM, Original_CIKKSZAM, Original_EAN_KOD, Original_MINIMUM_KESZLET, Original_OPTIMALIS_KESZLET, Original_ELADASI_AR, Original_HELYETTES_TERMEK, Original_MAX_KEDVEZMENY_SZ, Original_MAX_KEDVEZM_FT, Original_MEGJEGYZES, Original_AKTIV, Original_GYORSKOD, Original_SPEC_ZARAS, Original_RECEPT_MODSZER, Original_RECEPT_ALK_TART, Original_RECEPT_POHAR, Original_ELADASI_AR_NETTO, Original_AUTO_MEGRENDELO, Original_VIRTUAL, Original_CIKK_ROVID_NEV, Original_CIKK_TOP_LIST, Original_CIKKCSOP_PREFER, Original_CIKK_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MEGYSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MEGYSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MEGYS";
            tableMapping.ColumnMappings.Add("MEGYS_ID", "MEGYS_ID");
            tableMapping.ColumnMappings.Add("MEGYS_MEGNEVEZES", "MEGYS_MEGNEVEZES");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[MEGYS] ([MEGYS_ID], [MEGYS_MEGNEVEZES]) VALUES (@MEGYS_ID, @ME" +
                "GYS_MEGNEVEZES)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEGYS_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGYS_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEGYS_MEGNEVEZES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGYS_MEGNEVEZES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::e_Cafe.Properties.Settings.Default.ECAFEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MEGYS_ID, MEGYS_MEGNEVEZES FROM dbo.MEGYS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(eCafe_Szamlakor.MEGYSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual eCafe_Szamlakor.MEGYSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            eCafe_Szamlakor.MEGYSDataTable dataTable = new eCafe_Szamlakor.MEGYSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(eCafe_Szamlakor.MEGYSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(eCafe_Szamlakor dataSet) {
            return this.Adapter.Update(dataSet, "MEGYS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MEGYS_ID, string MEGYS_MEGNEVEZES) {
            if ((MEGYS_ID == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MEGYS_ID));
            }
            if ((MEGYS_MEGNEVEZES == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MEGYS_MEGNEVEZES));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PARTNERTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PARTNERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PARTNER";
            tableMapping.ColumnMappings.Add("PARTNER_ID", "PARTNER_ID");
            tableMapping.ColumnMappings.Add("P_TIPUS", "P_TIPUS");
            tableMapping.ColumnMappings.Add("P_NEV", "P_NEV");
            tableMapping.ColumnMappings.Add("P_NEV2", "P_NEV2");
            tableMapping.ColumnMappings.Add("P_NEV3", "P_NEV3");
            tableMapping.ColumnMappings.Add("AKTIV", "AKTIV");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[PARTNER] WHERE (([PARTNER_ID] = @Original_PARTNER_ID) AND ((@IsNull_P_TIPUS = 1 AND [P_TIPUS] IS NULL) OR ([P_TIPUS] = @Original_P_TIPUS)) AND ((@IsNull_P_NEV = 1 AND [P_NEV] IS NULL) OR ([P_NEV] = @Original_P_NEV)) AND ((@IsNull_P_NEV2 = 1 AND [P_NEV2] IS NULL) OR ([P_NEV2] = @Original_P_NEV2)) AND ((@IsNull_P_NEV3 = 1 AND [P_NEV3] IS NULL) OR ([P_NEV3] = @Original_P_NEV3)) AND ((@IsNull_AKTIV = 1 AND [AKTIV] IS NULL) OR ([AKTIV] = @Original_AKTIV)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PARTNER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARTNER_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_P_TIPUS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_TIPUS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_P_TIPUS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_TIPUS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_P_NEV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_NEV", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_P_NEV", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_NEV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_P_NEV2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_NEV2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_P_NEV2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_NEV2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_P_NEV3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_NEV3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_P_NEV3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_NEV3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AKTIV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKTIV", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AKTIV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKTIV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[PARTNER] ([P_TIPUS], [P_NEV], [P_NEV2], [P_NEV3], [AKTIV]) VAL" +
                "UES (@P_TIPUS, @P_NEV, @P_NEV2, @P_NEV3, @AKTIV);\r\nSELECT PARTNER_ID, P_TIPUS, P" +
                "_NEV, P_NEV2, P_NEV3, AKTIV FROM PARTNER WHERE (PARTNER_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P_TIPUS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_TIPUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P_NEV", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_NEV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P_NEV2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_NEV2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P_NEV3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_NEV3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AKTIV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKTIV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[PARTNER] SET [P_TIPUS] = @P_TIPUS, [P_NEV] = @P_NEV, [P_NEV2] = @P_NEV2, [P_NEV3] = @P_NEV3, [AKTIV] = @AKTIV WHERE (([PARTNER_ID] = @Original_PARTNER_ID) AND ((@IsNull_P_TIPUS = 1 AND [P_TIPUS] IS NULL) OR ([P_TIPUS] = @Original_P_TIPUS)) AND ((@IsNull_P_NEV = 1 AND [P_NEV] IS NULL) OR ([P_NEV] = @Original_P_NEV)) AND ((@IsNull_P_NEV2 = 1 AND [P_NEV2] IS NULL) OR ([P_NEV2] = @Original_P_NEV2)) AND ((@IsNull_P_NEV3 = 1 AND [P_NEV3] IS NULL) OR ([P_NEV3] = @Original_P_NEV3)) AND ((@IsNull_AKTIV = 1 AND [AKTIV] IS NULL) OR ([AKTIV] = @Original_AKTIV)));
SELECT PARTNER_ID, P_TIPUS, P_NEV, P_NEV2, P_NEV3, AKTIV FROM PARTNER WHERE (PARTNER_ID = @PARTNER_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P_TIPUS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_TIPUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P_NEV", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_NEV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P_NEV2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_NEV2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P_NEV3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_NEV3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AKTIV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKTIV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PARTNER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARTNER_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_P_TIPUS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_TIPUS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_P_TIPUS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_TIPUS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_P_NEV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_NEV", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_P_NEV", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_NEV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_P_NEV2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_NEV2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_P_NEV2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_NEV2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_P_NEV3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_NEV3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_P_NEV3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P_NEV3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AKTIV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKTIV", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AKTIV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKTIV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PARTNER_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "PARTNER_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::e_Cafe.Properties.Settings.Default.ECAFEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PARTNER_ID, P_TIPUS, P_NEV, P_NEV2, P_NEV3, AKTIV FROM dbo.PARTNER";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(eCafe_Szamlakor.PARTNERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual eCafe_Szamlakor.PARTNERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            eCafe_Szamlakor.PARTNERDataTable dataTable = new eCafe_Szamlakor.PARTNERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(eCafe_Szamlakor.PARTNERDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(eCafe_Szamlakor dataSet) {
            return this.Adapter.Update(dataSet, "PARTNER");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_PARTNER_ID, string Original_P_TIPUS, string Original_P_NEV, string Original_P_NEV2, string Original_P_NEV3, global::System.Nullable<int> Original_AKTIV) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_PARTNER_ID));
            if ((Original_P_TIPUS == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_P_TIPUS));
            }
            if ((Original_P_NEV == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_P_NEV));
            }
            if ((Original_P_NEV2 == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_P_NEV2));
            }
            if ((Original_P_NEV3 == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_P_NEV3));
            }
            if ((Original_AKTIV.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_AKTIV.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string P_TIPUS, string P_NEV, string P_NEV2, string P_NEV3, global::System.Nullable<int> AKTIV) {
            if ((P_TIPUS == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(P_TIPUS));
            }
            if ((P_NEV == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(P_NEV));
            }
            if ((P_NEV2 == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(P_NEV2));
            }
            if ((P_NEV3 == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(P_NEV3));
            }
            if ((AKTIV.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(AKTIV.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string P_TIPUS, string P_NEV, string P_NEV2, string P_NEV3, global::System.Nullable<int> AKTIV, int Original_PARTNER_ID, string Original_P_TIPUS, string Original_P_NEV, string Original_P_NEV2, string Original_P_NEV3, global::System.Nullable<int> Original_AKTIV, int PARTNER_ID) {
            if ((P_TIPUS == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(P_TIPUS));
            }
            if ((P_NEV == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(P_NEV));
            }
            if ((P_NEV2 == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(P_NEV2));
            }
            if ((P_NEV3 == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(P_NEV3));
            }
            if ((AKTIV.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(AKTIV.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_PARTNER_ID));
            if ((Original_P_TIPUS == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_P_TIPUS));
            }
            if ((Original_P_NEV == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_P_NEV));
            }
            if ((Original_P_NEV2 == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_P_NEV2));
            }
            if ((Original_P_NEV3 == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_P_NEV3));
            }
            if ((Original_AKTIV.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_AKTIV.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(PARTNER_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string P_TIPUS, string P_NEV, string P_NEV2, string P_NEV3, global::System.Nullable<int> AKTIV, int Original_PARTNER_ID, string Original_P_TIPUS, string Original_P_NEV, string Original_P_NEV2, string Original_P_NEV3, global::System.Nullable<int> Original_AKTIV) {
            return this.Update(P_TIPUS, P_NEV, P_NEV2, P_NEV3, AKTIV, Original_PARTNER_ID, Original_P_TIPUS, Original_P_NEV, Original_P_NEV2, Original_P_NEV3, Original_AKTIV, Original_PARTNER_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RENDELES_FEJTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RENDELES_FEJTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RENDELES_FEJ";
            tableMapping.ColumnMappings.Add("RENDELES_ID", "RENDELES_ID");
            tableMapping.ColumnMappings.Add("ASZTAL_ID", "ASZTAL_ID");
            tableMapping.ColumnMappings.Add("DATUM", "DATUM");
            tableMapping.ColumnMappings.Add("PARTNER_ID", "PARTNER_ID");
            tableMapping.ColumnMappings.Add("FIZETVE", "FIZETVE");
            tableMapping.ColumnMappings.Add("AKTIV", "AKTIV");
            tableMapping.ColumnMappings.Add("USER_ID", "USER_ID");
            tableMapping.ColumnMappings.Add("EV", "EV");
            tableMapping.ColumnMappings.Add("HO", "HO");
            tableMapping.ColumnMappings.Add("NAP", "NAP");
            tableMapping.ColumnMappings.Add("KEDVEZMENY", "KEDVEZMENY");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[RENDELES_FEJ] WHERE (([RENDELES_ID] = @Original_RENDELES_ID) AND ([ASZTAL_ID] = @Original_ASZTAL_ID) AND ([DATUM] = @Original_DATUM) AND ((@IsNull_PARTNER_ID = 1 AND [PARTNER_ID] IS NULL) OR ([PARTNER_ID] = @Original_PARTNER_ID)) AND ((@IsNull_FIZETVE = 1 AND [FIZETVE] IS NULL) OR ([FIZETVE] = @Original_FIZETVE)) AND ((@IsNull_AKTIV = 1 AND [AKTIV] IS NULL) OR ([AKTIV] = @Original_AKTIV)) AND ((@IsNull_USER_ID = 1 AND [USER_ID] IS NULL) OR ([USER_ID] = @Original_USER_ID)) AND ((@IsNull_EV = 1 AND [EV] IS NULL) OR ([EV] = @Original_EV)) AND ((@IsNull_HO = 1 AND [HO] IS NULL) OR ([HO] = @Original_HO)) AND ((@IsNull_NAP = 1 AND [NAP] IS NULL) OR ([NAP] = @Original_NAP)) AND ((@IsNull_KEDVEZMENY = 1 AND [KEDVEZMENY] IS NULL) OR ([KEDVEZMENY] = @Original_KEDVEZMENY)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RENDELES_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RENDELES_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ASZTAL_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATUM", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PARTNER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARTNER_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PARTNER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARTNER_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FIZETVE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIZETVE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FIZETVE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIZETVE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AKTIV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKTIV", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AKTIV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKTIV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EV", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NAP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KEDVEZMENY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEDVEZMENY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEDVEZMENY", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEDVEZMENY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[RENDELES_FEJ] ([ASZTAL_ID], [DATUM], [PARTNER_ID], [FIZETVE], [AKTIV], [USER_ID], [EV], [HO], [NAP], [KEDVEZMENY]) VALUES (@ASZTAL_ID, @DATUM, @PARTNER_ID, @FIZETVE, @AKTIV, @USER_ID, @EV, @HO, @NAP, @KEDVEZMENY);
SELECT RENDELES_ID, ASZTAL_ID, DATUM, PARTNER_ID, FIZETVE, AKTIV, USER_ID, EV, HO, NAP, KEDVEZMENY FROM RENDELES_FEJ WHERE (RENDELES_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ASZTAL_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATUM", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PARTNER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARTNER_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIZETVE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIZETVE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AKTIV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKTIV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEDVEZMENY", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEDVEZMENY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[RENDELES_FEJ] SET [ASZTAL_ID] = @ASZTAL_ID, [DATUM] = @DATUM, [PARTNER_ID] = @PARTNER_ID, [FIZETVE] = @FIZETVE, [AKTIV] = @AKTIV, [USER_ID] = @USER_ID, [EV] = @EV, [HO] = @HO, [NAP] = @NAP, [KEDVEZMENY] = @KEDVEZMENY WHERE (([RENDELES_ID] = @Original_RENDELES_ID) AND ([ASZTAL_ID] = @Original_ASZTAL_ID) AND ([DATUM] = @Original_DATUM) AND ((@IsNull_PARTNER_ID = 1 AND [PARTNER_ID] IS NULL) OR ([PARTNER_ID] = @Original_PARTNER_ID)) AND ((@IsNull_FIZETVE = 1 AND [FIZETVE] IS NULL) OR ([FIZETVE] = @Original_FIZETVE)) AND ((@IsNull_AKTIV = 1 AND [AKTIV] IS NULL) OR ([AKTIV] = @Original_AKTIV)) AND ((@IsNull_USER_ID = 1 AND [USER_ID] IS NULL) OR ([USER_ID] = @Original_USER_ID)) AND ((@IsNull_EV = 1 AND [EV] IS NULL) OR ([EV] = @Original_EV)) AND ((@IsNull_HO = 1 AND [HO] IS NULL) OR ([HO] = @Original_HO)) AND ((@IsNull_NAP = 1 AND [NAP] IS NULL) OR ([NAP] = @Original_NAP)) AND ((@IsNull_KEDVEZMENY = 1 AND [KEDVEZMENY] IS NULL) OR ([KEDVEZMENY] = @Original_KEDVEZMENY)));
SELECT RENDELES_ID, ASZTAL_ID, DATUM, PARTNER_ID, FIZETVE, AKTIV, USER_ID, EV, HO, NAP, KEDVEZMENY FROM RENDELES_FEJ WHERE (RENDELES_ID = @RENDELES_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ASZTAL_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATUM", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PARTNER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARTNER_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIZETVE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIZETVE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AKTIV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKTIV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEDVEZMENY", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEDVEZMENY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RENDELES_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RENDELES_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ASZTAL_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASZTAL_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATUM", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PARTNER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARTNER_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PARTNER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARTNER_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FIZETVE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIZETVE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FIZETVE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIZETVE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AKTIV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKTIV", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AKTIV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKTIV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EV", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NAP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KEDVEZMENY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEDVEZMENY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEDVEZMENY", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEDVEZMENY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RENDELES_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "RENDELES_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::e_Cafe.Properties.Settings.Default.ECAFEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT RENDELES_ID, ASZTAL_ID, DATUM, PARTNER_ID, FIZETVE, AKTIV, USER_ID, EV, HO" +
                ", NAP, KEDVEZMENY FROM dbo.RENDELES_FEJ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(eCafe_Szamlakor.RENDELES_FEJDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual eCafe_Szamlakor.RENDELES_FEJDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            eCafe_Szamlakor.RENDELES_FEJDataTable dataTable = new eCafe_Szamlakor.RENDELES_FEJDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(eCafe_Szamlakor.RENDELES_FEJDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(eCafe_Szamlakor dataSet) {
            return this.Adapter.Update(dataSet, "RENDELES_FEJ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_RENDELES_ID, int Original_ASZTAL_ID, System.DateTime Original_DATUM, global::System.Nullable<int> Original_PARTNER_ID, global::System.Nullable<int> Original_FIZETVE, global::System.Nullable<int> Original_AKTIV, global::System.Nullable<int> Original_USER_ID, global::System.Nullable<int> Original_EV, global::System.Nullable<int> Original_HO, global::System.Nullable<int> Original_NAP, global::System.Nullable<double> Original_KEDVEZMENY) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_RENDELES_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ASZTAL_ID));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_DATUM));
            if ((Original_PARTNER_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_PARTNER_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_FIZETVE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_FIZETVE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_AKTIV.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_AKTIV.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_USER_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_USER_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_EV.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_EV.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_HO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_HO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_NAP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_NAP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_KEDVEZMENY.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((double)(Original_KEDVEZMENY.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ASZTAL_ID, System.DateTime DATUM, global::System.Nullable<int> PARTNER_ID, global::System.Nullable<int> FIZETVE, global::System.Nullable<int> AKTIV, global::System.Nullable<int> USER_ID, global::System.Nullable<int> EV, global::System.Nullable<int> HO, global::System.Nullable<int> NAP, global::System.Nullable<double> KEDVEZMENY) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ASZTAL_ID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(DATUM));
            if ((PARTNER_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(PARTNER_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((FIZETVE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(FIZETVE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((AKTIV.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(AKTIV.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((USER_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(USER_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((EV.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(EV.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((HO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(HO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((NAP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(NAP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((KEDVEZMENY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(KEDVEZMENY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ASZTAL_ID, 
                    System.DateTime DATUM, 
                    global::System.Nullable<int> PARTNER_ID, 
                    global::System.Nullable<int> FIZETVE, 
                    global::System.Nullable<int> AKTIV, 
                    global::System.Nullable<int> USER_ID, 
                    global::System.Nullable<int> EV, 
                    global::System.Nullable<int> HO, 
                    global::System.Nullable<int> NAP, 
                    global::System.Nullable<double> KEDVEZMENY, 
                    int Original_RENDELES_ID, 
                    int Original_ASZTAL_ID, 
                    System.DateTime Original_DATUM, 
                    global::System.Nullable<int> Original_PARTNER_ID, 
                    global::System.Nullable<int> Original_FIZETVE, 
                    global::System.Nullable<int> Original_AKTIV, 
                    global::System.Nullable<int> Original_USER_ID, 
                    global::System.Nullable<int> Original_EV, 
                    global::System.Nullable<int> Original_HO, 
                    global::System.Nullable<int> Original_NAP, 
                    global::System.Nullable<double> Original_KEDVEZMENY, 
                    int RENDELES_ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ASZTAL_ID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(DATUM));
            if ((PARTNER_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(PARTNER_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((FIZETVE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(FIZETVE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((AKTIV.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(AKTIV.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((USER_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(USER_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((EV.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(EV.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((HO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(HO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((NAP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(NAP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((KEDVEZMENY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(KEDVEZMENY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_RENDELES_ID));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_ASZTAL_ID));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_DATUM));
            if ((Original_PARTNER_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_PARTNER_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_FIZETVE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_FIZETVE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_AKTIV.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_AKTIV.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_USER_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_USER_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_EV.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_EV.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_HO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(Original_HO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_NAP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(Original_NAP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_KEDVEZMENY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((double)(Original_KEDVEZMENY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(RENDELES_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ASZTAL_ID, 
                    System.DateTime DATUM, 
                    global::System.Nullable<int> PARTNER_ID, 
                    global::System.Nullable<int> FIZETVE, 
                    global::System.Nullable<int> AKTIV, 
                    global::System.Nullable<int> USER_ID, 
                    global::System.Nullable<int> EV, 
                    global::System.Nullable<int> HO, 
                    global::System.Nullable<int> NAP, 
                    global::System.Nullable<double> KEDVEZMENY, 
                    int Original_RENDELES_ID, 
                    int Original_ASZTAL_ID, 
                    System.DateTime Original_DATUM, 
                    global::System.Nullable<int> Original_PARTNER_ID, 
                    global::System.Nullable<int> Original_FIZETVE, 
                    global::System.Nullable<int> Original_AKTIV, 
                    global::System.Nullable<int> Original_USER_ID, 
                    global::System.Nullable<int> Original_EV, 
                    global::System.Nullable<int> Original_HO, 
                    global::System.Nullable<int> Original_NAP, 
                    global::System.Nullable<double> Original_KEDVEZMENY) {
            return this.Update(ASZTAL_ID, DATUM, PARTNER_ID, FIZETVE, AKTIV, USER_ID, EV, HO, NAP, KEDVEZMENY, Original_RENDELES_ID, Original_ASZTAL_ID, Original_DATUM, Original_PARTNER_ID, Original_FIZETVE, Original_AKTIV, Original_USER_ID, Original_EV, Original_HO, Original_NAP, Original_KEDVEZMENY, Original_RENDELES_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RENDELES_SORTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RENDELES_SORTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RENDELES_SOR";
            tableMapping.ColumnMappings.Add("SOR_ID", "SOR_ID");
            tableMapping.ColumnMappings.Add("RENDELES_ID", "RENDELES_ID");
            tableMapping.ColumnMappings.Add("CIKK_ID", "CIKK_ID");
            tableMapping.ColumnMappings.Add("DB", "DB");
            tableMapping.ColumnMappings.Add("DATUM", "DATUM");
            tableMapping.ColumnMappings.Add("ERTEK", "ERTEK");
            tableMapping.ColumnMappings.Add("DELETED", "DELETED");
            tableMapping.ColumnMappings.Add("RAKTAR_ID", "RAKTAR_ID");
            tableMapping.ColumnMappings.Add("FIZETVE", "FIZETVE");
            tableMapping.ColumnMappings.Add("CANCELED", "CANCELED");
            tableMapping.ColumnMappings.Add("MODIFIED_USER", "MODIFIED_USER");
            tableMapping.ColumnMappings.Add("NETTO_ERTEK", "NETTO_ERTEK");
            tableMapping.ColumnMappings.Add("AFA_ERTEK", "AFA_ERTEK");
            tableMapping.ColumnMappings.Add("LIT_KISZ_ID", "LIT_KISZ_ID");
            tableMapping.ColumnMappings.Add("KEDVEZMENY", "KEDVEZMENY");
            tableMapping.ColumnMappings.Add("KEDV_PARTNER_ID", "KEDV_PARTNER_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[RENDELES_SOR] WHERE (([SOR_ID] = @Original_SOR_ID) AND ([RENDELES_ID] = @Original_RENDELES_ID) AND ([CIKK_ID] = @Original_CIKK_ID) AND ([DB] = @Original_DB) AND ((@IsNull_DATUM = 1 AND [DATUM] IS NULL) OR ([DATUM] = @Original_DATUM)) AND ((@IsNull_ERTEK = 1 AND [ERTEK] IS NULL) OR ([ERTEK] = @Original_ERTEK)) AND ([DELETED] = @Original_DELETED) AND ((@IsNull_RAKTAR_ID = 1 AND [RAKTAR_ID] IS NULL) OR ([RAKTAR_ID] = @Original_RAKTAR_ID)) AND ((@IsNull_FIZETVE = 1 AND [FIZETVE] IS NULL) OR ([FIZETVE] = @Original_FIZETVE)) AND ((@IsNull_CANCELED = 1 AND [CANCELED] IS NULL) OR ([CANCELED] = @Original_CANCELED)) AND ((@IsNull_MODIFIED_USER = 1 AND [MODIFIED_USER] IS NULL) OR ([MODIFIED_USER] = @Original_MODIFIED_USER)) AND ((@IsNull_NETTO_ERTEK = 1 AND [NETTO_ERTEK] IS NULL) OR ([NETTO_ERTEK] = @Original_NETTO_ERTEK)) AND ((@IsNull_AFA_ERTEK = 1 AND [AFA_ERTEK] IS NULL) OR ([AFA_ERTEK] = @Original_AFA_ERTEK)) AND ((@IsNull_LIT_KISZ_ID = 1 AND [LIT_KISZ_ID] IS NULL) OR ([LIT_KISZ_ID] = @Original_LIT_KISZ_ID)) AND ((@IsNull_KEDVEZMENY = 1 AND [KEDVEZMENY] IS NULL) OR ([KEDVEZMENY] = @Original_KEDVEZMENY)) AND ((@IsNull_KEDV_PARTNER_ID = 1 AND [KEDV_PARTNER_ID] IS NULL) OR ([KEDV_PARTNER_ID] = @Original_KEDV_PARTNER_ID)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SOR_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOR_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RENDELES_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RENDELES_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DB", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DATUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATUM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATUM", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ERTEK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ERTEK", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ERTEK", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ERTEK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DELETED", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DELETED", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RAKTAR_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAKTAR_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RAKTAR_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAKTAR_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FIZETVE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIZETVE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FIZETVE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIZETVE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CANCELED", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CANCELED", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CANCELED", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CANCELED", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_USER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_USER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MODIFIED_USER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_USER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NETTO_ERTEK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NETTO_ERTEK", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NETTO_ERTEK", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NETTO_ERTEK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AFA_ERTEK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA_ERTEK", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AFA_ERTEK", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA_ERTEK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LIT_KISZ_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LIT_KISZ_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LIT_KISZ_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LIT_KISZ_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KEDVEZMENY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEDVEZMENY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEDVEZMENY", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEDVEZMENY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KEDV_PARTNER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEDV_PARTNER_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEDV_PARTNER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEDV_PARTNER_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[RENDELES_SOR] ([RENDELES_ID], [CIKK_ID], [DB], [DATUM], [ERTEK], [DELETED], [RAKTAR_ID], [FIZETVE], [CANCELED], [MODIFIED_USER], [NETTO_ERTEK], [AFA_ERTEK], [LIT_KISZ_ID], [KEDVEZMENY], [KEDV_PARTNER_ID]) VALUES (@RENDELES_ID, @CIKK_ID, @DB, @DATUM, @ERTEK, @DELETED, @RAKTAR_ID, @FIZETVE, @CANCELED, @MODIFIED_USER, @NETTO_ERTEK, @AFA_ERTEK, @LIT_KISZ_ID, @KEDVEZMENY, @KEDV_PARTNER_ID);
SELECT SOR_ID, RENDELES_ID, CIKK_ID, DB, DATUM, ERTEK, DELETED, RAKTAR_ID, FIZETVE, CANCELED, MODIFIED_USER, NETTO_ERTEK, AFA_ERTEK, LIT_KISZ_ID, KEDVEZMENY, KEDV_PARTNER_ID FROM RENDELES_SOR WHERE (SOR_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RENDELES_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RENDELES_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DB", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATUM", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ERTEK", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ERTEK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DELETED", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DELETED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RAKTAR_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAKTAR_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIZETVE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIZETVE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CANCELED", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CANCELED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MODIFIED_USER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_USER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NETTO_ERTEK", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NETTO_ERTEK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AFA_ERTEK", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA_ERTEK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LIT_KISZ_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LIT_KISZ_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEDVEZMENY", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEDVEZMENY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEDV_PARTNER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEDV_PARTNER_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[RENDELES_SOR] SET [RENDELES_ID] = @RENDELES_ID, [CIKK_ID] = @CIKK_I" +
                "D, [DB] = @DB, [DATUM] = @DATUM, [ERTEK] = @ERTEK, [DELETED] = @DELETED, [RAKTAR" +
                "_ID] = @RAKTAR_ID, [FIZETVE] = @FIZETVE, [CANCELED] = @CANCELED, [MODIFIED_USER]" +
                " = @MODIFIED_USER, [NETTO_ERTEK] = @NETTO_ERTEK, [AFA_ERTEK] = @AFA_ERTEK, [LIT_" +
                "KISZ_ID] = @LIT_KISZ_ID, [KEDVEZMENY] = @KEDVEZMENY, [KEDV_PARTNER_ID] = @KEDV_P" +
                "ARTNER_ID WHERE (([SOR_ID] = @Original_SOR_ID) AND ([RENDELES_ID] = @Original_RE" +
                "NDELES_ID) AND ([CIKK_ID] = @Original_CIKK_ID) AND ([DB] = @Original_DB) AND ((@" +
                "IsNull_DATUM = 1 AND [DATUM] IS NULL) OR ([DATUM] = @Original_DATUM)) AND ((@IsN" +
                "ull_ERTEK = 1 AND [ERTEK] IS NULL) OR ([ERTEK] = @Original_ERTEK)) AND ([DELETED" +
                "] = @Original_DELETED) AND ((@IsNull_RAKTAR_ID = 1 AND [RAKTAR_ID] IS NULL) OR (" +
                "[RAKTAR_ID] = @Original_RAKTAR_ID)) AND ((@IsNull_FIZETVE = 1 AND [FIZETVE] IS N" +
                "ULL) OR ([FIZETVE] = @Original_FIZETVE)) AND ((@IsNull_CANCELED = 1 AND [CANCELE" +
                "D] IS NULL) OR ([CANCELED] = @Original_CANCELED)) AND ((@IsNull_MODIFIED_USER = " +
                "1 AND [MODIFIED_USER] IS NULL) OR ([MODIFIED_USER] = @Original_MODIFIED_USER)) A" +
                "ND ((@IsNull_NETTO_ERTEK = 1 AND [NETTO_ERTEK] IS NULL) OR ([NETTO_ERTEK] = @Ori" +
                "ginal_NETTO_ERTEK)) AND ((@IsNull_AFA_ERTEK = 1 AND [AFA_ERTEK] IS NULL) OR ([AF" +
                "A_ERTEK] = @Original_AFA_ERTEK)) AND ((@IsNull_LIT_KISZ_ID = 1 AND [LIT_KISZ_ID]" +
                " IS NULL) OR ([LIT_KISZ_ID] = @Original_LIT_KISZ_ID)) AND ((@IsNull_KEDVEZMENY =" +
                " 1 AND [KEDVEZMENY] IS NULL) OR ([KEDVEZMENY] = @Original_KEDVEZMENY)) AND ((@Is" +
                "Null_KEDV_PARTNER_ID = 1 AND [KEDV_PARTNER_ID] IS NULL) OR ([KEDV_PARTNER_ID] = " +
                "@Original_KEDV_PARTNER_ID)));\r\nSELECT SOR_ID, RENDELES_ID, CIKK_ID, DB, DATUM, E" +
                "RTEK, DELETED, RAKTAR_ID, FIZETVE, CANCELED, MODIFIED_USER, NETTO_ERTEK, AFA_ERT" +
                "EK, LIT_KISZ_ID, KEDVEZMENY, KEDV_PARTNER_ID FROM RENDELES_SOR WHERE (SOR_ID = @" +
                "SOR_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RENDELES_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RENDELES_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DB", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATUM", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ERTEK", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ERTEK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DELETED", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DELETED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RAKTAR_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAKTAR_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIZETVE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIZETVE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CANCELED", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CANCELED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MODIFIED_USER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_USER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NETTO_ERTEK", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NETTO_ERTEK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AFA_ERTEK", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA_ERTEK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LIT_KISZ_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LIT_KISZ_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEDVEZMENY", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEDVEZMENY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEDV_PARTNER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEDV_PARTNER_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SOR_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOR_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RENDELES_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RENDELES_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DB", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DATUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATUM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATUM", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ERTEK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ERTEK", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ERTEK", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ERTEK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DELETED", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DELETED", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RAKTAR_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAKTAR_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RAKTAR_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RAKTAR_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FIZETVE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIZETVE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FIZETVE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIZETVE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CANCELED", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CANCELED", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CANCELED", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CANCELED", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_USER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_USER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MODIFIED_USER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_USER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NETTO_ERTEK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NETTO_ERTEK", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NETTO_ERTEK", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NETTO_ERTEK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AFA_ERTEK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA_ERTEK", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AFA_ERTEK", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA_ERTEK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LIT_KISZ_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LIT_KISZ_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LIT_KISZ_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LIT_KISZ_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KEDVEZMENY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEDVEZMENY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEDVEZMENY", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEDVEZMENY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KEDV_PARTNER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEDV_PARTNER_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEDV_PARTNER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEDV_PARTNER_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SOR_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "SOR_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::e_Cafe.Properties.Settings.Default.ECAFEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT SOR_ID, RENDELES_ID, CIKK_ID, DB, DATUM, ERTEK, DELETED, RAKTAR_ID, FIZETV" +
                "E, CANCELED, MODIFIED_USER, NETTO_ERTEK, AFA_ERTEK, LIT_KISZ_ID, KEDVEZMENY, KED" +
                "V_PARTNER_ID FROM dbo.RENDELES_SOR";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(eCafe_Szamlakor.RENDELES_SORDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual eCafe_Szamlakor.RENDELES_SORDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            eCafe_Szamlakor.RENDELES_SORDataTable dataTable = new eCafe_Szamlakor.RENDELES_SORDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(eCafe_Szamlakor.RENDELES_SORDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(eCafe_Szamlakor dataSet) {
            return this.Adapter.Update(dataSet, "RENDELES_SOR");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_SOR_ID, 
                    int Original_RENDELES_ID, 
                    int Original_CIKK_ID, 
                    double Original_DB, 
                    global::System.Nullable<global::System.DateTime> Original_DATUM, 
                    global::System.Nullable<double> Original_ERTEK, 
                    int Original_DELETED, 
                    global::System.Nullable<int> Original_RAKTAR_ID, 
                    global::System.Nullable<int> Original_FIZETVE, 
                    global::System.Nullable<int> Original_CANCELED, 
                    global::System.Nullable<int> Original_MODIFIED_USER, 
                    global::System.Nullable<double> Original_NETTO_ERTEK, 
                    global::System.Nullable<double> Original_AFA_ERTEK, 
                    global::System.Nullable<int> Original_LIT_KISZ_ID, 
                    global::System.Nullable<double> Original_KEDVEZMENY, 
                    global::System.Nullable<int> Original_KEDV_PARTNER_ID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_SOR_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_RENDELES_ID));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_CIKK_ID));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((double)(Original_DB));
            if ((Original_DATUM.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_DATUM.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_ERTEK.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((double)(Original_ERTEK.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_DELETED));
            if ((Original_RAKTAR_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_RAKTAR_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_FIZETVE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_FIZETVE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_CANCELED.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_CANCELED.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_MODIFIED_USER.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_MODIFIED_USER.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_NETTO_ERTEK.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((double)(Original_NETTO_ERTEK.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_AFA_ERTEK.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((double)(Original_AFA_ERTEK.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_LIT_KISZ_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((int)(Original_LIT_KISZ_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_KEDVEZMENY.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((double)(Original_KEDVEZMENY.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_KEDV_PARTNER_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((int)(Original_KEDV_PARTNER_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int RENDELES_ID, int CIKK_ID, double DB, global::System.Nullable<global::System.DateTime> DATUM, global::System.Nullable<double> ERTEK, int DELETED, global::System.Nullable<int> RAKTAR_ID, global::System.Nullable<int> FIZETVE, global::System.Nullable<int> CANCELED, global::System.Nullable<int> MODIFIED_USER, global::System.Nullable<double> NETTO_ERTEK, global::System.Nullable<double> AFA_ERTEK, global::System.Nullable<int> LIT_KISZ_ID, global::System.Nullable<double> KEDVEZMENY, global::System.Nullable<int> KEDV_PARTNER_ID) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(RENDELES_ID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(CIKK_ID));
            this.Adapter.InsertCommand.Parameters[2].Value = ((double)(DB));
            if ((DATUM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(DATUM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ERTEK.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(ERTEK.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(DELETED));
            if ((RAKTAR_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(RAKTAR_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((FIZETVE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(FIZETVE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((CANCELED.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(CANCELED.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((MODIFIED_USER.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(MODIFIED_USER.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((NETTO_ERTEK.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((double)(NETTO_ERTEK.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((AFA_ERTEK.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(AFA_ERTEK.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((LIT_KISZ_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(LIT_KISZ_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((KEDVEZMENY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((double)(KEDVEZMENY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((KEDV_PARTNER_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(KEDV_PARTNER_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int RENDELES_ID, 
                    int CIKK_ID, 
                    double DB, 
                    global::System.Nullable<global::System.DateTime> DATUM, 
                    global::System.Nullable<double> ERTEK, 
                    int DELETED, 
                    global::System.Nullable<int> RAKTAR_ID, 
                    global::System.Nullable<int> FIZETVE, 
                    global::System.Nullable<int> CANCELED, 
                    global::System.Nullable<int> MODIFIED_USER, 
                    global::System.Nullable<double> NETTO_ERTEK, 
                    global::System.Nullable<double> AFA_ERTEK, 
                    global::System.Nullable<int> LIT_KISZ_ID, 
                    global::System.Nullable<double> KEDVEZMENY, 
                    global::System.Nullable<int> KEDV_PARTNER_ID, 
                    int Original_SOR_ID, 
                    int Original_RENDELES_ID, 
                    int Original_CIKK_ID, 
                    double Original_DB, 
                    global::System.Nullable<global::System.DateTime> Original_DATUM, 
                    global::System.Nullable<double> Original_ERTEK, 
                    int Original_DELETED, 
                    global::System.Nullable<int> Original_RAKTAR_ID, 
                    global::System.Nullable<int> Original_FIZETVE, 
                    global::System.Nullable<int> Original_CANCELED, 
                    global::System.Nullable<int> Original_MODIFIED_USER, 
                    global::System.Nullable<double> Original_NETTO_ERTEK, 
                    global::System.Nullable<double> Original_AFA_ERTEK, 
                    global::System.Nullable<int> Original_LIT_KISZ_ID, 
                    global::System.Nullable<double> Original_KEDVEZMENY, 
                    global::System.Nullable<int> Original_KEDV_PARTNER_ID, 
                    int SOR_ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(RENDELES_ID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(CIKK_ID));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(DB));
            if ((DATUM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(DATUM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ERTEK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(ERTEK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(DELETED));
            if ((RAKTAR_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(RAKTAR_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((FIZETVE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(FIZETVE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((CANCELED.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(CANCELED.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((MODIFIED_USER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(MODIFIED_USER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((NETTO_ERTEK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(NETTO_ERTEK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((AFA_ERTEK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(AFA_ERTEK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((LIT_KISZ_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(LIT_KISZ_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((KEDVEZMENY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(KEDVEZMENY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((KEDV_PARTNER_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(KEDV_PARTNER_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_SOR_ID));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_RENDELES_ID));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_CIKK_ID));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(Original_DB));
            if ((Original_DATUM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_DATUM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_ERTEK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(Original_ERTEK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_DELETED));
            if ((Original_RAKTAR_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(Original_RAKTAR_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_FIZETVE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(Original_FIZETVE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_CANCELED.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(Original_CANCELED.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_MODIFIED_USER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(Original_MODIFIED_USER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_NETTO_ERTEK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((double)(Original_NETTO_ERTEK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_AFA_ERTEK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((double)(Original_AFA_ERTEK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_LIT_KISZ_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(Original_LIT_KISZ_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_KEDVEZMENY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((double)(Original_KEDVEZMENY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_KEDV_PARTNER_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(Original_KEDV_PARTNER_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(SOR_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int RENDELES_ID, 
                    int CIKK_ID, 
                    double DB, 
                    global::System.Nullable<global::System.DateTime> DATUM, 
                    global::System.Nullable<double> ERTEK, 
                    int DELETED, 
                    global::System.Nullable<int> RAKTAR_ID, 
                    global::System.Nullable<int> FIZETVE, 
                    global::System.Nullable<int> CANCELED, 
                    global::System.Nullable<int> MODIFIED_USER, 
                    global::System.Nullable<double> NETTO_ERTEK, 
                    global::System.Nullable<double> AFA_ERTEK, 
                    global::System.Nullable<int> LIT_KISZ_ID, 
                    global::System.Nullable<double> KEDVEZMENY, 
                    global::System.Nullable<int> KEDV_PARTNER_ID, 
                    int Original_SOR_ID, 
                    int Original_RENDELES_ID, 
                    int Original_CIKK_ID, 
                    double Original_DB, 
                    global::System.Nullable<global::System.DateTime> Original_DATUM, 
                    global::System.Nullable<double> Original_ERTEK, 
                    int Original_DELETED, 
                    global::System.Nullable<int> Original_RAKTAR_ID, 
                    global::System.Nullable<int> Original_FIZETVE, 
                    global::System.Nullable<int> Original_CANCELED, 
                    global::System.Nullable<int> Original_MODIFIED_USER, 
                    global::System.Nullable<double> Original_NETTO_ERTEK, 
                    global::System.Nullable<double> Original_AFA_ERTEK, 
                    global::System.Nullable<int> Original_LIT_KISZ_ID, 
                    global::System.Nullable<double> Original_KEDVEZMENY, 
                    global::System.Nullable<int> Original_KEDV_PARTNER_ID) {
            return this.Update(RENDELES_ID, CIKK_ID, DB, DATUM, ERTEK, DELETED, RAKTAR_ID, FIZETVE, CANCELED, MODIFIED_USER, NETTO_ERTEK, AFA_ERTEK, LIT_KISZ_ID, KEDVEZMENY, KEDV_PARTNER_ID, Original_SOR_ID, Original_RENDELES_ID, Original_CIKK_ID, Original_DB, Original_DATUM, Original_ERTEK, Original_DELETED, Original_RAKTAR_ID, Original_FIZETVE, Original_CANCELED, Original_MODIFIED_USER, Original_NETTO_ERTEK, Original_AFA_ERTEK, Original_LIT_KISZ_ID, Original_KEDVEZMENY, Original_KEDV_PARTNER_ID, Original_SOR_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SZAMLA_FEJTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SZAMLA_FEJTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SZAMLA_FEJ";
            tableMapping.ColumnMappings.Add("SZAMLA_FEJ_ID", "SZAMLA_FEJ_ID");
            tableMapping.ColumnMappings.Add("SZAMLA_SORSZAM", "SZAMLA_SORSZAM");
            tableMapping.ColumnMappings.Add("PARTNER_ID", "PARTNER_ID");
            tableMapping.ColumnMappings.Add("RENDELES_ID", "RENDELES_ID");
            tableMapping.ColumnMappings.Add("OSSZESEN_NETTO", "OSSZESEN_NETTO");
            tableMapping.ColumnMappings.Add("OSSZESEN_BRUTTO", "OSSZESEN_BRUTTO");
            tableMapping.ColumnMappings.Add("OSSZESEN_AFA", "OSSZESEN_AFA");
            tableMapping.ColumnMappings.Add("KEDVEZMENY", "KEDVEZMENY");
            tableMapping.ColumnMappings.Add("FIZETETT_OSSZEG", "FIZETETT_OSSZEG");
            tableMapping.ColumnMappings.Add("FIZETESI_MOD", "FIZETESI_MOD");
            tableMapping.ColumnMappings.Add("SZAMLA_DATUMA", "SZAMLA_DATUMA");
            tableMapping.ColumnMappings.Add("EV", "EV");
            tableMapping.ColumnMappings.Add("HO", "HO");
            tableMapping.ColumnMappings.Add("NAP", "NAP");
            tableMapping.ColumnMappings.Add("USER_ID", "USER_ID");
            tableMapping.ColumnMappings.Add("P_NEV", "P_NEV");
            tableMapping.ColumnMappings.Add("P_NEV2", "P_NEV2");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::e_Cafe.Properties.Settings.Default.ECAFEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        SZAMLA_FEJ.SZAMLA_FEJ_ID, SZAMLA_FEJ.SZAMLA_SORSZAM, SZAMLA_FEJ.PARTNER_ID, SZAMLA_FEJ.RENDELES_ID, SZAMLA_FEJ.OSSZESEN_NETTO, 
                         SZAMLA_FEJ.OSSZESEN_BRUTTO, SZAMLA_FEJ.OSSZESEN_AFA, SZAMLA_FEJ.KEDVEZMENY, SZAMLA_FEJ.FIZETETT_OSSZEG, SZAMLA_FEJ.FIZETESI_MOD, 
                         SZAMLA_FEJ.SZAMLA_DATUMA, SZAMLA_FEJ.EV, SZAMLA_FEJ.HO, SZAMLA_FEJ.NAP, SZAMLA_FEJ.USER_ID, PARTNER.P_NEV, PARTNER.P_NEV2
FROM            SZAMLA_FEJ LEFT OUTER JOIN
                         PARTNER ON SZAMLA_FEJ.PARTNER_ID = PARTNER.PARTNER_ID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(eCafe_Szamlakor.SZAMLA_FEJDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual eCafe_Szamlakor.SZAMLA_FEJDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            eCafe_Szamlakor.SZAMLA_FEJDataTable dataTable = new eCafe_Szamlakor.SZAMLA_FEJDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SZAMLA_TETELTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SZAMLA_TETELTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SZAMLA_TETEL";
            tableMapping.ColumnMappings.Add("TETEL_ID", "TETEL_ID");
            tableMapping.ColumnMappings.Add("RENDELES_SOR_ID", "RENDELES_SOR_ID");
            tableMapping.ColumnMappings.Add("CIKK_ID", "CIKK_ID");
            tableMapping.ColumnMappings.Add("MENNYISEG", "MENNYISEG");
            tableMapping.ColumnMappings.Add("EGYSEGAR", "EGYSEGAR");
            tableMapping.ColumnMappings.Add("NETTO", "NETTO");
            tableMapping.ColumnMappings.Add("AFA", "AFA");
            tableMapping.ColumnMappings.Add("BRUTTO", "BRUTTO");
            tableMapping.ColumnMappings.Add("AFA_KOD", "AFA_KOD");
            tableMapping.ColumnMappings.Add("MEGJEGYZES", "MEGJEGYZES");
            tableMapping.ColumnMappings.Add("CIKK_MEGNEVEZES", "CIKK_MEGNEVEZES");
            tableMapping.ColumnMappings.Add("SZAMLA_FEJ_ID", "SZAMLA_FEJ_ID");
            tableMapping.ColumnMappings.Add("KALK_MENNYISEG", "KALK_MENNYISEG");
            tableMapping.ColumnMappings.Add("KEDVEZMENY", "KEDVEZMENY");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[SZAMLA_TETEL] WHERE (([TETEL_ID] = @Original_TETEL_ID) AND ([RENDELES_SOR_ID] = @Original_RENDELES_SOR_ID) AND ((@IsNull_CIKK_ID = 1 AND [CIKK_ID] IS NULL) OR ([CIKK_ID] = @Original_CIKK_ID)) AND ((@IsNull_MENNYISEG = 1 AND [MENNYISEG] IS NULL) OR ([MENNYISEG] = @Original_MENNYISEG)) AND ((@IsNull_EGYSEGAR = 1 AND [EGYSEGAR] IS NULL) OR ([EGYSEGAR] = @Original_EGYSEGAR)) AND ((@IsNull_NETTO = 1 AND [NETTO] IS NULL) OR ([NETTO] = @Original_NETTO)) AND ((@IsNull_AFA = 1 AND [AFA] IS NULL) OR ([AFA] = @Original_AFA)) AND ((@IsNull_BRUTTO = 1 AND [BRUTTO] IS NULL) OR ([BRUTTO] = @Original_BRUTTO)) AND ((@IsNull_AFA_KOD = 1 AND [AFA_KOD] IS NULL) OR ([AFA_KOD] = @Original_AFA_KOD)) AND ((@IsNull_MEGJEGYZES = 1 AND [MEGJEGYZES] IS NULL) OR ([MEGJEGYZES] = @Original_MEGJEGYZES)) AND ((@IsNull_CIKK_MEGNEVEZES = 1 AND [CIKK_MEGNEVEZES] IS NULL) OR ([CIKK_MEGNEVEZES] = @Original_CIKK_MEGNEVEZES)) AND ([SZAMLA_FEJ_ID] = @Original_SZAMLA_FEJ_ID) AND ((@IsNull_KALK_MENNYISEG = 1 AND [KALK_MENNYISEG] IS NULL) OR ([KALK_MENNYISEG] = @Original_KALK_MENNYISEG)) AND ((@IsNull_KEDVEZMENY = 1 AND [KEDVEZMENY] IS NULL) OR ([KEDVEZMENY] = @Original_KEDVEZMENY)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TETEL_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TETEL_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RENDELES_SOR_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RENDELES_SOR_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CIKK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MENNYISEG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MENNYISEG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MENNYISEG", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MENNYISEG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EGYSEGAR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EGYSEGAR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EGYSEGAR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EGYSEGAR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NETTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NETTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NETTO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NETTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AFA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AFA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BRUTTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BRUTTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BRUTTO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BRUTTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AFA_KOD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA_KOD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AFA_KOD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA_KOD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MEGJEGYZES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGJEGYZES", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEGJEGYZES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGJEGYZES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CIKK_MEGNEVEZES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_MEGNEVEZES", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKK_MEGNEVEZES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_MEGNEVEZES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SZAMLA_FEJ_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZAMLA_FEJ_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KALK_MENNYISEG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KALK_MENNYISEG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KALK_MENNYISEG", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KALK_MENNYISEG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KEDVEZMENY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEDVEZMENY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEDVEZMENY", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEDVEZMENY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[SZAMLA_TETEL] ([RENDELES_SOR_ID], [CIKK_ID], [MENNYISEG], [EGYSEGAR], [NETTO], [AFA], [BRUTTO], [AFA_KOD], [MEGJEGYZES], [CIKK_MEGNEVEZES], [SZAMLA_FEJ_ID], [KALK_MENNYISEG], [KEDVEZMENY]) VALUES (@RENDELES_SOR_ID, @CIKK_ID, @MENNYISEG, @EGYSEGAR, @NETTO, @AFA, @BRUTTO, @AFA_KOD, @MEGJEGYZES, @CIKK_MEGNEVEZES, @SZAMLA_FEJ_ID, @KALK_MENNYISEG, @KEDVEZMENY);
SELECT TETEL_ID, RENDELES_SOR_ID, CIKK_ID, MENNYISEG, EGYSEGAR, NETTO, AFA, BRUTTO, AFA_KOD, MEGJEGYZES, CIKK_MEGNEVEZES, SZAMLA_FEJ_ID, KALK_MENNYISEG, KEDVEZMENY FROM SZAMLA_TETEL WHERE (TETEL_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RENDELES_SOR_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RENDELES_SOR_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MENNYISEG", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MENNYISEG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EGYSEGAR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EGYSEGAR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NETTO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NETTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AFA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BRUTTO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BRUTTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AFA_KOD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA_KOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEGJEGYZES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGJEGYZES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKK_MEGNEVEZES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_MEGNEVEZES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SZAMLA_FEJ_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZAMLA_FEJ_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KALK_MENNYISEG", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KALK_MENNYISEG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEDVEZMENY", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEDVEZMENY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[SZAMLA_TETEL] SET [RENDELES_SOR_ID] = @RENDELES_SOR_ID, [CIKK_ID] =" +
                " @CIKK_ID, [MENNYISEG] = @MENNYISEG, [EGYSEGAR] = @EGYSEGAR, [NETTO] = @NETTO, [" +
                "AFA] = @AFA, [BRUTTO] = @BRUTTO, [AFA_KOD] = @AFA_KOD, [MEGJEGYZES] = @MEGJEGYZE" +
                "S, [CIKK_MEGNEVEZES] = @CIKK_MEGNEVEZES, [SZAMLA_FEJ_ID] = @SZAMLA_FEJ_ID, [KALK" +
                "_MENNYISEG] = @KALK_MENNYISEG, [KEDVEZMENY] = @KEDVEZMENY WHERE (([TETEL_ID] = @" +
                "Original_TETEL_ID) AND ([RENDELES_SOR_ID] = @Original_RENDELES_SOR_ID) AND ((@Is" +
                "Null_CIKK_ID = 1 AND [CIKK_ID] IS NULL) OR ([CIKK_ID] = @Original_CIKK_ID)) AND " +
                "((@IsNull_MENNYISEG = 1 AND [MENNYISEG] IS NULL) OR ([MENNYISEG] = @Original_MEN" +
                "NYISEG)) AND ((@IsNull_EGYSEGAR = 1 AND [EGYSEGAR] IS NULL) OR ([EGYSEGAR] = @Or" +
                "iginal_EGYSEGAR)) AND ((@IsNull_NETTO = 1 AND [NETTO] IS NULL) OR ([NETTO] = @Or" +
                "iginal_NETTO)) AND ((@IsNull_AFA = 1 AND [AFA] IS NULL) OR ([AFA] = @Original_AF" +
                "A)) AND ((@IsNull_BRUTTO = 1 AND [BRUTTO] IS NULL) OR ([BRUTTO] = @Original_BRUT" +
                "TO)) AND ((@IsNull_AFA_KOD = 1 AND [AFA_KOD] IS NULL) OR ([AFA_KOD] = @Original_" +
                "AFA_KOD)) AND ((@IsNull_MEGJEGYZES = 1 AND [MEGJEGYZES] IS NULL) OR ([MEGJEGYZES" +
                "] = @Original_MEGJEGYZES)) AND ((@IsNull_CIKK_MEGNEVEZES = 1 AND [CIKK_MEGNEVEZE" +
                "S] IS NULL) OR ([CIKK_MEGNEVEZES] = @Original_CIKK_MEGNEVEZES)) AND ([SZAMLA_FEJ" +
                "_ID] = @Original_SZAMLA_FEJ_ID) AND ((@IsNull_KALK_MENNYISEG = 1 AND [KALK_MENNY" +
                "ISEG] IS NULL) OR ([KALK_MENNYISEG] = @Original_KALK_MENNYISEG)) AND ((@IsNull_K" +
                "EDVEZMENY = 1 AND [KEDVEZMENY] IS NULL) OR ([KEDVEZMENY] = @Original_KEDVEZMENY)" +
                "));\r\nSELECT TETEL_ID, RENDELES_SOR_ID, CIKK_ID, MENNYISEG, EGYSEGAR, NETTO, AFA," +
                " BRUTTO, AFA_KOD, MEGJEGYZES, CIKK_MEGNEVEZES, SZAMLA_FEJ_ID, KALK_MENNYISEG, KE" +
                "DVEZMENY FROM SZAMLA_TETEL WHERE (TETEL_ID = @TETEL_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RENDELES_SOR_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RENDELES_SOR_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MENNYISEG", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MENNYISEG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EGYSEGAR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EGYSEGAR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NETTO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NETTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AFA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BRUTTO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BRUTTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AFA_KOD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA_KOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEGJEGYZES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGJEGYZES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKK_MEGNEVEZES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_MEGNEVEZES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SZAMLA_FEJ_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZAMLA_FEJ_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KALK_MENNYISEG", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KALK_MENNYISEG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEDVEZMENY", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEDVEZMENY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TETEL_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TETEL_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RENDELES_SOR_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RENDELES_SOR_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CIKK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MENNYISEG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MENNYISEG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MENNYISEG", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MENNYISEG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EGYSEGAR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EGYSEGAR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EGYSEGAR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EGYSEGAR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NETTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NETTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NETTO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NETTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AFA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AFA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BRUTTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BRUTTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BRUTTO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BRUTTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AFA_KOD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA_KOD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AFA_KOD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AFA_KOD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MEGJEGYZES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGJEGYZES", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEGJEGYZES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGJEGYZES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CIKK_MEGNEVEZES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_MEGNEVEZES", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKK_MEGNEVEZES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_MEGNEVEZES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SZAMLA_FEJ_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZAMLA_FEJ_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KALK_MENNYISEG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KALK_MENNYISEG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KALK_MENNYISEG", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KALK_MENNYISEG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KEDVEZMENY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEDVEZMENY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEDVEZMENY", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEDVEZMENY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TETEL_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "TETEL_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::e_Cafe.Properties.Settings.Default.ECAFEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TETEL_ID, RENDELES_SOR_ID, CIKK_ID, MENNYISEG, EGYSEGAR, NETTO, AFA, BRUTT" +
                "O, AFA_KOD, MEGJEGYZES, CIKK_MEGNEVEZES, SZAMLA_FEJ_ID, KALK_MENNYISEG, KEDVEZME" +
                "NY FROM dbo.SZAMLA_TETEL";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(eCafe_Szamlakor.SZAMLA_TETELDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual eCafe_Szamlakor.SZAMLA_TETELDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            eCafe_Szamlakor.SZAMLA_TETELDataTable dataTable = new eCafe_Szamlakor.SZAMLA_TETELDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(eCafe_Szamlakor.SZAMLA_TETELDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(eCafe_Szamlakor dataSet) {
            return this.Adapter.Update(dataSet, "SZAMLA_TETEL");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_TETEL_ID, int Original_RENDELES_SOR_ID, global::System.Nullable<int> Original_CIKK_ID, global::System.Nullable<double> Original_MENNYISEG, global::System.Nullable<double> Original_EGYSEGAR, global::System.Nullable<double> Original_NETTO, global::System.Nullable<double> Original_AFA, global::System.Nullable<double> Original_BRUTTO, string Original_AFA_KOD, string Original_MEGJEGYZES, string Original_CIKK_MEGNEVEZES, int Original_SZAMLA_FEJ_ID, global::System.Nullable<double> Original_KALK_MENNYISEG, global::System.Nullable<double> Original_KEDVEZMENY) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_TETEL_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_RENDELES_SOR_ID));
            if ((Original_CIKK_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_CIKK_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_MENNYISEG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((double)(Original_MENNYISEG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_EGYSEGAR.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((double)(Original_EGYSEGAR.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_NETTO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((double)(Original_NETTO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_AFA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((double)(Original_AFA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_BRUTTO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((double)(Original_BRUTTO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_AFA_KOD == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_AFA_KOD));
            }
            if ((Original_MEGJEGYZES == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_MEGJEGYZES));
            }
            if ((Original_CIKK_MEGNEVEZES == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_CIKK_MEGNEVEZES));
            }
            this.Adapter.DeleteCommand.Parameters[20].Value = ((int)(Original_SZAMLA_FEJ_ID));
            if ((Original_KALK_MENNYISEG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((double)(Original_KALK_MENNYISEG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_KEDVEZMENY.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((double)(Original_KEDVEZMENY.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int RENDELES_SOR_ID, global::System.Nullable<int> CIKK_ID, global::System.Nullable<double> MENNYISEG, global::System.Nullable<double> EGYSEGAR, global::System.Nullable<double> NETTO, global::System.Nullable<double> AFA, global::System.Nullable<double> BRUTTO, string AFA_KOD, string MEGJEGYZES, string CIKK_MEGNEVEZES, int SZAMLA_FEJ_ID, global::System.Nullable<double> KALK_MENNYISEG, global::System.Nullable<double> KEDVEZMENY) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(RENDELES_SOR_ID));
            if ((CIKK_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(CIKK_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((MENNYISEG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(MENNYISEG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((EGYSEGAR.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(EGYSEGAR.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((NETTO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(NETTO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((AFA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(AFA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((BRUTTO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(BRUTTO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((AFA_KOD == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(AFA_KOD));
            }
            if ((MEGJEGYZES == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(MEGJEGYZES));
            }
            if ((CIKK_MEGNEVEZES == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(CIKK_MEGNEVEZES));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(SZAMLA_FEJ_ID));
            if ((KALK_MENNYISEG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(KALK_MENNYISEG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((KEDVEZMENY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((double)(KEDVEZMENY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int RENDELES_SOR_ID, 
                    global::System.Nullable<int> CIKK_ID, 
                    global::System.Nullable<double> MENNYISEG, 
                    global::System.Nullable<double> EGYSEGAR, 
                    global::System.Nullable<double> NETTO, 
                    global::System.Nullable<double> AFA, 
                    global::System.Nullable<double> BRUTTO, 
                    string AFA_KOD, 
                    string MEGJEGYZES, 
                    string CIKK_MEGNEVEZES, 
                    int SZAMLA_FEJ_ID, 
                    global::System.Nullable<double> KALK_MENNYISEG, 
                    global::System.Nullable<double> KEDVEZMENY, 
                    int Original_TETEL_ID, 
                    int Original_RENDELES_SOR_ID, 
                    global::System.Nullable<int> Original_CIKK_ID, 
                    global::System.Nullable<double> Original_MENNYISEG, 
                    global::System.Nullable<double> Original_EGYSEGAR, 
                    global::System.Nullable<double> Original_NETTO, 
                    global::System.Nullable<double> Original_AFA, 
                    global::System.Nullable<double> Original_BRUTTO, 
                    string Original_AFA_KOD, 
                    string Original_MEGJEGYZES, 
                    string Original_CIKK_MEGNEVEZES, 
                    int Original_SZAMLA_FEJ_ID, 
                    global::System.Nullable<double> Original_KALK_MENNYISEG, 
                    global::System.Nullable<double> Original_KEDVEZMENY, 
                    int TETEL_ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(RENDELES_SOR_ID));
            if ((CIKK_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(CIKK_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((MENNYISEG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(MENNYISEG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((EGYSEGAR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(EGYSEGAR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((NETTO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(NETTO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((AFA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(AFA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((BRUTTO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(BRUTTO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((AFA_KOD == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(AFA_KOD));
            }
            if ((MEGJEGYZES == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(MEGJEGYZES));
            }
            if ((CIKK_MEGNEVEZES == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(CIKK_MEGNEVEZES));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(SZAMLA_FEJ_ID));
            if ((KALK_MENNYISEG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(KALK_MENNYISEG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((KEDVEZMENY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(KEDVEZMENY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_TETEL_ID));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_RENDELES_SOR_ID));
            if ((Original_CIKK_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_CIKK_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_MENNYISEG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(Original_MENNYISEG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_EGYSEGAR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((double)(Original_EGYSEGAR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_NETTO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(Original_NETTO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_AFA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((double)(Original_AFA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_BRUTTO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((double)(Original_BRUTTO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_AFA_KOD == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_AFA_KOD));
            }
            if ((Original_MEGJEGYZES == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_MEGJEGYZES));
            }
            if ((Original_CIKK_MEGNEVEZES == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_CIKK_MEGNEVEZES));
            }
            this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(Original_SZAMLA_FEJ_ID));
            if ((Original_KALK_MENNYISEG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((double)(Original_KALK_MENNYISEG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_KEDVEZMENY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((double)(Original_KEDVEZMENY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(TETEL_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int RENDELES_SOR_ID, 
                    global::System.Nullable<int> CIKK_ID, 
                    global::System.Nullable<double> MENNYISEG, 
                    global::System.Nullable<double> EGYSEGAR, 
                    global::System.Nullable<double> NETTO, 
                    global::System.Nullable<double> AFA, 
                    global::System.Nullable<double> BRUTTO, 
                    string AFA_KOD, 
                    string MEGJEGYZES, 
                    string CIKK_MEGNEVEZES, 
                    int SZAMLA_FEJ_ID, 
                    global::System.Nullable<double> KALK_MENNYISEG, 
                    global::System.Nullable<double> KEDVEZMENY, 
                    int Original_TETEL_ID, 
                    int Original_RENDELES_SOR_ID, 
                    global::System.Nullable<int> Original_CIKK_ID, 
                    global::System.Nullable<double> Original_MENNYISEG, 
                    global::System.Nullable<double> Original_EGYSEGAR, 
                    global::System.Nullable<double> Original_NETTO, 
                    global::System.Nullable<double> Original_AFA, 
                    global::System.Nullable<double> Original_BRUTTO, 
                    string Original_AFA_KOD, 
                    string Original_MEGJEGYZES, 
                    string Original_CIKK_MEGNEVEZES, 
                    int Original_SZAMLA_FEJ_ID, 
                    global::System.Nullable<double> Original_KALK_MENNYISEG, 
                    global::System.Nullable<double> Original_KEDVEZMENY) {
            return this.Update(RENDELES_SOR_ID, CIKK_ID, MENNYISEG, EGYSEGAR, NETTO, AFA, BRUTTO, AFA_KOD, MEGJEGYZES, CIKK_MEGNEVEZES, SZAMLA_FEJ_ID, KALK_MENNYISEG, KEDVEZMENY, Original_TETEL_ID, Original_RENDELES_SOR_ID, Original_CIKK_ID, Original_MENNYISEG, Original_EGYSEGAR, Original_NETTO, Original_AFA, Original_BRUTTO, Original_AFA_KOD, Original_MEGJEGYZES, Original_CIKK_MEGNEVEZES, Original_SZAMLA_FEJ_ID, Original_KALK_MENNYISEG, Original_KEDVEZMENY, Original_TETEL_ID);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private AFATableAdapter _aFATableAdapter;
        
        private ASZTALTableAdapter _aSZTALTableAdapter;
        
        private CIKKTableAdapter _cIKKTableAdapter;
        
        private MEGYSTableAdapter _mEGYSTableAdapter;
        
        private PARTNERTableAdapter _pARTNERTableAdapter;
        
        private RENDELES_FEJTableAdapter _rENDELES_FEJTableAdapter;
        
        private RENDELES_SORTableAdapter _rENDELES_SORTableAdapter;
        
        private SZAMLA_TETELTableAdapter _sZAMLA_TETELTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public AFATableAdapter AFATableAdapter {
            get {
                return this._aFATableAdapter;
            }
            set {
                this._aFATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ASZTALTableAdapter ASZTALTableAdapter {
            get {
                return this._aSZTALTableAdapter;
            }
            set {
                this._aSZTALTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public CIKKTableAdapter CIKKTableAdapter {
            get {
                return this._cIKKTableAdapter;
            }
            set {
                this._cIKKTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public MEGYSTableAdapter MEGYSTableAdapter {
            get {
                return this._mEGYSTableAdapter;
            }
            set {
                this._mEGYSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public PARTNERTableAdapter PARTNERTableAdapter {
            get {
                return this._pARTNERTableAdapter;
            }
            set {
                this._pARTNERTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public RENDELES_FEJTableAdapter RENDELES_FEJTableAdapter {
            get {
                return this._rENDELES_FEJTableAdapter;
            }
            set {
                this._rENDELES_FEJTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public RENDELES_SORTableAdapter RENDELES_SORTableAdapter {
            get {
                return this._rENDELES_SORTableAdapter;
            }
            set {
                this._rENDELES_SORTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public SZAMLA_TETELTableAdapter SZAMLA_TETELTableAdapter {
            get {
                return this._sZAMLA_TETELTableAdapter;
            }
            set {
                this._sZAMLA_TETELTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._aFATableAdapter != null) 
                            && (this._aFATableAdapter.Connection != null))) {
                    return this._aFATableAdapter.Connection;
                }
                if (((this._aSZTALTableAdapter != null) 
                            && (this._aSZTALTableAdapter.Connection != null))) {
                    return this._aSZTALTableAdapter.Connection;
                }
                if (((this._cIKKTableAdapter != null) 
                            && (this._cIKKTableAdapter.Connection != null))) {
                    return this._cIKKTableAdapter.Connection;
                }
                if (((this._mEGYSTableAdapter != null) 
                            && (this._mEGYSTableAdapter.Connection != null))) {
                    return this._mEGYSTableAdapter.Connection;
                }
                if (((this._pARTNERTableAdapter != null) 
                            && (this._pARTNERTableAdapter.Connection != null))) {
                    return this._pARTNERTableAdapter.Connection;
                }
                if (((this._rENDELES_FEJTableAdapter != null) 
                            && (this._rENDELES_FEJTableAdapter.Connection != null))) {
                    return this._rENDELES_FEJTableAdapter.Connection;
                }
                if (((this._rENDELES_SORTableAdapter != null) 
                            && (this._rENDELES_SORTableAdapter.Connection != null))) {
                    return this._rENDELES_SORTableAdapter.Connection;
                }
                if (((this._sZAMLA_TETELTableAdapter != null) 
                            && (this._sZAMLA_TETELTableAdapter.Connection != null))) {
                    return this._sZAMLA_TETELTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._aFATableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._aSZTALTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cIKKTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._mEGYSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pARTNERTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._rENDELES_FEJTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._rENDELES_SORTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sZAMLA_TETELTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(eCafe_Szamlakor dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._aSZTALTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ASZTAL.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._aSZTALTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._rENDELES_FEJTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.RENDELES_FEJ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rENDELES_FEJTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pARTNERTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PARTNER.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pARTNERTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._rENDELES_SORTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.RENDELES_SOR.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rENDELES_SORTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cIKKTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CIKK.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cIKKTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._aFATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.AFA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._aFATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sZAMLA_TETELTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SZAMLA_TETEL.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sZAMLA_TETELTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._mEGYSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MEGYS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mEGYSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(eCafe_Szamlakor dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._aSZTALTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ASZTAL.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._aSZTALTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._rENDELES_FEJTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.RENDELES_FEJ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rENDELES_FEJTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pARTNERTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PARTNER.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pARTNERTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._rENDELES_SORTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.RENDELES_SOR.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rENDELES_SORTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cIKKTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CIKK.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cIKKTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._aFATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.AFA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._aFATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sZAMLA_TETELTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SZAMLA_TETEL.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sZAMLA_TETELTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._mEGYSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MEGYS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mEGYSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(eCafe_Szamlakor dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._mEGYSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MEGYS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mEGYSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sZAMLA_TETELTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SZAMLA_TETEL.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sZAMLA_TETELTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._aFATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.AFA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._aFATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cIKKTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CIKK.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cIKKTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._rENDELES_SORTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.RENDELES_SOR.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rENDELES_SORTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pARTNERTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PARTNER.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pARTNERTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._rENDELES_FEJTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.RENDELES_FEJ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rENDELES_FEJTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._aSZTALTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ASZTAL.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._aSZTALTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(eCafe_Szamlakor dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._aFATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._aFATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._aSZTALTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._aSZTALTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._cIKKTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cIKKTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._mEGYSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mEGYSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._pARTNERTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pARTNERTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._rENDELES_FEJTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rENDELES_FEJTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._rENDELES_SORTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rENDELES_SORTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._sZAMLA_TETELTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sZAMLA_TETELTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._aFATableAdapter != null)) {
                    revertConnections.Add(this._aFATableAdapter, this._aFATableAdapter.Connection);
                    this._aFATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._aFATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._aFATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._aFATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._aFATableAdapter.Adapter);
                    }
                }
                if ((this._aSZTALTableAdapter != null)) {
                    revertConnections.Add(this._aSZTALTableAdapter, this._aSZTALTableAdapter.Connection);
                    this._aSZTALTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._aSZTALTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._aSZTALTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._aSZTALTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._aSZTALTableAdapter.Adapter);
                    }
                }
                if ((this._cIKKTableAdapter != null)) {
                    revertConnections.Add(this._cIKKTableAdapter, this._cIKKTableAdapter.Connection);
                    this._cIKKTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._cIKKTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._cIKKTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cIKKTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cIKKTableAdapter.Adapter);
                    }
                }
                if ((this._mEGYSTableAdapter != null)) {
                    revertConnections.Add(this._mEGYSTableAdapter, this._mEGYSTableAdapter.Connection);
                    this._mEGYSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._mEGYSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._mEGYSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mEGYSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mEGYSTableAdapter.Adapter);
                    }
                }
                if ((this._pARTNERTableAdapter != null)) {
                    revertConnections.Add(this._pARTNERTableAdapter, this._pARTNERTableAdapter.Connection);
                    this._pARTNERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._pARTNERTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._pARTNERTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pARTNERTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pARTNERTableAdapter.Adapter);
                    }
                }
                if ((this._rENDELES_FEJTableAdapter != null)) {
                    revertConnections.Add(this._rENDELES_FEJTableAdapter, this._rENDELES_FEJTableAdapter.Connection);
                    this._rENDELES_FEJTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._rENDELES_FEJTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._rENDELES_FEJTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rENDELES_FEJTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rENDELES_FEJTableAdapter.Adapter);
                    }
                }
                if ((this._rENDELES_SORTableAdapter != null)) {
                    revertConnections.Add(this._rENDELES_SORTableAdapter, this._rENDELES_SORTableAdapter.Connection);
                    this._rENDELES_SORTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._rENDELES_SORTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._rENDELES_SORTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rENDELES_SORTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rENDELES_SORTableAdapter.Adapter);
                    }
                }
                if ((this._sZAMLA_TETELTableAdapter != null)) {
                    revertConnections.Add(this._sZAMLA_TETELTableAdapter, this._sZAMLA_TETELTableAdapter.Connection);
                    this._sZAMLA_TETELTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sZAMLA_TETELTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sZAMLA_TETELTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sZAMLA_TETELTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sZAMLA_TETELTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._aFATableAdapter != null)) {
                    this._aFATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._aFATableAdapter]));
                    this._aFATableAdapter.Transaction = null;
                }
                if ((this._aSZTALTableAdapter != null)) {
                    this._aSZTALTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._aSZTALTableAdapter]));
                    this._aSZTALTableAdapter.Transaction = null;
                }
                if ((this._cIKKTableAdapter != null)) {
                    this._cIKKTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._cIKKTableAdapter]));
                    this._cIKKTableAdapter.Transaction = null;
                }
                if ((this._mEGYSTableAdapter != null)) {
                    this._mEGYSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._mEGYSTableAdapter]));
                    this._mEGYSTableAdapter.Transaction = null;
                }
                if ((this._pARTNERTableAdapter != null)) {
                    this._pARTNERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._pARTNERTableAdapter]));
                    this._pARTNERTableAdapter.Transaction = null;
                }
                if ((this._rENDELES_FEJTableAdapter != null)) {
                    this._rENDELES_FEJTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._rENDELES_FEJTableAdapter]));
                    this._rENDELES_FEJTableAdapter.Transaction = null;
                }
                if ((this._rENDELES_SORTableAdapter != null)) {
                    this._rENDELES_SORTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._rENDELES_SORTableAdapter]));
                    this._rENDELES_SORTableAdapter.Transaction = null;
                }
                if ((this._sZAMLA_TETELTableAdapter != null)) {
                    this._sZAMLA_TETELTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sZAMLA_TETELTableAdapter]));
                    this._sZAMLA_TETELTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591