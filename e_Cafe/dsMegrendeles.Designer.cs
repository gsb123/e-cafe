//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace e_Cafe {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsMegrendeles")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsMegrendeles : global::System.Data.DataSet {
        
        private MEGRENDELES_FEJDataTable tableMEGRENDELES_FEJ;
        
        private MEGRENDELES_SORDataTable tableMEGRENDELES_SOR;
        
        private CIKKDataTable tableCIKK;
        
        private PARTNERDataTable tablePARTNER;
        
        private MEGYSDataTable tableMEGYS;
        
        private global::System.Data.DataRelation relationMEGRENDELES_SOR_CIKK;
        
        private global::System.Data.DataRelation relationMEGRENDELES_FEJ_MEGRENDELES_SOR;
        
        private global::System.Data.DataRelation relationMEGRENDELES_FEJ_PARTNER;
        
        private global::System.Data.DataRelation relationCIKK_MEGYS;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsMegrendeles() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsMegrendeles(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["MEGRENDELES_FEJ"] != null)) {
                    base.Tables.Add(new MEGRENDELES_FEJDataTable(ds.Tables["MEGRENDELES_FEJ"]));
                }
                if ((ds.Tables["MEGRENDELES_SOR"] != null)) {
                    base.Tables.Add(new MEGRENDELES_SORDataTable(ds.Tables["MEGRENDELES_SOR"]));
                }
                if ((ds.Tables["CIKK"] != null)) {
                    base.Tables.Add(new CIKKDataTable(ds.Tables["CIKK"]));
                }
                if ((ds.Tables["PARTNER"] != null)) {
                    base.Tables.Add(new PARTNERDataTable(ds.Tables["PARTNER"]));
                }
                if ((ds.Tables["MEGYS"] != null)) {
                    base.Tables.Add(new MEGYSDataTable(ds.Tables["MEGYS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MEGRENDELES_FEJDataTable MEGRENDELES_FEJ {
            get {
                return this.tableMEGRENDELES_FEJ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MEGRENDELES_SORDataTable MEGRENDELES_SOR {
            get {
                return this.tableMEGRENDELES_SOR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CIKKDataTable CIKK {
            get {
                return this.tableCIKK;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PARTNERDataTable PARTNER {
            get {
                return this.tablePARTNER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MEGYSDataTable MEGYS {
            get {
                return this.tableMEGYS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsMegrendeles cln = ((dsMegrendeles)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["MEGRENDELES_FEJ"] != null)) {
                    base.Tables.Add(new MEGRENDELES_FEJDataTable(ds.Tables["MEGRENDELES_FEJ"]));
                }
                if ((ds.Tables["MEGRENDELES_SOR"] != null)) {
                    base.Tables.Add(new MEGRENDELES_SORDataTable(ds.Tables["MEGRENDELES_SOR"]));
                }
                if ((ds.Tables["CIKK"] != null)) {
                    base.Tables.Add(new CIKKDataTable(ds.Tables["CIKK"]));
                }
                if ((ds.Tables["PARTNER"] != null)) {
                    base.Tables.Add(new PARTNERDataTable(ds.Tables["PARTNER"]));
                }
                if ((ds.Tables["MEGYS"] != null)) {
                    base.Tables.Add(new MEGYSDataTable(ds.Tables["MEGYS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableMEGRENDELES_FEJ = ((MEGRENDELES_FEJDataTable)(base.Tables["MEGRENDELES_FEJ"]));
            if ((initTable == true)) {
                if ((this.tableMEGRENDELES_FEJ != null)) {
                    this.tableMEGRENDELES_FEJ.InitVars();
                }
            }
            this.tableMEGRENDELES_SOR = ((MEGRENDELES_SORDataTable)(base.Tables["MEGRENDELES_SOR"]));
            if ((initTable == true)) {
                if ((this.tableMEGRENDELES_SOR != null)) {
                    this.tableMEGRENDELES_SOR.InitVars();
                }
            }
            this.tableCIKK = ((CIKKDataTable)(base.Tables["CIKK"]));
            if ((initTable == true)) {
                if ((this.tableCIKK != null)) {
                    this.tableCIKK.InitVars();
                }
            }
            this.tablePARTNER = ((PARTNERDataTable)(base.Tables["PARTNER"]));
            if ((initTable == true)) {
                if ((this.tablePARTNER != null)) {
                    this.tablePARTNER.InitVars();
                }
            }
            this.tableMEGYS = ((MEGYSDataTable)(base.Tables["MEGYS"]));
            if ((initTable == true)) {
                if ((this.tableMEGYS != null)) {
                    this.tableMEGYS.InitVars();
                }
            }
            this.relationMEGRENDELES_SOR_CIKK = this.Relations["MEGRENDELES_SOR_CIKK"];
            this.relationMEGRENDELES_FEJ_MEGRENDELES_SOR = this.Relations["MEGRENDELES_FEJ_MEGRENDELES_SOR"];
            this.relationMEGRENDELES_FEJ_PARTNER = this.Relations["MEGRENDELES_FEJ_PARTNER"];
            this.relationCIKK_MEGYS = this.Relations["CIKK_MEGYS"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsMegrendeles";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableMEGRENDELES_FEJ = new MEGRENDELES_FEJDataTable();
            base.Tables.Add(this.tableMEGRENDELES_FEJ);
            this.tableMEGRENDELES_SOR = new MEGRENDELES_SORDataTable();
            base.Tables.Add(this.tableMEGRENDELES_SOR);
            this.tableCIKK = new CIKKDataTable();
            base.Tables.Add(this.tableCIKK);
            this.tablePARTNER = new PARTNERDataTable();
            base.Tables.Add(this.tablePARTNER);
            this.tableMEGYS = new MEGYSDataTable();
            base.Tables.Add(this.tableMEGYS);
            this.relationMEGRENDELES_SOR_CIKK = new global::System.Data.DataRelation("MEGRENDELES_SOR_CIKK", new global::System.Data.DataColumn[] {
                        this.tableMEGRENDELES_SOR.CIKK_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableCIKK.CIKK_IDColumn}, false);
            this.Relations.Add(this.relationMEGRENDELES_SOR_CIKK);
            this.relationMEGRENDELES_FEJ_MEGRENDELES_SOR = new global::System.Data.DataRelation("MEGRENDELES_FEJ_MEGRENDELES_SOR", new global::System.Data.DataColumn[] {
                        this.tableMEGRENDELES_FEJ.MEGRENDELES_FEJ_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableMEGRENDELES_SOR.FEJ_IDColumn}, false);
            this.Relations.Add(this.relationMEGRENDELES_FEJ_MEGRENDELES_SOR);
            this.relationMEGRENDELES_FEJ_PARTNER = new global::System.Data.DataRelation("MEGRENDELES_FEJ_PARTNER", new global::System.Data.DataColumn[] {
                        this.tableMEGRENDELES_FEJ.SZALLITO_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tablePARTNER.PARTNER_IDColumn}, false);
            this.Relations.Add(this.relationMEGRENDELES_FEJ_PARTNER);
            this.relationCIKK_MEGYS = new global::System.Data.DataRelation("CIKK_MEGYS", new global::System.Data.DataColumn[] {
                        this.tableCIKK.MEGYS_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableMEGYS.MEGYS_IDColumn}, false);
            this.Relations.Add(this.relationCIKK_MEGYS);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMEGRENDELES_FEJ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMEGRENDELES_SOR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCIKK() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePARTNER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMEGYS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsMegrendeles ds = new dsMegrendeles();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void MEGRENDELES_FEJRowChangeEventHandler(object sender, MEGRENDELES_FEJRowChangeEvent e);
        
        public delegate void MEGRENDELES_SORRowChangeEventHandler(object sender, MEGRENDELES_SORRowChangeEvent e);
        
        public delegate void CIKKRowChangeEventHandler(object sender, CIKKRowChangeEvent e);
        
        public delegate void PARTNERRowChangeEventHandler(object sender, PARTNERRowChangeEvent e);
        
        public delegate void MEGYSRowChangeEventHandler(object sender, MEGYSRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MEGRENDELES_FEJDataTable : global::System.Data.TypedTableBase<MEGRENDELES_FEJRow> {
            
            private global::System.Data.DataColumn columnMEGRENDELES_FEJ_ID;
            
            private global::System.Data.DataColumn columnDATUM;
            
            private global::System.Data.DataColumn columnSORSZAM;
            
            private global::System.Data.DataColumn columnSZALLITO_ID;
            
            private global::System.Data.DataColumn columnLEZART;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEGRENDELES_FEJDataTable() {
                this.TableName = "MEGRENDELES_FEJ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MEGRENDELES_FEJDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MEGRENDELES_FEJDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MEGRENDELES_FEJ_IDColumn {
                get {
                    return this.columnMEGRENDELES_FEJ_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATUMColumn {
                get {
                    return this.columnDATUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SORSZAMColumn {
                get {
                    return this.columnSORSZAM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SZALLITO_IDColumn {
                get {
                    return this.columnSZALLITO_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LEZARTColumn {
                get {
                    return this.columnLEZART;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEGRENDELES_FEJRow this[int index] {
                get {
                    return ((MEGRENDELES_FEJRow)(this.Rows[index]));
                }
            }
            
            public event MEGRENDELES_FEJRowChangeEventHandler MEGRENDELES_FEJRowChanging;
            
            public event MEGRENDELES_FEJRowChangeEventHandler MEGRENDELES_FEJRowChanged;
            
            public event MEGRENDELES_FEJRowChangeEventHandler MEGRENDELES_FEJRowDeleting;
            
            public event MEGRENDELES_FEJRowChangeEventHandler MEGRENDELES_FEJRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMEGRENDELES_FEJRow(MEGRENDELES_FEJRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEGRENDELES_FEJRow AddMEGRENDELES_FEJRow(System.DateTime DATUM, string SORSZAM, int SZALLITO_ID, int LEZART) {
                MEGRENDELES_FEJRow rowMEGRENDELES_FEJRow = ((MEGRENDELES_FEJRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DATUM,
                        SORSZAM,
                        SZALLITO_ID,
                        LEZART};
                rowMEGRENDELES_FEJRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMEGRENDELES_FEJRow);
                return rowMEGRENDELES_FEJRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEGRENDELES_FEJRow FindByMEGRENDELES_FEJ_ID(int MEGRENDELES_FEJ_ID) {
                return ((MEGRENDELES_FEJRow)(this.Rows.Find(new object[] {
                            MEGRENDELES_FEJ_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MEGRENDELES_FEJDataTable cln = ((MEGRENDELES_FEJDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MEGRENDELES_FEJDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMEGRENDELES_FEJ_ID = base.Columns["MEGRENDELES_FEJ_ID"];
                this.columnDATUM = base.Columns["DATUM"];
                this.columnSORSZAM = base.Columns["SORSZAM"];
                this.columnSZALLITO_ID = base.Columns["SZALLITO_ID"];
                this.columnLEZART = base.Columns["LEZART"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMEGRENDELES_FEJ_ID = new global::System.Data.DataColumn("MEGRENDELES_FEJ_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEGRENDELES_FEJ_ID);
                this.columnDATUM = new global::System.Data.DataColumn("DATUM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATUM);
                this.columnSORSZAM = new global::System.Data.DataColumn("SORSZAM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSORSZAM);
                this.columnSZALLITO_ID = new global::System.Data.DataColumn("SZALLITO_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSZALLITO_ID);
                this.columnLEZART = new global::System.Data.DataColumn("LEZART", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLEZART);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMEGRENDELES_FEJ_ID}, true));
                this.columnMEGRENDELES_FEJ_ID.AutoIncrement = true;
                this.columnMEGRENDELES_FEJ_ID.AllowDBNull = false;
                this.columnMEGRENDELES_FEJ_ID.ReadOnly = true;
                this.columnMEGRENDELES_FEJ_ID.Unique = true;
                this.columnSORSZAM.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEGRENDELES_FEJRow NewMEGRENDELES_FEJRow() {
                return ((MEGRENDELES_FEJRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MEGRENDELES_FEJRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MEGRENDELES_FEJRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MEGRENDELES_FEJRowChanged != null)) {
                    this.MEGRENDELES_FEJRowChanged(this, new MEGRENDELES_FEJRowChangeEvent(((MEGRENDELES_FEJRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MEGRENDELES_FEJRowChanging != null)) {
                    this.MEGRENDELES_FEJRowChanging(this, new MEGRENDELES_FEJRowChangeEvent(((MEGRENDELES_FEJRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MEGRENDELES_FEJRowDeleted != null)) {
                    this.MEGRENDELES_FEJRowDeleted(this, new MEGRENDELES_FEJRowChangeEvent(((MEGRENDELES_FEJRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MEGRENDELES_FEJRowDeleting != null)) {
                    this.MEGRENDELES_FEJRowDeleting(this, new MEGRENDELES_FEJRowChangeEvent(((MEGRENDELES_FEJRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMEGRENDELES_FEJRow(MEGRENDELES_FEJRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsMegrendeles ds = new dsMegrendeles();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MEGRENDELES_FEJDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MEGRENDELES_SORDataTable : global::System.Data.TypedTableBase<MEGRENDELES_SORRow> {
            
            private global::System.Data.DataColumn columnSOR_ID;
            
            private global::System.Data.DataColumn columnFEJ_ID;
            
            private global::System.Data.DataColumn columnCIKK_ID;
            
            private global::System.Data.DataColumn columnBESZ_AR;
            
            private global::System.Data.DataColumn columnMENNYISEG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEGRENDELES_SORDataTable() {
                this.TableName = "MEGRENDELES_SOR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MEGRENDELES_SORDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MEGRENDELES_SORDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOR_IDColumn {
                get {
                    return this.columnSOR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FEJ_IDColumn {
                get {
                    return this.columnFEJ_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CIKK_IDColumn {
                get {
                    return this.columnCIKK_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BESZ_ARColumn {
                get {
                    return this.columnBESZ_AR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MENNYISEGColumn {
                get {
                    return this.columnMENNYISEG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEGRENDELES_SORRow this[int index] {
                get {
                    return ((MEGRENDELES_SORRow)(this.Rows[index]));
                }
            }
            
            public event MEGRENDELES_SORRowChangeEventHandler MEGRENDELES_SORRowChanging;
            
            public event MEGRENDELES_SORRowChangeEventHandler MEGRENDELES_SORRowChanged;
            
            public event MEGRENDELES_SORRowChangeEventHandler MEGRENDELES_SORRowDeleting;
            
            public event MEGRENDELES_SORRowChangeEventHandler MEGRENDELES_SORRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMEGRENDELES_SORRow(MEGRENDELES_SORRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEGRENDELES_SORRow AddMEGRENDELES_SORRow(MEGRENDELES_FEJRow parentMEGRENDELES_FEJRowByMEGRENDELES_FEJ_MEGRENDELES_SOR, int CIKK_ID, double BESZ_AR, double MENNYISEG) {
                MEGRENDELES_SORRow rowMEGRENDELES_SORRow = ((MEGRENDELES_SORRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        CIKK_ID,
                        BESZ_AR,
                        MENNYISEG};
                if ((parentMEGRENDELES_FEJRowByMEGRENDELES_FEJ_MEGRENDELES_SOR != null)) {
                    columnValuesArray[1] = parentMEGRENDELES_FEJRowByMEGRENDELES_FEJ_MEGRENDELES_SOR[0];
                }
                rowMEGRENDELES_SORRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMEGRENDELES_SORRow);
                return rowMEGRENDELES_SORRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEGRENDELES_SORRow FindBySOR_ID(int SOR_ID) {
                return ((MEGRENDELES_SORRow)(this.Rows.Find(new object[] {
                            SOR_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MEGRENDELES_SORDataTable cln = ((MEGRENDELES_SORDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MEGRENDELES_SORDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSOR_ID = base.Columns["SOR_ID"];
                this.columnFEJ_ID = base.Columns["FEJ_ID"];
                this.columnCIKK_ID = base.Columns["CIKK_ID"];
                this.columnBESZ_AR = base.Columns["BESZ_AR"];
                this.columnMENNYISEG = base.Columns["MENNYISEG"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSOR_ID = new global::System.Data.DataColumn("SOR_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOR_ID);
                this.columnFEJ_ID = new global::System.Data.DataColumn("FEJ_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFEJ_ID);
                this.columnCIKK_ID = new global::System.Data.DataColumn("CIKK_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCIKK_ID);
                this.columnBESZ_AR = new global::System.Data.DataColumn("BESZ_AR", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBESZ_AR);
                this.columnMENNYISEG = new global::System.Data.DataColumn("MENNYISEG", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMENNYISEG);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSOR_ID}, true));
                this.columnSOR_ID.AutoIncrement = true;
                this.columnSOR_ID.AutoIncrementSeed = -1;
                this.columnSOR_ID.AutoIncrementStep = -1;
                this.columnSOR_ID.AllowDBNull = false;
                this.columnSOR_ID.ReadOnly = true;
                this.columnSOR_ID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEGRENDELES_SORRow NewMEGRENDELES_SORRow() {
                return ((MEGRENDELES_SORRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MEGRENDELES_SORRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MEGRENDELES_SORRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MEGRENDELES_SORRowChanged != null)) {
                    this.MEGRENDELES_SORRowChanged(this, new MEGRENDELES_SORRowChangeEvent(((MEGRENDELES_SORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MEGRENDELES_SORRowChanging != null)) {
                    this.MEGRENDELES_SORRowChanging(this, new MEGRENDELES_SORRowChangeEvent(((MEGRENDELES_SORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MEGRENDELES_SORRowDeleted != null)) {
                    this.MEGRENDELES_SORRowDeleted(this, new MEGRENDELES_SORRowChangeEvent(((MEGRENDELES_SORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MEGRENDELES_SORRowDeleting != null)) {
                    this.MEGRENDELES_SORRowDeleting(this, new MEGRENDELES_SORRowChangeEvent(((MEGRENDELES_SORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMEGRENDELES_SORRow(MEGRENDELES_SORRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsMegrendeles ds = new dsMegrendeles();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MEGRENDELES_SORDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CIKKDataTable : global::System.Data.TypedTableBase<CIKKRow> {
            
            private global::System.Data.DataColumn columnCIKK_ID;
            
            private global::System.Data.DataColumn columnMEGNEVEZES;
            
            private global::System.Data.DataColumn columnCIKK_TIPUS;
            
            private global::System.Data.DataColumn columnCIKKCSOPORT_ID;
            
            private global::System.Data.DataColumn columnERTEKESITES_TIPUSA;
            
            private global::System.Data.DataColumn columnMEGYS_ID;
            
            private global::System.Data.DataColumn columnOTHER_FILTER_ID;
            
            private global::System.Data.DataColumn columnDEFAULT_RAKTAR;
            
            private global::System.Data.DataColumn columnSZJ_SZAM;
            
            private global::System.Data.DataColumn columnCIKKSZAM;
            
            private global::System.Data.DataColumn columnEAN_KOD;
            
            private global::System.Data.DataColumn columnMINIMUM_KESZLET;
            
            private global::System.Data.DataColumn columnOPTIMALIS_KESZLET;
            
            private global::System.Data.DataColumn columnELADASI_AR;
            
            private global::System.Data.DataColumn columnHELYETTES_TERMEK;
            
            private global::System.Data.DataColumn columnMAX_KEDVEZMENY_SZ;
            
            private global::System.Data.DataColumn columnMAX_KEDVEZM_FT;
            
            private global::System.Data.DataColumn columnMEGJEGYZES;
            
            private global::System.Data.DataColumn columnAKTIV;
            
            private global::System.Data.DataColumn columnGYORSKOD;
            
            private global::System.Data.DataColumn columnRECEPT_TEXT;
            
            private global::System.Data.DataColumn columnSPEC_ZARAS;
            
            private global::System.Data.DataColumn columnRECEPT_MODSZER;
            
            private global::System.Data.DataColumn columnRECEPT_ALK_TART;
            
            private global::System.Data.DataColumn columnRECEPT_POHAR;
            
            private global::System.Data.DataColumn columnELADASI_AR_NETTO;
            
            private global::System.Data.DataColumn columnAUTO_MEGRENDELO;
            
            private global::System.Data.DataColumn columnVIRTUAL;
            
            private global::System.Data.DataColumn columnCIKK_ROVID_NEV;
            
            private global::System.Data.DataColumn columnCIKK_TOP_LIST;
            
            private global::System.Data.DataColumn columnCIKKCSOP_PREFER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CIKKDataTable() {
                this.TableName = "CIKK";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CIKKDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CIKKDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CIKK_IDColumn {
                get {
                    return this.columnCIKK_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MEGNEVEZESColumn {
                get {
                    return this.columnMEGNEVEZES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CIKK_TIPUSColumn {
                get {
                    return this.columnCIKK_TIPUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CIKKCSOPORT_IDColumn {
                get {
                    return this.columnCIKKCSOPORT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ERTEKESITES_TIPUSAColumn {
                get {
                    return this.columnERTEKESITES_TIPUSA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MEGYS_IDColumn {
                get {
                    return this.columnMEGYS_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OTHER_FILTER_IDColumn {
                get {
                    return this.columnOTHER_FILTER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEFAULT_RAKTARColumn {
                get {
                    return this.columnDEFAULT_RAKTAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SZJ_SZAMColumn {
                get {
                    return this.columnSZJ_SZAM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CIKKSZAMColumn {
                get {
                    return this.columnCIKKSZAM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EAN_KODColumn {
                get {
                    return this.columnEAN_KOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MINIMUM_KESZLETColumn {
                get {
                    return this.columnMINIMUM_KESZLET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OPTIMALIS_KESZLETColumn {
                get {
                    return this.columnOPTIMALIS_KESZLET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ELADASI_ARColumn {
                get {
                    return this.columnELADASI_AR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HELYETTES_TERMEKColumn {
                get {
                    return this.columnHELYETTES_TERMEK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAX_KEDVEZMENY_SZColumn {
                get {
                    return this.columnMAX_KEDVEZMENY_SZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAX_KEDVEZM_FTColumn {
                get {
                    return this.columnMAX_KEDVEZM_FT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MEGJEGYZESColumn {
                get {
                    return this.columnMEGJEGYZES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AKTIVColumn {
                get {
                    return this.columnAKTIV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GYORSKODColumn {
                get {
                    return this.columnGYORSKOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RECEPT_TEXTColumn {
                get {
                    return this.columnRECEPT_TEXT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SPEC_ZARASColumn {
                get {
                    return this.columnSPEC_ZARAS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RECEPT_MODSZERColumn {
                get {
                    return this.columnRECEPT_MODSZER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RECEPT_ALK_TARTColumn {
                get {
                    return this.columnRECEPT_ALK_TART;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RECEPT_POHARColumn {
                get {
                    return this.columnRECEPT_POHAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ELADASI_AR_NETTOColumn {
                get {
                    return this.columnELADASI_AR_NETTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AUTO_MEGRENDELOColumn {
                get {
                    return this.columnAUTO_MEGRENDELO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VIRTUALColumn {
                get {
                    return this.columnVIRTUAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CIKK_ROVID_NEVColumn {
                get {
                    return this.columnCIKK_ROVID_NEV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CIKK_TOP_LISTColumn {
                get {
                    return this.columnCIKK_TOP_LIST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CIKKCSOP_PREFERColumn {
                get {
                    return this.columnCIKKCSOP_PREFER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CIKKRow this[int index] {
                get {
                    return ((CIKKRow)(this.Rows[index]));
                }
            }
            
            public event CIKKRowChangeEventHandler CIKKRowChanging;
            
            public event CIKKRowChangeEventHandler CIKKRowChanged;
            
            public event CIKKRowChangeEventHandler CIKKRowDeleting;
            
            public event CIKKRowChangeEventHandler CIKKRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCIKKRow(CIKKRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CIKKRow AddCIKKRow(
                        string MEGNEVEZES, 
                        int CIKK_TIPUS, 
                        int CIKKCSOPORT_ID, 
                        string ERTEKESITES_TIPUSA, 
                        string MEGYS_ID, 
                        int OTHER_FILTER_ID, 
                        int DEFAULT_RAKTAR, 
                        string SZJ_SZAM, 
                        string CIKKSZAM, 
                        string EAN_KOD, 
                        double MINIMUM_KESZLET, 
                        double OPTIMALIS_KESZLET, 
                        double ELADASI_AR, 
                        int HELYETTES_TERMEK, 
                        double MAX_KEDVEZMENY_SZ, 
                        double MAX_KEDVEZM_FT, 
                        string MEGJEGYZES, 
                        int AKTIV, 
                        string GYORSKOD, 
                        string RECEPT_TEXT, 
                        int SPEC_ZARAS, 
                        string RECEPT_MODSZER, 
                        string RECEPT_ALK_TART, 
                        string RECEPT_POHAR, 
                        double ELADASI_AR_NETTO, 
                        int AUTO_MEGRENDELO, 
                        int VIRTUAL, 
                        string CIKK_ROVID_NEV, 
                        int CIKK_TOP_LIST, 
                        int CIKKCSOP_PREFER) {
                CIKKRow rowCIKKRow = ((CIKKRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MEGNEVEZES,
                        CIKK_TIPUS,
                        CIKKCSOPORT_ID,
                        ERTEKESITES_TIPUSA,
                        MEGYS_ID,
                        OTHER_FILTER_ID,
                        DEFAULT_RAKTAR,
                        SZJ_SZAM,
                        CIKKSZAM,
                        EAN_KOD,
                        MINIMUM_KESZLET,
                        OPTIMALIS_KESZLET,
                        ELADASI_AR,
                        HELYETTES_TERMEK,
                        MAX_KEDVEZMENY_SZ,
                        MAX_KEDVEZM_FT,
                        MEGJEGYZES,
                        AKTIV,
                        GYORSKOD,
                        RECEPT_TEXT,
                        SPEC_ZARAS,
                        RECEPT_MODSZER,
                        RECEPT_ALK_TART,
                        RECEPT_POHAR,
                        ELADASI_AR_NETTO,
                        AUTO_MEGRENDELO,
                        VIRTUAL,
                        CIKK_ROVID_NEV,
                        CIKK_TOP_LIST,
                        CIKKCSOP_PREFER};
                rowCIKKRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCIKKRow);
                return rowCIKKRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CIKKRow FindByCIKK_ID(int CIKK_ID) {
                return ((CIKKRow)(this.Rows.Find(new object[] {
                            CIKK_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CIKKDataTable cln = ((CIKKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CIKKDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCIKK_ID = base.Columns["CIKK_ID"];
                this.columnMEGNEVEZES = base.Columns["MEGNEVEZES"];
                this.columnCIKK_TIPUS = base.Columns["CIKK_TIPUS"];
                this.columnCIKKCSOPORT_ID = base.Columns["CIKKCSOPORT_ID"];
                this.columnERTEKESITES_TIPUSA = base.Columns["ERTEKESITES_TIPUSA"];
                this.columnMEGYS_ID = base.Columns["MEGYS_ID"];
                this.columnOTHER_FILTER_ID = base.Columns["OTHER_FILTER_ID"];
                this.columnDEFAULT_RAKTAR = base.Columns["DEFAULT_RAKTAR"];
                this.columnSZJ_SZAM = base.Columns["SZJ_SZAM"];
                this.columnCIKKSZAM = base.Columns["CIKKSZAM"];
                this.columnEAN_KOD = base.Columns["EAN_KOD"];
                this.columnMINIMUM_KESZLET = base.Columns["MINIMUM_KESZLET"];
                this.columnOPTIMALIS_KESZLET = base.Columns["OPTIMALIS_KESZLET"];
                this.columnELADASI_AR = base.Columns["ELADASI_AR"];
                this.columnHELYETTES_TERMEK = base.Columns["HELYETTES_TERMEK"];
                this.columnMAX_KEDVEZMENY_SZ = base.Columns["MAX_KEDVEZMENY_SZ"];
                this.columnMAX_KEDVEZM_FT = base.Columns["MAX_KEDVEZM_FT"];
                this.columnMEGJEGYZES = base.Columns["MEGJEGYZES"];
                this.columnAKTIV = base.Columns["AKTIV"];
                this.columnGYORSKOD = base.Columns["GYORSKOD"];
                this.columnRECEPT_TEXT = base.Columns["RECEPT_TEXT"];
                this.columnSPEC_ZARAS = base.Columns["SPEC_ZARAS"];
                this.columnRECEPT_MODSZER = base.Columns["RECEPT_MODSZER"];
                this.columnRECEPT_ALK_TART = base.Columns["RECEPT_ALK_TART"];
                this.columnRECEPT_POHAR = base.Columns["RECEPT_POHAR"];
                this.columnELADASI_AR_NETTO = base.Columns["ELADASI_AR_NETTO"];
                this.columnAUTO_MEGRENDELO = base.Columns["AUTO_MEGRENDELO"];
                this.columnVIRTUAL = base.Columns["VIRTUAL"];
                this.columnCIKK_ROVID_NEV = base.Columns["CIKK_ROVID_NEV"];
                this.columnCIKK_TOP_LIST = base.Columns["CIKK_TOP_LIST"];
                this.columnCIKKCSOP_PREFER = base.Columns["CIKKCSOP_PREFER"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCIKK_ID = new global::System.Data.DataColumn("CIKK_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCIKK_ID);
                this.columnMEGNEVEZES = new global::System.Data.DataColumn("MEGNEVEZES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEGNEVEZES);
                this.columnCIKK_TIPUS = new global::System.Data.DataColumn("CIKK_TIPUS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCIKK_TIPUS);
                this.columnCIKKCSOPORT_ID = new global::System.Data.DataColumn("CIKKCSOPORT_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCIKKCSOPORT_ID);
                this.columnERTEKESITES_TIPUSA = new global::System.Data.DataColumn("ERTEKESITES_TIPUSA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnERTEKESITES_TIPUSA);
                this.columnMEGYS_ID = new global::System.Data.DataColumn("MEGYS_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEGYS_ID);
                this.columnOTHER_FILTER_ID = new global::System.Data.DataColumn("OTHER_FILTER_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTHER_FILTER_ID);
                this.columnDEFAULT_RAKTAR = new global::System.Data.DataColumn("DEFAULT_RAKTAR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEFAULT_RAKTAR);
                this.columnSZJ_SZAM = new global::System.Data.DataColumn("SZJ_SZAM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSZJ_SZAM);
                this.columnCIKKSZAM = new global::System.Data.DataColumn("CIKKSZAM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCIKKSZAM);
                this.columnEAN_KOD = new global::System.Data.DataColumn("EAN_KOD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEAN_KOD);
                this.columnMINIMUM_KESZLET = new global::System.Data.DataColumn("MINIMUM_KESZLET", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMINIMUM_KESZLET);
                this.columnOPTIMALIS_KESZLET = new global::System.Data.DataColumn("OPTIMALIS_KESZLET", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPTIMALIS_KESZLET);
                this.columnELADASI_AR = new global::System.Data.DataColumn("ELADASI_AR", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnELADASI_AR);
                this.columnHELYETTES_TERMEK = new global::System.Data.DataColumn("HELYETTES_TERMEK", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHELYETTES_TERMEK);
                this.columnMAX_KEDVEZMENY_SZ = new global::System.Data.DataColumn("MAX_KEDVEZMENY_SZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAX_KEDVEZMENY_SZ);
                this.columnMAX_KEDVEZM_FT = new global::System.Data.DataColumn("MAX_KEDVEZM_FT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAX_KEDVEZM_FT);
                this.columnMEGJEGYZES = new global::System.Data.DataColumn("MEGJEGYZES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEGJEGYZES);
                this.columnAKTIV = new global::System.Data.DataColumn("AKTIV", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAKTIV);
                this.columnGYORSKOD = new global::System.Data.DataColumn("GYORSKOD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGYORSKOD);
                this.columnRECEPT_TEXT = new global::System.Data.DataColumn("RECEPT_TEXT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECEPT_TEXT);
                this.columnSPEC_ZARAS = new global::System.Data.DataColumn("SPEC_ZARAS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPEC_ZARAS);
                this.columnRECEPT_MODSZER = new global::System.Data.DataColumn("RECEPT_MODSZER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECEPT_MODSZER);
                this.columnRECEPT_ALK_TART = new global::System.Data.DataColumn("RECEPT_ALK_TART", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECEPT_ALK_TART);
                this.columnRECEPT_POHAR = new global::System.Data.DataColumn("RECEPT_POHAR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECEPT_POHAR);
                this.columnELADASI_AR_NETTO = new global::System.Data.DataColumn("ELADASI_AR_NETTO", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnELADASI_AR_NETTO);
                this.columnAUTO_MEGRENDELO = new global::System.Data.DataColumn("AUTO_MEGRENDELO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAUTO_MEGRENDELO);
                this.columnVIRTUAL = new global::System.Data.DataColumn("VIRTUAL", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVIRTUAL);
                this.columnCIKK_ROVID_NEV = new global::System.Data.DataColumn("CIKK_ROVID_NEV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCIKK_ROVID_NEV);
                this.columnCIKK_TOP_LIST = new global::System.Data.DataColumn("CIKK_TOP_LIST", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCIKK_TOP_LIST);
                this.columnCIKKCSOP_PREFER = new global::System.Data.DataColumn("CIKKCSOP_PREFER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCIKKCSOP_PREFER);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCIKK_ID}, true));
                this.columnCIKK_ID.AutoIncrement = true;
                this.columnCIKK_ID.AutoIncrementSeed = -1;
                this.columnCIKK_ID.AutoIncrementStep = -1;
                this.columnCIKK_ID.AllowDBNull = false;
                this.columnCIKK_ID.ReadOnly = true;
                this.columnCIKK_ID.Unique = true;
                this.columnMEGNEVEZES.AllowDBNull = false;
                this.columnMEGNEVEZES.MaxLength = 50;
                this.columnCIKK_TIPUS.AllowDBNull = false;
                this.columnERTEKESITES_TIPUSA.MaxLength = 1;
                this.columnMEGYS_ID.MaxLength = 10;
                this.columnSZJ_SZAM.MaxLength = 30;
                this.columnCIKKSZAM.MaxLength = 50;
                this.columnEAN_KOD.MaxLength = 28;
                this.columnMEGJEGYZES.MaxLength = 4000;
                this.columnGYORSKOD.MaxLength = 10;
                this.columnRECEPT_TEXT.MaxLength = 2147483647;
                this.columnRECEPT_MODSZER.MaxLength = 100;
                this.columnRECEPT_ALK_TART.MaxLength = 100;
                this.columnRECEPT_POHAR.MaxLength = 100;
                this.columnCIKK_ROVID_NEV.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CIKKRow NewCIKKRow() {
                return ((CIKKRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CIKKRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CIKKRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CIKKRowChanged != null)) {
                    this.CIKKRowChanged(this, new CIKKRowChangeEvent(((CIKKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CIKKRowChanging != null)) {
                    this.CIKKRowChanging(this, new CIKKRowChangeEvent(((CIKKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CIKKRowDeleted != null)) {
                    this.CIKKRowDeleted(this, new CIKKRowChangeEvent(((CIKKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CIKKRowDeleting != null)) {
                    this.CIKKRowDeleting(this, new CIKKRowChangeEvent(((CIKKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCIKKRow(CIKKRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsMegrendeles ds = new dsMegrendeles();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CIKKDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PARTNERDataTable : global::System.Data.TypedTableBase<PARTNERRow> {
            
            private global::System.Data.DataColumn columnP_TIPUS;
            
            private global::System.Data.DataColumn columnP_NEV;
            
            private global::System.Data.DataColumn columnP_NEV2;
            
            private global::System.Data.DataColumn columnP_NEV3;
            
            private global::System.Data.DataColumn columnAKTIV;
            
            private global::System.Data.DataColumn columnKONTAKT_SZEMELY;
            
            private global::System.Data.DataColumn columnADOSZAM;
            
            private global::System.Data.DataColumn columnKONTAKT_ELERHET;
            
            private global::System.Data.DataColumn columnIRSZ;
            
            private global::System.Data.DataColumn columnVAROS;
            
            private global::System.Data.DataColumn columnCIM;
            
            private global::System.Data.DataColumn columnCIM_TIPUS;
            
            private global::System.Data.DataColumn columnPARTNER_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PARTNERDataTable() {
                this.TableName = "PARTNER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PARTNERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PARTNERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P_TIPUSColumn {
                get {
                    return this.columnP_TIPUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P_NEVColumn {
                get {
                    return this.columnP_NEV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P_NEV2Column {
                get {
                    return this.columnP_NEV2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P_NEV3Column {
                get {
                    return this.columnP_NEV3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AKTIVColumn {
                get {
                    return this.columnAKTIV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KONTAKT_SZEMELYColumn {
                get {
                    return this.columnKONTAKT_SZEMELY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADOSZAMColumn {
                get {
                    return this.columnADOSZAM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KONTAKT_ELERHETColumn {
                get {
                    return this.columnKONTAKT_ELERHET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IRSZColumn {
                get {
                    return this.columnIRSZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VAROSColumn {
                get {
                    return this.columnVAROS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CIMColumn {
                get {
                    return this.columnCIM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CIM_TIPUSColumn {
                get {
                    return this.columnCIM_TIPUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PARTNER_IDColumn {
                get {
                    return this.columnPARTNER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PARTNERRow this[int index] {
                get {
                    return ((PARTNERRow)(this.Rows[index]));
                }
            }
            
            public event PARTNERRowChangeEventHandler PARTNERRowChanging;
            
            public event PARTNERRowChangeEventHandler PARTNERRowChanged;
            
            public event PARTNERRowChangeEventHandler PARTNERRowDeleting;
            
            public event PARTNERRowChangeEventHandler PARTNERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPARTNERRow(PARTNERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PARTNERRow AddPARTNERRow(string P_TIPUS, string P_NEV, string P_NEV2, string P_NEV3, int AKTIV, string KONTAKT_SZEMELY, string ADOSZAM, string KONTAKT_ELERHET, string IRSZ, string VAROS, string CIM, int CIM_TIPUS) {
                PARTNERRow rowPARTNERRow = ((PARTNERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        P_TIPUS,
                        P_NEV,
                        P_NEV2,
                        P_NEV3,
                        AKTIV,
                        KONTAKT_SZEMELY,
                        ADOSZAM,
                        KONTAKT_ELERHET,
                        IRSZ,
                        VAROS,
                        CIM,
                        CIM_TIPUS,
                        null};
                rowPARTNERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPARTNERRow);
                return rowPARTNERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PARTNERRow FindByPARTNER_ID(int PARTNER_ID) {
                return ((PARTNERRow)(this.Rows.Find(new object[] {
                            PARTNER_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PARTNERDataTable cln = ((PARTNERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PARTNERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnP_TIPUS = base.Columns["P_TIPUS"];
                this.columnP_NEV = base.Columns["P_NEV"];
                this.columnP_NEV2 = base.Columns["P_NEV2"];
                this.columnP_NEV3 = base.Columns["P_NEV3"];
                this.columnAKTIV = base.Columns["AKTIV"];
                this.columnKONTAKT_SZEMELY = base.Columns["KONTAKT_SZEMELY"];
                this.columnADOSZAM = base.Columns["ADOSZAM"];
                this.columnKONTAKT_ELERHET = base.Columns["KONTAKT_ELERHET"];
                this.columnIRSZ = base.Columns["IRSZ"];
                this.columnVAROS = base.Columns["VAROS"];
                this.columnCIM = base.Columns["CIM"];
                this.columnCIM_TIPUS = base.Columns["CIM_TIPUS"];
                this.columnPARTNER_ID = base.Columns["PARTNER_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnP_TIPUS = new global::System.Data.DataColumn("P_TIPUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP_TIPUS);
                this.columnP_NEV = new global::System.Data.DataColumn("P_NEV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP_NEV);
                this.columnP_NEV2 = new global::System.Data.DataColumn("P_NEV2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP_NEV2);
                this.columnP_NEV3 = new global::System.Data.DataColumn("P_NEV3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP_NEV3);
                this.columnAKTIV = new global::System.Data.DataColumn("AKTIV", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAKTIV);
                this.columnKONTAKT_SZEMELY = new global::System.Data.DataColumn("KONTAKT_SZEMELY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKONTAKT_SZEMELY);
                this.columnADOSZAM = new global::System.Data.DataColumn("ADOSZAM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADOSZAM);
                this.columnKONTAKT_ELERHET = new global::System.Data.DataColumn("KONTAKT_ELERHET", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKONTAKT_ELERHET);
                this.columnIRSZ = new global::System.Data.DataColumn("IRSZ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIRSZ);
                this.columnVAROS = new global::System.Data.DataColumn("VAROS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVAROS);
                this.columnCIM = new global::System.Data.DataColumn("CIM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCIM);
                this.columnCIM_TIPUS = new global::System.Data.DataColumn("CIM_TIPUS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCIM_TIPUS);
                this.columnPARTNER_ID = new global::System.Data.DataColumn("PARTNER_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARTNER_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPARTNER_ID}, true));
                this.columnP_TIPUS.MaxLength = 1;
                this.columnP_NEV.MaxLength = 150;
                this.columnP_NEV2.MaxLength = 150;
                this.columnP_NEV3.MaxLength = 150;
                this.columnKONTAKT_SZEMELY.MaxLength = 50;
                this.columnADOSZAM.MaxLength = 14;
                this.columnKONTAKT_ELERHET.MaxLength = 150;
                this.columnIRSZ.MaxLength = 4;
                this.columnVAROS.MaxLength = 50;
                this.columnCIM.MaxLength = 150;
                this.columnPARTNER_ID.AutoIncrement = true;
                this.columnPARTNER_ID.AutoIncrementSeed = -1;
                this.columnPARTNER_ID.AutoIncrementStep = -1;
                this.columnPARTNER_ID.AllowDBNull = false;
                this.columnPARTNER_ID.ReadOnly = true;
                this.columnPARTNER_ID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PARTNERRow NewPARTNERRow() {
                return ((PARTNERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PARTNERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PARTNERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PARTNERRowChanged != null)) {
                    this.PARTNERRowChanged(this, new PARTNERRowChangeEvent(((PARTNERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PARTNERRowChanging != null)) {
                    this.PARTNERRowChanging(this, new PARTNERRowChangeEvent(((PARTNERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PARTNERRowDeleted != null)) {
                    this.PARTNERRowDeleted(this, new PARTNERRowChangeEvent(((PARTNERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PARTNERRowDeleting != null)) {
                    this.PARTNERRowDeleting(this, new PARTNERRowChangeEvent(((PARTNERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePARTNERRow(PARTNERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsMegrendeles ds = new dsMegrendeles();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PARTNERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MEGYSDataTable : global::System.Data.TypedTableBase<MEGYSRow> {
            
            private global::System.Data.DataColumn columnMEGYS_MEGNEVEZES;
            
            private global::System.Data.DataColumn columnMEGYS_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEGYSDataTable() {
                this.TableName = "MEGYS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MEGYSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MEGYSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MEGYS_MEGNEVEZESColumn {
                get {
                    return this.columnMEGYS_MEGNEVEZES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MEGYS_IDColumn {
                get {
                    return this.columnMEGYS_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEGYSRow this[int index] {
                get {
                    return ((MEGYSRow)(this.Rows[index]));
                }
            }
            
            public event MEGYSRowChangeEventHandler MEGYSRowChanging;
            
            public event MEGYSRowChangeEventHandler MEGYSRowChanged;
            
            public event MEGYSRowChangeEventHandler MEGYSRowDeleting;
            
            public event MEGYSRowChangeEventHandler MEGYSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMEGYSRow(MEGYSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEGYSRow AddMEGYSRow(string MEGYS_MEGNEVEZES, CIKKRow parentCIKKRowByCIKK_MEGYS) {
                MEGYSRow rowMEGYSRow = ((MEGYSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MEGYS_MEGNEVEZES,
                        null};
                if ((parentCIKKRowByCIKK_MEGYS != null)) {
                    columnValuesArray[1] = parentCIKKRowByCIKK_MEGYS[5];
                }
                rowMEGYSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMEGYSRow);
                return rowMEGYSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MEGYSDataTable cln = ((MEGYSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MEGYSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMEGYS_MEGNEVEZES = base.Columns["MEGYS_MEGNEVEZES"];
                this.columnMEGYS_ID = base.Columns["MEGYS_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMEGYS_MEGNEVEZES = new global::System.Data.DataColumn("MEGYS_MEGNEVEZES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEGYS_MEGNEVEZES);
                this.columnMEGYS_ID = new global::System.Data.DataColumn("MEGYS_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEGYS_ID);
                this.columnMEGYS_MEGNEVEZES.MaxLength = 50;
                this.columnMEGYS_ID.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEGYSRow NewMEGYSRow() {
                return ((MEGYSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MEGYSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MEGYSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MEGYSRowChanged != null)) {
                    this.MEGYSRowChanged(this, new MEGYSRowChangeEvent(((MEGYSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MEGYSRowChanging != null)) {
                    this.MEGYSRowChanging(this, new MEGYSRowChangeEvent(((MEGYSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MEGYSRowDeleted != null)) {
                    this.MEGYSRowDeleted(this, new MEGYSRowChangeEvent(((MEGYSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MEGYSRowDeleting != null)) {
                    this.MEGYSRowDeleting(this, new MEGYSRowChangeEvent(((MEGYSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMEGYSRow(MEGYSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsMegrendeles ds = new dsMegrendeles();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MEGYSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MEGRENDELES_FEJRow : global::System.Data.DataRow {
            
            private MEGRENDELES_FEJDataTable tableMEGRENDELES_FEJ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MEGRENDELES_FEJRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMEGRENDELES_FEJ = ((MEGRENDELES_FEJDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MEGRENDELES_FEJ_ID {
                get {
                    return ((int)(this[this.tableMEGRENDELES_FEJ.MEGRENDELES_FEJ_IDColumn]));
                }
                set {
                    this[this.tableMEGRENDELES_FEJ.MEGRENDELES_FEJ_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATUM {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMEGRENDELES_FEJ.DATUMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATUM\' in table \'MEGRENDELES_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEGRENDELES_FEJ.DATUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SORSZAM {
                get {
                    try {
                        return ((string)(this[this.tableMEGRENDELES_FEJ.SORSZAMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SORSZAM\' in table \'MEGRENDELES_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEGRENDELES_FEJ.SORSZAMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SZALLITO_ID {
                get {
                    try {
                        return ((int)(this[this.tableMEGRENDELES_FEJ.SZALLITO_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SZALLITO_ID\' in table \'MEGRENDELES_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEGRENDELES_FEJ.SZALLITO_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LEZART {
                get {
                    try {
                        return ((int)(this[this.tableMEGRENDELES_FEJ.LEZARTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LEZART\' in table \'MEGRENDELES_FEJ\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEGRENDELES_FEJ.LEZARTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATUMNull() {
                return this.IsNull(this.tableMEGRENDELES_FEJ.DATUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATUMNull() {
                this[this.tableMEGRENDELES_FEJ.DATUMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSORSZAMNull() {
                return this.IsNull(this.tableMEGRENDELES_FEJ.SORSZAMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSORSZAMNull() {
                this[this.tableMEGRENDELES_FEJ.SORSZAMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSZALLITO_IDNull() {
                return this.IsNull(this.tableMEGRENDELES_FEJ.SZALLITO_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSZALLITO_IDNull() {
                this[this.tableMEGRENDELES_FEJ.SZALLITO_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLEZARTNull() {
                return this.IsNull(this.tableMEGRENDELES_FEJ.LEZARTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLEZARTNull() {
                this[this.tableMEGRENDELES_FEJ.LEZARTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEGRENDELES_SORRow[] GetMEGRENDELES_SORRows() {
                if ((this.Table.ChildRelations["MEGRENDELES_FEJ_MEGRENDELES_SOR"] == null)) {
                    return new MEGRENDELES_SORRow[0];
                }
                else {
                    return ((MEGRENDELES_SORRow[])(base.GetChildRows(this.Table.ChildRelations["MEGRENDELES_FEJ_MEGRENDELES_SOR"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PARTNERRow[] GetPARTNERRows() {
                if ((this.Table.ChildRelations["MEGRENDELES_FEJ_PARTNER"] == null)) {
                    return new PARTNERRow[0];
                }
                else {
                    return ((PARTNERRow[])(base.GetChildRows(this.Table.ChildRelations["MEGRENDELES_FEJ_PARTNER"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MEGRENDELES_SORRow : global::System.Data.DataRow {
            
            private MEGRENDELES_SORDataTable tableMEGRENDELES_SOR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MEGRENDELES_SORRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMEGRENDELES_SOR = ((MEGRENDELES_SORDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SOR_ID {
                get {
                    return ((int)(this[this.tableMEGRENDELES_SOR.SOR_IDColumn]));
                }
                set {
                    this[this.tableMEGRENDELES_SOR.SOR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FEJ_ID {
                get {
                    try {
                        return ((int)(this[this.tableMEGRENDELES_SOR.FEJ_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FEJ_ID\' in table \'MEGRENDELES_SOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEGRENDELES_SOR.FEJ_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CIKK_ID {
                get {
                    try {
                        return ((int)(this[this.tableMEGRENDELES_SOR.CIKK_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CIKK_ID\' in table \'MEGRENDELES_SOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEGRENDELES_SOR.CIKK_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BESZ_AR {
                get {
                    try {
                        return ((double)(this[this.tableMEGRENDELES_SOR.BESZ_ARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BESZ_AR\' in table \'MEGRENDELES_SOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEGRENDELES_SOR.BESZ_ARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MENNYISEG {
                get {
                    try {
                        return ((double)(this[this.tableMEGRENDELES_SOR.MENNYISEGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MENNYISEG\' in table \'MEGRENDELES_SOR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEGRENDELES_SOR.MENNYISEGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEGRENDELES_FEJRow MEGRENDELES_FEJRow {
                get {
                    return ((MEGRENDELES_FEJRow)(this.GetParentRow(this.Table.ParentRelations["MEGRENDELES_FEJ_MEGRENDELES_SOR"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["MEGRENDELES_FEJ_MEGRENDELES_SOR"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFEJ_IDNull() {
                return this.IsNull(this.tableMEGRENDELES_SOR.FEJ_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFEJ_IDNull() {
                this[this.tableMEGRENDELES_SOR.FEJ_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCIKK_IDNull() {
                return this.IsNull(this.tableMEGRENDELES_SOR.CIKK_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCIKK_IDNull() {
                this[this.tableMEGRENDELES_SOR.CIKK_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBESZ_ARNull() {
                return this.IsNull(this.tableMEGRENDELES_SOR.BESZ_ARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBESZ_ARNull() {
                this[this.tableMEGRENDELES_SOR.BESZ_ARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMENNYISEGNull() {
                return this.IsNull(this.tableMEGRENDELES_SOR.MENNYISEGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMENNYISEGNull() {
                this[this.tableMEGRENDELES_SOR.MENNYISEGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CIKKRow[] GetCIKKRows() {
                if ((this.Table.ChildRelations["MEGRENDELES_SOR_CIKK"] == null)) {
                    return new CIKKRow[0];
                }
                else {
                    return ((CIKKRow[])(base.GetChildRows(this.Table.ChildRelations["MEGRENDELES_SOR_CIKK"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CIKKRow : global::System.Data.DataRow {
            
            private CIKKDataTable tableCIKK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CIKKRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCIKK = ((CIKKDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CIKK_ID {
                get {
                    return ((int)(this[this.tableCIKK.CIKK_IDColumn]));
                }
                set {
                    this[this.tableCIKK.CIKK_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MEGNEVEZES {
                get {
                    return ((string)(this[this.tableCIKK.MEGNEVEZESColumn]));
                }
                set {
                    this[this.tableCIKK.MEGNEVEZESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CIKK_TIPUS {
                get {
                    return ((int)(this[this.tableCIKK.CIKK_TIPUSColumn]));
                }
                set {
                    this[this.tableCIKK.CIKK_TIPUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CIKKCSOPORT_ID {
                get {
                    try {
                        return ((int)(this[this.tableCIKK.CIKKCSOPORT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CIKKCSOPORT_ID\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.CIKKCSOPORT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ERTEKESITES_TIPUSA {
                get {
                    try {
                        return ((string)(this[this.tableCIKK.ERTEKESITES_TIPUSAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ERTEKESITES_TIPUSA\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.ERTEKESITES_TIPUSAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MEGYS_ID {
                get {
                    try {
                        return ((string)(this[this.tableCIKK.MEGYS_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEGYS_ID\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.MEGYS_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OTHER_FILTER_ID {
                get {
                    try {
                        return ((int)(this[this.tableCIKK.OTHER_FILTER_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OTHER_FILTER_ID\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.OTHER_FILTER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DEFAULT_RAKTAR {
                get {
                    try {
                        return ((int)(this[this.tableCIKK.DEFAULT_RAKTARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEFAULT_RAKTAR\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.DEFAULT_RAKTARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SZJ_SZAM {
                get {
                    try {
                        return ((string)(this[this.tableCIKK.SZJ_SZAMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SZJ_SZAM\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.SZJ_SZAMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CIKKSZAM {
                get {
                    try {
                        return ((string)(this[this.tableCIKK.CIKKSZAMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CIKKSZAM\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.CIKKSZAMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EAN_KOD {
                get {
                    try {
                        return ((string)(this[this.tableCIKK.EAN_KODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EAN_KOD\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.EAN_KODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MINIMUM_KESZLET {
                get {
                    try {
                        return ((double)(this[this.tableCIKK.MINIMUM_KESZLETColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MINIMUM_KESZLET\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.MINIMUM_KESZLETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double OPTIMALIS_KESZLET {
                get {
                    try {
                        return ((double)(this[this.tableCIKK.OPTIMALIS_KESZLETColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPTIMALIS_KESZLET\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.OPTIMALIS_KESZLETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ELADASI_AR {
                get {
                    try {
                        return ((double)(this[this.tableCIKK.ELADASI_ARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ELADASI_AR\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.ELADASI_ARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HELYETTES_TERMEK {
                get {
                    try {
                        return ((int)(this[this.tableCIKK.HELYETTES_TERMEKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HELYETTES_TERMEK\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.HELYETTES_TERMEKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MAX_KEDVEZMENY_SZ {
                get {
                    try {
                        return ((double)(this[this.tableCIKK.MAX_KEDVEZMENY_SZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAX_KEDVEZMENY_SZ\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.MAX_KEDVEZMENY_SZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MAX_KEDVEZM_FT {
                get {
                    try {
                        return ((double)(this[this.tableCIKK.MAX_KEDVEZM_FTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAX_KEDVEZM_FT\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.MAX_KEDVEZM_FTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MEGJEGYZES {
                get {
                    try {
                        return ((string)(this[this.tableCIKK.MEGJEGYZESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEGJEGYZES\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.MEGJEGYZESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AKTIV {
                get {
                    try {
                        return ((int)(this[this.tableCIKK.AKTIVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AKTIV\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.AKTIVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GYORSKOD {
                get {
                    try {
                        return ((string)(this[this.tableCIKK.GYORSKODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GYORSKOD\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.GYORSKODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RECEPT_TEXT {
                get {
                    try {
                        return ((string)(this[this.tableCIKK.RECEPT_TEXTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RECEPT_TEXT\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.RECEPT_TEXTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SPEC_ZARAS {
                get {
                    try {
                        return ((int)(this[this.tableCIKK.SPEC_ZARASColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SPEC_ZARAS\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.SPEC_ZARASColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RECEPT_MODSZER {
                get {
                    try {
                        return ((string)(this[this.tableCIKK.RECEPT_MODSZERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RECEPT_MODSZER\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.RECEPT_MODSZERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RECEPT_ALK_TART {
                get {
                    try {
                        return ((string)(this[this.tableCIKK.RECEPT_ALK_TARTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RECEPT_ALK_TART\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.RECEPT_ALK_TARTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RECEPT_POHAR {
                get {
                    try {
                        return ((string)(this[this.tableCIKK.RECEPT_POHARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RECEPT_POHAR\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.RECEPT_POHARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ELADASI_AR_NETTO {
                get {
                    try {
                        return ((double)(this[this.tableCIKK.ELADASI_AR_NETTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ELADASI_AR_NETTO\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.ELADASI_AR_NETTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AUTO_MEGRENDELO {
                get {
                    try {
                        return ((int)(this[this.tableCIKK.AUTO_MEGRENDELOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AUTO_MEGRENDELO\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.AUTO_MEGRENDELOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int VIRTUAL {
                get {
                    try {
                        return ((int)(this[this.tableCIKK.VIRTUALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VIRTUAL\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.VIRTUALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CIKK_ROVID_NEV {
                get {
                    try {
                        return ((string)(this[this.tableCIKK.CIKK_ROVID_NEVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CIKK_ROVID_NEV\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.CIKK_ROVID_NEVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CIKK_TOP_LIST {
                get {
                    try {
                        return ((int)(this[this.tableCIKK.CIKK_TOP_LISTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CIKK_TOP_LIST\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.CIKK_TOP_LISTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CIKKCSOP_PREFER {
                get {
                    try {
                        return ((int)(this[this.tableCIKK.CIKKCSOP_PREFERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CIKKCSOP_PREFER\' in table \'CIKK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCIKK.CIKKCSOP_PREFERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEGRENDELES_SORRow MEGRENDELES_SORRow {
                get {
                    return ((MEGRENDELES_SORRow)(this.GetParentRow(this.Table.ParentRelations["MEGRENDELES_SOR_CIKK"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["MEGRENDELES_SOR_CIKK"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCIKKCSOPORT_IDNull() {
                return this.IsNull(this.tableCIKK.CIKKCSOPORT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCIKKCSOPORT_IDNull() {
                this[this.tableCIKK.CIKKCSOPORT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsERTEKESITES_TIPUSANull() {
                return this.IsNull(this.tableCIKK.ERTEKESITES_TIPUSAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetERTEKESITES_TIPUSANull() {
                this[this.tableCIKK.ERTEKESITES_TIPUSAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMEGYS_IDNull() {
                return this.IsNull(this.tableCIKK.MEGYS_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMEGYS_IDNull() {
                this[this.tableCIKK.MEGYS_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOTHER_FILTER_IDNull() {
                return this.IsNull(this.tableCIKK.OTHER_FILTER_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOTHER_FILTER_IDNull() {
                this[this.tableCIKK.OTHER_FILTER_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEFAULT_RAKTARNull() {
                return this.IsNull(this.tableCIKK.DEFAULT_RAKTARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEFAULT_RAKTARNull() {
                this[this.tableCIKK.DEFAULT_RAKTARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSZJ_SZAMNull() {
                return this.IsNull(this.tableCIKK.SZJ_SZAMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSZJ_SZAMNull() {
                this[this.tableCIKK.SZJ_SZAMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCIKKSZAMNull() {
                return this.IsNull(this.tableCIKK.CIKKSZAMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCIKKSZAMNull() {
                this[this.tableCIKK.CIKKSZAMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEAN_KODNull() {
                return this.IsNull(this.tableCIKK.EAN_KODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEAN_KODNull() {
                this[this.tableCIKK.EAN_KODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMINIMUM_KESZLETNull() {
                return this.IsNull(this.tableCIKK.MINIMUM_KESZLETColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMINIMUM_KESZLETNull() {
                this[this.tableCIKK.MINIMUM_KESZLETColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOPTIMALIS_KESZLETNull() {
                return this.IsNull(this.tableCIKK.OPTIMALIS_KESZLETColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOPTIMALIS_KESZLETNull() {
                this[this.tableCIKK.OPTIMALIS_KESZLETColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsELADASI_ARNull() {
                return this.IsNull(this.tableCIKK.ELADASI_ARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetELADASI_ARNull() {
                this[this.tableCIKK.ELADASI_ARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHELYETTES_TERMEKNull() {
                return this.IsNull(this.tableCIKK.HELYETTES_TERMEKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHELYETTES_TERMEKNull() {
                this[this.tableCIKK.HELYETTES_TERMEKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAX_KEDVEZMENY_SZNull() {
                return this.IsNull(this.tableCIKK.MAX_KEDVEZMENY_SZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAX_KEDVEZMENY_SZNull() {
                this[this.tableCIKK.MAX_KEDVEZMENY_SZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAX_KEDVEZM_FTNull() {
                return this.IsNull(this.tableCIKK.MAX_KEDVEZM_FTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAX_KEDVEZM_FTNull() {
                this[this.tableCIKK.MAX_KEDVEZM_FTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMEGJEGYZESNull() {
                return this.IsNull(this.tableCIKK.MEGJEGYZESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMEGJEGYZESNull() {
                this[this.tableCIKK.MEGJEGYZESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAKTIVNull() {
                return this.IsNull(this.tableCIKK.AKTIVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAKTIVNull() {
                this[this.tableCIKK.AKTIVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGYORSKODNull() {
                return this.IsNull(this.tableCIKK.GYORSKODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGYORSKODNull() {
                this[this.tableCIKK.GYORSKODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRECEPT_TEXTNull() {
                return this.IsNull(this.tableCIKK.RECEPT_TEXTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRECEPT_TEXTNull() {
                this[this.tableCIKK.RECEPT_TEXTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSPEC_ZARASNull() {
                return this.IsNull(this.tableCIKK.SPEC_ZARASColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSPEC_ZARASNull() {
                this[this.tableCIKK.SPEC_ZARASColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRECEPT_MODSZERNull() {
                return this.IsNull(this.tableCIKK.RECEPT_MODSZERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRECEPT_MODSZERNull() {
                this[this.tableCIKK.RECEPT_MODSZERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRECEPT_ALK_TARTNull() {
                return this.IsNull(this.tableCIKK.RECEPT_ALK_TARTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRECEPT_ALK_TARTNull() {
                this[this.tableCIKK.RECEPT_ALK_TARTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRECEPT_POHARNull() {
                return this.IsNull(this.tableCIKK.RECEPT_POHARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRECEPT_POHARNull() {
                this[this.tableCIKK.RECEPT_POHARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsELADASI_AR_NETTONull() {
                return this.IsNull(this.tableCIKK.ELADASI_AR_NETTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetELADASI_AR_NETTONull() {
                this[this.tableCIKK.ELADASI_AR_NETTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAUTO_MEGRENDELONull() {
                return this.IsNull(this.tableCIKK.AUTO_MEGRENDELOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAUTO_MEGRENDELONull() {
                this[this.tableCIKK.AUTO_MEGRENDELOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVIRTUALNull() {
                return this.IsNull(this.tableCIKK.VIRTUALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVIRTUALNull() {
                this[this.tableCIKK.VIRTUALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCIKK_ROVID_NEVNull() {
                return this.IsNull(this.tableCIKK.CIKK_ROVID_NEVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCIKK_ROVID_NEVNull() {
                this[this.tableCIKK.CIKK_ROVID_NEVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCIKK_TOP_LISTNull() {
                return this.IsNull(this.tableCIKK.CIKK_TOP_LISTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCIKK_TOP_LISTNull() {
                this[this.tableCIKK.CIKK_TOP_LISTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCIKKCSOP_PREFERNull() {
                return this.IsNull(this.tableCIKK.CIKKCSOP_PREFERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCIKKCSOP_PREFERNull() {
                this[this.tableCIKK.CIKKCSOP_PREFERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEGYSRow[] GetMEGYSRows() {
                if ((this.Table.ChildRelations["CIKK_MEGYS"] == null)) {
                    return new MEGYSRow[0];
                }
                else {
                    return ((MEGYSRow[])(base.GetChildRows(this.Table.ChildRelations["CIKK_MEGYS"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PARTNERRow : global::System.Data.DataRow {
            
            private PARTNERDataTable tablePARTNER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PARTNERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePARTNER = ((PARTNERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string P_TIPUS {
                get {
                    try {
                        return ((string)(this[this.tablePARTNER.P_TIPUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P_TIPUS\' in table \'PARTNER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePARTNER.P_TIPUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string P_NEV {
                get {
                    try {
                        return ((string)(this[this.tablePARTNER.P_NEVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P_NEV\' in table \'PARTNER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePARTNER.P_NEVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string P_NEV2 {
                get {
                    try {
                        return ((string)(this[this.tablePARTNER.P_NEV2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P_NEV2\' in table \'PARTNER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePARTNER.P_NEV2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string P_NEV3 {
                get {
                    try {
                        return ((string)(this[this.tablePARTNER.P_NEV3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P_NEV3\' in table \'PARTNER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePARTNER.P_NEV3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AKTIV {
                get {
                    try {
                        return ((int)(this[this.tablePARTNER.AKTIVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AKTIV\' in table \'PARTNER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePARTNER.AKTIVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KONTAKT_SZEMELY {
                get {
                    try {
                        return ((string)(this[this.tablePARTNER.KONTAKT_SZEMELYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KONTAKT_SZEMELY\' in table \'PARTNER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePARTNER.KONTAKT_SZEMELYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADOSZAM {
                get {
                    try {
                        return ((string)(this[this.tablePARTNER.ADOSZAMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADOSZAM\' in table \'PARTNER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePARTNER.ADOSZAMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KONTAKT_ELERHET {
                get {
                    try {
                        return ((string)(this[this.tablePARTNER.KONTAKT_ELERHETColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KONTAKT_ELERHET\' in table \'PARTNER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePARTNER.KONTAKT_ELERHETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IRSZ {
                get {
                    if (this.IsIRSZNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePARTNER.IRSZColumn]));
                    }
                }
                set {
                    this[this.tablePARTNER.IRSZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VAROS {
                get {
                    if (this.IsVAROSNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePARTNER.VAROSColumn]));
                    }
                }
                set {
                    this[this.tablePARTNER.VAROSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CIM {
                get {
                    if (this.IsCIMNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePARTNER.CIMColumn]));
                    }
                }
                set {
                    this[this.tablePARTNER.CIMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CIM_TIPUS {
                get {
                    try {
                        return ((int)(this[this.tablePARTNER.CIM_TIPUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CIM_TIPUS\' in table \'PARTNER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePARTNER.CIM_TIPUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PARTNER_ID {
                get {
                    return ((int)(this[this.tablePARTNER.PARTNER_IDColumn]));
                }
                set {
                    this[this.tablePARTNER.PARTNER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEGRENDELES_FEJRow MEGRENDELES_FEJRow {
                get {
                    return ((MEGRENDELES_FEJRow)(this.GetParentRow(this.Table.ParentRelations["MEGRENDELES_FEJ_PARTNER"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["MEGRENDELES_FEJ_PARTNER"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP_TIPUSNull() {
                return this.IsNull(this.tablePARTNER.P_TIPUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP_TIPUSNull() {
                this[this.tablePARTNER.P_TIPUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP_NEVNull() {
                return this.IsNull(this.tablePARTNER.P_NEVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP_NEVNull() {
                this[this.tablePARTNER.P_NEVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP_NEV2Null() {
                return this.IsNull(this.tablePARTNER.P_NEV2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP_NEV2Null() {
                this[this.tablePARTNER.P_NEV2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP_NEV3Null() {
                return this.IsNull(this.tablePARTNER.P_NEV3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP_NEV3Null() {
                this[this.tablePARTNER.P_NEV3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAKTIVNull() {
                return this.IsNull(this.tablePARTNER.AKTIVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAKTIVNull() {
                this[this.tablePARTNER.AKTIVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKONTAKT_SZEMELYNull() {
                return this.IsNull(this.tablePARTNER.KONTAKT_SZEMELYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKONTAKT_SZEMELYNull() {
                this[this.tablePARTNER.KONTAKT_SZEMELYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADOSZAMNull() {
                return this.IsNull(this.tablePARTNER.ADOSZAMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADOSZAMNull() {
                this[this.tablePARTNER.ADOSZAMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKONTAKT_ELERHETNull() {
                return this.IsNull(this.tablePARTNER.KONTAKT_ELERHETColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKONTAKT_ELERHETNull() {
                this[this.tablePARTNER.KONTAKT_ELERHETColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIRSZNull() {
                return this.IsNull(this.tablePARTNER.IRSZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIRSZNull() {
                this[this.tablePARTNER.IRSZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVAROSNull() {
                return this.IsNull(this.tablePARTNER.VAROSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVAROSNull() {
                this[this.tablePARTNER.VAROSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCIMNull() {
                return this.IsNull(this.tablePARTNER.CIMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCIMNull() {
                this[this.tablePARTNER.CIMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCIM_TIPUSNull() {
                return this.IsNull(this.tablePARTNER.CIM_TIPUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCIM_TIPUSNull() {
                this[this.tablePARTNER.CIM_TIPUSColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MEGYSRow : global::System.Data.DataRow {
            
            private MEGYSDataTable tableMEGYS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MEGYSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMEGYS = ((MEGYSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MEGYS_MEGNEVEZES {
                get {
                    try {
                        return ((string)(this[this.tableMEGYS.MEGYS_MEGNEVEZESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEGYS_MEGNEVEZES\' in table \'MEGYS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEGYS.MEGYS_MEGNEVEZESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MEGYS_ID {
                get {
                    try {
                        return ((string)(this[this.tableMEGYS.MEGYS_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEGYS_ID\' in table \'MEGYS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMEGYS.MEGYS_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CIKKRow CIKKRow {
                get {
                    return ((CIKKRow)(this.GetParentRow(this.Table.ParentRelations["CIKK_MEGYS"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["CIKK_MEGYS"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMEGYS_MEGNEVEZESNull() {
                return this.IsNull(this.tableMEGYS.MEGYS_MEGNEVEZESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMEGYS_MEGNEVEZESNull() {
                this[this.tableMEGYS.MEGYS_MEGNEVEZESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMEGYS_IDNull() {
                return this.IsNull(this.tableMEGYS.MEGYS_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMEGYS_IDNull() {
                this[this.tableMEGYS.MEGYS_IDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MEGRENDELES_FEJRowChangeEvent : global::System.EventArgs {
            
            private MEGRENDELES_FEJRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEGRENDELES_FEJRowChangeEvent(MEGRENDELES_FEJRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEGRENDELES_FEJRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MEGRENDELES_SORRowChangeEvent : global::System.EventArgs {
            
            private MEGRENDELES_SORRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEGRENDELES_SORRowChangeEvent(MEGRENDELES_SORRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEGRENDELES_SORRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CIKKRowChangeEvent : global::System.EventArgs {
            
            private CIKKRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CIKKRowChangeEvent(CIKKRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CIKKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PARTNERRowChangeEvent : global::System.EventArgs {
            
            private PARTNERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PARTNERRowChangeEvent(PARTNERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PARTNERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MEGYSRowChangeEvent : global::System.EventArgs {
            
            private MEGYSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEGYSRowChangeEvent(MEGYSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MEGYSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace e_Cafe.dsMegrendelesTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MEGRENDELES_FEJAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MEGRENDELES_FEJAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MEGRENDELES_FEJ";
            tableMapping.ColumnMappings.Add("MEGRENDELES_FEJ_ID", "MEGRENDELES_FEJ_ID");
            tableMapping.ColumnMappings.Add("DATUM", "DATUM");
            tableMapping.ColumnMappings.Add("SORSZAM", "SORSZAM");
            tableMapping.ColumnMappings.Add("SZALLITO_ID", "SZALLITO_ID");
            tableMapping.ColumnMappings.Add("LEZART", "LEZART");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=ERNIE-HOME\\SQL2K8;Initial Catalog=E_CAFE;Persist Security Info=True;U" +
                "ser ID=sa;Password=x";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        MEGRENDELES_FEJ_ID, DATUM, SZALLITO_ID, SORSZAM, LEZART\r\nFROM      " +
                "      MEGRENDELES_FEJ\r\nWHERE        (MEGRENDELES_FEJ_ID = @megrendeles_fej)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@megrendeles_fej", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MEGRENDELES_FEJ_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsMegrendeles.MEGRENDELES_FEJDataTable dataTable, int megrendeles_fej) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(megrendeles_fej));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsMegrendeles.MEGRENDELES_FEJDataTable GetData(int megrendeles_fej) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(megrendeles_fej));
            dsMegrendeles.MEGRENDELES_FEJDataTable dataTable = new dsMegrendeles.MEGRENDELES_FEJDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MEGRENDELES_SORTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MEGRENDELES_SORTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MEGRENDELES_SOR";
            tableMapping.ColumnMappings.Add("SOR_ID", "SOR_ID");
            tableMapping.ColumnMappings.Add("FEJ_ID", "FEJ_ID");
            tableMapping.ColumnMappings.Add("CIKK_ID", "CIKK_ID");
            tableMapping.ColumnMappings.Add("BESZ_AR", "BESZ_AR");
            tableMapping.ColumnMappings.Add("MENNYISEG", "MENNYISEG");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [MEGRENDELES_SOR] WHERE (([SOR_ID] = @Original_SOR_ID) AND ((@IsNull_FEJ_ID = 1 AND [FEJ_ID] IS NULL) OR ([FEJ_ID] = @Original_FEJ_ID)) AND ((@IsNull_CIKK_ID = 1 AND [CIKK_ID] IS NULL) OR ([CIKK_ID] = @Original_CIKK_ID)) AND ((@IsNull_BESZ_AR = 1 AND [BESZ_AR] IS NULL) OR ([BESZ_AR] = @Original_BESZ_AR)) AND ((@IsNull_MENNYISEG = 1 AND [MENNYISEG] IS NULL) OR ([MENNYISEG] = @Original_MENNYISEG)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SOR_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOR_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FEJ_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FEJ_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FEJ_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FEJ_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CIKK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BESZ_AR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BESZ_AR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BESZ_AR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BESZ_AR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MENNYISEG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MENNYISEG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MENNYISEG", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MENNYISEG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [MEGRENDELES_SOR] ([FEJ_ID], [CIKK_ID], [BESZ_AR], [MENNYISEG]) VALUE" +
                "S (@FEJ_ID, @CIKK_ID, @BESZ_AR, @MENNYISEG);\r\nSELECT SOR_ID, FEJ_ID, CIKK_ID, BE" +
                "SZ_AR, MENNYISEG FROM MEGRENDELES_SOR WHERE (SOR_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FEJ_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FEJ_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BESZ_AR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BESZ_AR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MENNYISEG", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MENNYISEG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [MEGRENDELES_SOR] SET [FEJ_ID] = @FEJ_ID, [CIKK_ID] = @CIKK_ID, [BESZ_AR] = @BESZ_AR, [MENNYISEG] = @MENNYISEG WHERE (([SOR_ID] = @Original_SOR_ID) AND ((@IsNull_FEJ_ID = 1 AND [FEJ_ID] IS NULL) OR ([FEJ_ID] = @Original_FEJ_ID)) AND ((@IsNull_CIKK_ID = 1 AND [CIKK_ID] IS NULL) OR ([CIKK_ID] = @Original_CIKK_ID)) AND ((@IsNull_BESZ_AR = 1 AND [BESZ_AR] IS NULL) OR ([BESZ_AR] = @Original_BESZ_AR)) AND ((@IsNull_MENNYISEG = 1 AND [MENNYISEG] IS NULL) OR ([MENNYISEG] = @Original_MENNYISEG)));
SELECT SOR_ID, FEJ_ID, CIKK_ID, BESZ_AR, MENNYISEG FROM MEGRENDELES_SOR WHERE (SOR_ID = @SOR_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FEJ_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FEJ_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BESZ_AR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BESZ_AR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MENNYISEG", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MENNYISEG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SOR_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOR_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FEJ_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FEJ_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FEJ_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FEJ_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CIKK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BESZ_AR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BESZ_AR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BESZ_AR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BESZ_AR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MENNYISEG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MENNYISEG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MENNYISEG", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MENNYISEG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SOR_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "SOR_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=ERNIE-HOME\\SQL2K8;Initial Catalog=E_CAFE;Persist Security Info=True;U" +
                "ser ID=sa;Password=x";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        SOR_ID, FEJ_ID, CIKK_ID, BESZ_AR, MENNYISEG\r\nFROM            MEGREN" +
                "DELES_SOR";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsMegrendeles.MEGRENDELES_SORDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsMegrendeles.MEGRENDELES_SORDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsMegrendeles.MEGRENDELES_SORDataTable dataTable = new dsMegrendeles.MEGRENDELES_SORDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsMegrendeles.MEGRENDELES_SORDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsMegrendeles dataSet) {
            return this.Adapter.Update(dataSet, "MEGRENDELES_SOR");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_SOR_ID, global::System.Nullable<int> Original_FEJ_ID, global::System.Nullable<int> Original_CIKK_ID, global::System.Nullable<double> Original_BESZ_AR, global::System.Nullable<double> Original_MENNYISEG) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_SOR_ID));
            if ((Original_FEJ_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_FEJ_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_CIKK_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_CIKK_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_BESZ_AR.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_BESZ_AR.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_MENNYISEG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_MENNYISEG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> FEJ_ID, global::System.Nullable<int> CIKK_ID, global::System.Nullable<double> BESZ_AR, global::System.Nullable<double> MENNYISEG) {
            if ((FEJ_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(FEJ_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CIKK_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(CIKK_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((BESZ_AR.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(BESZ_AR.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((MENNYISEG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(MENNYISEG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> FEJ_ID, global::System.Nullable<int> CIKK_ID, global::System.Nullable<double> BESZ_AR, global::System.Nullable<double> MENNYISEG, int Original_SOR_ID, global::System.Nullable<int> Original_FEJ_ID, global::System.Nullable<int> Original_CIKK_ID, global::System.Nullable<double> Original_BESZ_AR, global::System.Nullable<double> Original_MENNYISEG, int SOR_ID) {
            if ((FEJ_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(FEJ_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CIKK_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(CIKK_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((BESZ_AR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(BESZ_AR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((MENNYISEG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(MENNYISEG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_SOR_ID));
            if ((Original_FEJ_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_FEJ_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_CIKK_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_CIKK_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_BESZ_AR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(Original_BESZ_AR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_MENNYISEG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(Original_MENNYISEG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(SOR_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> FEJ_ID, global::System.Nullable<int> CIKK_ID, global::System.Nullable<double> BESZ_AR, global::System.Nullable<double> MENNYISEG, int Original_SOR_ID, global::System.Nullable<int> Original_FEJ_ID, global::System.Nullable<int> Original_CIKK_ID, global::System.Nullable<double> Original_BESZ_AR, global::System.Nullable<double> Original_MENNYISEG) {
            return this.Update(FEJ_ID, CIKK_ID, BESZ_AR, MENNYISEG, Original_SOR_ID, Original_FEJ_ID, Original_CIKK_ID, Original_BESZ_AR, Original_MENNYISEG, Original_SOR_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CIKKTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CIKKTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CIKK";
            tableMapping.ColumnMappings.Add("CIKK_ID", "CIKK_ID");
            tableMapping.ColumnMappings.Add("MEGNEVEZES", "MEGNEVEZES");
            tableMapping.ColumnMappings.Add("CIKK_TIPUS", "CIKK_TIPUS");
            tableMapping.ColumnMappings.Add("CIKKCSOPORT_ID", "CIKKCSOPORT_ID");
            tableMapping.ColumnMappings.Add("ERTEKESITES_TIPUSA", "ERTEKESITES_TIPUSA");
            tableMapping.ColumnMappings.Add("MEGYS_ID", "MEGYS_ID");
            tableMapping.ColumnMappings.Add("OTHER_FILTER_ID", "OTHER_FILTER_ID");
            tableMapping.ColumnMappings.Add("DEFAULT_RAKTAR", "DEFAULT_RAKTAR");
            tableMapping.ColumnMappings.Add("SZJ_SZAM", "SZJ_SZAM");
            tableMapping.ColumnMappings.Add("CIKKSZAM", "CIKKSZAM");
            tableMapping.ColumnMappings.Add("EAN_KOD", "EAN_KOD");
            tableMapping.ColumnMappings.Add("MINIMUM_KESZLET", "MINIMUM_KESZLET");
            tableMapping.ColumnMappings.Add("OPTIMALIS_KESZLET", "OPTIMALIS_KESZLET");
            tableMapping.ColumnMappings.Add("ELADASI_AR", "ELADASI_AR");
            tableMapping.ColumnMappings.Add("HELYETTES_TERMEK", "HELYETTES_TERMEK");
            tableMapping.ColumnMappings.Add("MAX_KEDVEZMENY_SZ", "MAX_KEDVEZMENY_SZ");
            tableMapping.ColumnMappings.Add("MAX_KEDVEZM_FT", "MAX_KEDVEZM_FT");
            tableMapping.ColumnMappings.Add("MEGJEGYZES", "MEGJEGYZES");
            tableMapping.ColumnMappings.Add("AKTIV", "AKTIV");
            tableMapping.ColumnMappings.Add("GYORSKOD", "GYORSKOD");
            tableMapping.ColumnMappings.Add("RECEPT_TEXT", "RECEPT_TEXT");
            tableMapping.ColumnMappings.Add("SPEC_ZARAS", "SPEC_ZARAS");
            tableMapping.ColumnMappings.Add("RECEPT_MODSZER", "RECEPT_MODSZER");
            tableMapping.ColumnMappings.Add("RECEPT_ALK_TART", "RECEPT_ALK_TART");
            tableMapping.ColumnMappings.Add("RECEPT_POHAR", "RECEPT_POHAR");
            tableMapping.ColumnMappings.Add("ELADASI_AR_NETTO", "ELADASI_AR_NETTO");
            tableMapping.ColumnMappings.Add("AUTO_MEGRENDELO", "AUTO_MEGRENDELO");
            tableMapping.ColumnMappings.Add("VIRTUAL", "VIRTUAL");
            tableMapping.ColumnMappings.Add("CIKK_ROVID_NEV", "CIKK_ROVID_NEV");
            tableMapping.ColumnMappings.Add("CIKK_TOP_LIST", "CIKK_TOP_LIST");
            tableMapping.ColumnMappings.Add("CIKKCSOP_PREFER", "CIKKCSOP_PREFER");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [CIKK] WHERE (([CIKK_ID] = @Original_CIKK_ID) AND ([MEGNEVEZES] = @Or" +
                "iginal_MEGNEVEZES) AND ([CIKK_TIPUS] = @Original_CIKK_TIPUS) AND ((@IsNull_CIKKC" +
                "SOPORT_ID = 1 AND [CIKKCSOPORT_ID] IS NULL) OR ([CIKKCSOPORT_ID] = @Original_CIK" +
                "KCSOPORT_ID)) AND ((@IsNull_ERTEKESITES_TIPUSA = 1 AND [ERTEKESITES_TIPUSA] IS N" +
                "ULL) OR ([ERTEKESITES_TIPUSA] = @Original_ERTEKESITES_TIPUSA)) AND ((@IsNull_MEG" +
                "YS_ID = 1 AND [MEGYS_ID] IS NULL) OR ([MEGYS_ID] = @Original_MEGYS_ID)) AND ((@I" +
                "sNull_OTHER_FILTER_ID = 1 AND [OTHER_FILTER_ID] IS NULL) OR ([OTHER_FILTER_ID] =" +
                " @Original_OTHER_FILTER_ID)) AND ((@IsNull_DEFAULT_RAKTAR = 1 AND [DEFAULT_RAKTA" +
                "R] IS NULL) OR ([DEFAULT_RAKTAR] = @Original_DEFAULT_RAKTAR)) AND ((@IsNull_SZJ_" +
                "SZAM = 1 AND [SZJ_SZAM] IS NULL) OR ([SZJ_SZAM] = @Original_SZJ_SZAM)) AND ((@Is" +
                "Null_CIKKSZAM = 1 AND [CIKKSZAM] IS NULL) OR ([CIKKSZAM] = @Original_CIKKSZAM)) " +
                "AND ((@IsNull_EAN_KOD = 1 AND [EAN_KOD] IS NULL) OR ([EAN_KOD] = @Original_EAN_K" +
                "OD)) AND ((@IsNull_MINIMUM_KESZLET = 1 AND [MINIMUM_KESZLET] IS NULL) OR ([MINIM" +
                "UM_KESZLET] = @Original_MINIMUM_KESZLET)) AND ((@IsNull_OPTIMALIS_KESZLET = 1 AN" +
                "D [OPTIMALIS_KESZLET] IS NULL) OR ([OPTIMALIS_KESZLET] = @Original_OPTIMALIS_KES" +
                "ZLET)) AND ((@IsNull_ELADASI_AR = 1 AND [ELADASI_AR] IS NULL) OR ([ELADASI_AR] =" +
                " @Original_ELADASI_AR)) AND ((@IsNull_HELYETTES_TERMEK = 1 AND [HELYETTES_TERMEK" +
                "] IS NULL) OR ([HELYETTES_TERMEK] = @Original_HELYETTES_TERMEK)) AND ((@IsNull_M" +
                "AX_KEDVEZMENY_SZ = 1 AND [MAX_KEDVEZMENY_SZ] IS NULL) OR ([MAX_KEDVEZMENY_SZ] = " +
                "@Original_MAX_KEDVEZMENY_SZ)) AND ((@IsNull_MAX_KEDVEZM_FT = 1 AND [MAX_KEDVEZM_" +
                "FT] IS NULL) OR ([MAX_KEDVEZM_FT] = @Original_MAX_KEDVEZM_FT)) AND ((@IsNull_MEG" +
                "JEGYZES = 1 AND [MEGJEGYZES] IS NULL) OR ([MEGJEGYZES] = @Original_MEGJEGYZES)) " +
                "AND ((@IsNull_AKTIV = 1 AND [AKTIV] IS NULL) OR ([AKTIV] = @Original_AKTIV)) AND" +
                " ((@IsNull_GYORSKOD = 1 AND [GYORSKOD] IS NULL) OR ([GYORSKOD] = @Original_GYORS" +
                "KOD)) AND ((@IsNull_SPEC_ZARAS = 1 AND [SPEC_ZARAS] IS NULL) OR ([SPEC_ZARAS] = " +
                "@Original_SPEC_ZARAS)) AND ((@IsNull_RECEPT_MODSZER = 1 AND [RECEPT_MODSZER] IS " +
                "NULL) OR ([RECEPT_MODSZER] = @Original_RECEPT_MODSZER)) AND ((@IsNull_RECEPT_ALK" +
                "_TART = 1 AND [RECEPT_ALK_TART] IS NULL) OR ([RECEPT_ALK_TART] = @Original_RECEP" +
                "T_ALK_TART)) AND ((@IsNull_RECEPT_POHAR = 1 AND [RECEPT_POHAR] IS NULL) OR ([REC" +
                "EPT_POHAR] = @Original_RECEPT_POHAR)) AND ((@IsNull_ELADASI_AR_NETTO = 1 AND [EL" +
                "ADASI_AR_NETTO] IS NULL) OR ([ELADASI_AR_NETTO] = @Original_ELADASI_AR_NETTO)) A" +
                "ND ((@IsNull_AUTO_MEGRENDELO = 1 AND [AUTO_MEGRENDELO] IS NULL) OR ([AUTO_MEGREN" +
                "DELO] = @Original_AUTO_MEGRENDELO)) AND ((@IsNull_VIRTUAL = 1 AND [VIRTUAL] IS N" +
                "ULL) OR ([VIRTUAL] = @Original_VIRTUAL)) AND ((@IsNull_CIKK_ROVID_NEV = 1 AND [C" +
                "IKK_ROVID_NEV] IS NULL) OR ([CIKK_ROVID_NEV] = @Original_CIKK_ROVID_NEV)) AND ((" +
                "@IsNull_CIKK_TOP_LIST = 1 AND [CIKK_TOP_LIST] IS NULL) OR ([CIKK_TOP_LIST] = @Or" +
                "iginal_CIKK_TOP_LIST)) AND ((@IsNull_CIKKCSOP_PREFER = 1 AND [CIKKCSOP_PREFER] I" +
                "S NULL) OR ([CIKKCSOP_PREFER] = @Original_CIKKCSOP_PREFER)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEGNEVEZES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGNEVEZES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKK_TIPUS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_TIPUS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CIKKCSOPORT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKCSOPORT_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKKCSOPORT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKCSOPORT_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ERTEKESITES_TIPUSA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ERTEKESITES_TIPUSA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ERTEKESITES_TIPUSA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ERTEKESITES_TIPUSA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MEGYS_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGYS_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEGYS_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGYS_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OTHER_FILTER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OTHER_FILTER_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OTHER_FILTER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OTHER_FILTER_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DEFAULT_RAKTAR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_RAKTAR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEFAULT_RAKTAR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_RAKTAR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SZJ_SZAM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZJ_SZAM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SZJ_SZAM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZJ_SZAM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CIKKSZAM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKSZAM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKKSZAM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKSZAM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EAN_KOD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EAN_KOD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EAN_KOD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EAN_KOD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MINIMUM_KESZLET", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MINIMUM_KESZLET", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MINIMUM_KESZLET", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MINIMUM_KESZLET", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPTIMALIS_KESZLET", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPTIMALIS_KESZLET", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPTIMALIS_KESZLET", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPTIMALIS_KESZLET", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ELADASI_AR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELADASI_AR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ELADASI_AR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELADASI_AR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HELYETTES_TERMEK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HELYETTES_TERMEK", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HELYETTES_TERMEK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HELYETTES_TERMEK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAX_KEDVEZMENY_SZ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAX_KEDVEZMENY_SZ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAX_KEDVEZMENY_SZ", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAX_KEDVEZMENY_SZ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAX_KEDVEZM_FT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAX_KEDVEZM_FT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAX_KEDVEZM_FT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAX_KEDVEZM_FT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MEGJEGYZES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGJEGYZES", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEGJEGYZES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGJEGYZES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AKTIV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKTIV", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AKTIV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKTIV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GYORSKOD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GYORSKOD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GYORSKOD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GYORSKOD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SPEC_ZARAS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPEC_ZARAS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SPEC_ZARAS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPEC_ZARAS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RECEPT_MODSZER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_MODSZER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECEPT_MODSZER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_MODSZER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RECEPT_ALK_TART", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_ALK_TART", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECEPT_ALK_TART", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_ALK_TART", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RECEPT_POHAR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_POHAR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECEPT_POHAR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_POHAR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ELADASI_AR_NETTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELADASI_AR_NETTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ELADASI_AR_NETTO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELADASI_AR_NETTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AUTO_MEGRENDELO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTO_MEGRENDELO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AUTO_MEGRENDELO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTO_MEGRENDELO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VIRTUAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIRTUAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VIRTUAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIRTUAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CIKK_ROVID_NEV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ROVID_NEV", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKK_ROVID_NEV", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ROVID_NEV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CIKK_TOP_LIST", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_TOP_LIST", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKK_TOP_LIST", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_TOP_LIST", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CIKKCSOP_PREFER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKCSOP_PREFER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKKCSOP_PREFER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKCSOP_PREFER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [CIKK] ([MEGNEVEZES], [CIKK_TIPUS], [CIKKCSOPORT_ID], [ERTEKESITES_TIPUSA], [MEGYS_ID], [OTHER_FILTER_ID], [DEFAULT_RAKTAR], [SZJ_SZAM], [CIKKSZAM], [EAN_KOD], [MINIMUM_KESZLET], [OPTIMALIS_KESZLET], [ELADASI_AR], [HELYETTES_TERMEK], [MAX_KEDVEZMENY_SZ], [MAX_KEDVEZM_FT], [MEGJEGYZES], [AKTIV], [GYORSKOD], [RECEPT_TEXT], [SPEC_ZARAS], [RECEPT_MODSZER], [RECEPT_ALK_TART], [RECEPT_POHAR], [ELADASI_AR_NETTO], [AUTO_MEGRENDELO], [VIRTUAL], [CIKK_ROVID_NEV], [CIKK_TOP_LIST], [CIKKCSOP_PREFER]) VALUES (@MEGNEVEZES, @CIKK_TIPUS, @CIKKCSOPORT_ID, @ERTEKESITES_TIPUSA, @MEGYS_ID, @OTHER_FILTER_ID, @DEFAULT_RAKTAR, @SZJ_SZAM, @CIKKSZAM, @EAN_KOD, @MINIMUM_KESZLET, @OPTIMALIS_KESZLET, @ELADASI_AR, @HELYETTES_TERMEK, @MAX_KEDVEZMENY_SZ, @MAX_KEDVEZM_FT, @MEGJEGYZES, @AKTIV, @GYORSKOD, @RECEPT_TEXT, @SPEC_ZARAS, @RECEPT_MODSZER, @RECEPT_ALK_TART, @RECEPT_POHAR, @ELADASI_AR_NETTO, @AUTO_MEGRENDELO, @VIRTUAL, @CIKK_ROVID_NEV, @CIKK_TOP_LIST, @CIKKCSOP_PREFER);
SELECT CIKK_ID, MEGNEVEZES, CIKK_TIPUS, CIKKCSOPORT_ID, ERTEKESITES_TIPUSA, MEGYS_ID, OTHER_FILTER_ID, DEFAULT_RAKTAR, SZJ_SZAM, CIKKSZAM, EAN_KOD, MINIMUM_KESZLET, OPTIMALIS_KESZLET, ELADASI_AR, HELYETTES_TERMEK, MAX_KEDVEZMENY_SZ, MAX_KEDVEZM_FT, MEGJEGYZES, AKTIV, GYORSKOD, RECEPT_TEXT, SPEC_ZARAS, RECEPT_MODSZER, RECEPT_ALK_TART, RECEPT_POHAR, ELADASI_AR_NETTO, AUTO_MEGRENDELO, VIRTUAL, CIKK_ROVID_NEV, CIKK_TOP_LIST, CIKKCSOP_PREFER FROM CIKK WHERE (CIKK_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEGNEVEZES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGNEVEZES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKK_TIPUS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_TIPUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKKCSOPORT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKCSOPORT_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ERTEKESITES_TIPUSA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ERTEKESITES_TIPUSA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEGYS_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGYS_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTHER_FILTER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OTHER_FILTER_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEFAULT_RAKTAR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_RAKTAR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SZJ_SZAM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZJ_SZAM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKKSZAM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKSZAM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EAN_KOD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EAN_KOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MINIMUM_KESZLET", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MINIMUM_KESZLET", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPTIMALIS_KESZLET", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPTIMALIS_KESZLET", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ELADASI_AR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELADASI_AR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HELYETTES_TERMEK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HELYETTES_TERMEK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAX_KEDVEZMENY_SZ", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAX_KEDVEZMENY_SZ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAX_KEDVEZM_FT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAX_KEDVEZM_FT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEGJEGYZES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGJEGYZES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AKTIV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKTIV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GYORSKOD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GYORSKOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEPT_TEXT", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_TEXT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPEC_ZARAS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPEC_ZARAS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEPT_MODSZER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_MODSZER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEPT_ALK_TART", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_ALK_TART", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEPT_POHAR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_POHAR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ELADASI_AR_NETTO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELADASI_AR_NETTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AUTO_MEGRENDELO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTO_MEGRENDELO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VIRTUAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIRTUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKK_ROVID_NEV", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ROVID_NEV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKK_TOP_LIST", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_TOP_LIST", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKKCSOP_PREFER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKCSOP_PREFER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [CIKK] SET [MEGNEVEZES] = @MEGNEVEZES, [CIKK_TIPUS] = @CIKK_TIPUS, [CIKKCS" +
                "OPORT_ID] = @CIKKCSOPORT_ID, [ERTEKESITES_TIPUSA] = @ERTEKESITES_TIPUSA, [MEGYS_" +
                "ID] = @MEGYS_ID, [OTHER_FILTER_ID] = @OTHER_FILTER_ID, [DEFAULT_RAKTAR] = @DEFAU" +
                "LT_RAKTAR, [SZJ_SZAM] = @SZJ_SZAM, [CIKKSZAM] = @CIKKSZAM, [EAN_KOD] = @EAN_KOD," +
                " [MINIMUM_KESZLET] = @MINIMUM_KESZLET, [OPTIMALIS_KESZLET] = @OPTIMALIS_KESZLET," +
                " [ELADASI_AR] = @ELADASI_AR, [HELYETTES_TERMEK] = @HELYETTES_TERMEK, [MAX_KEDVEZ" +
                "MENY_SZ] = @MAX_KEDVEZMENY_SZ, [MAX_KEDVEZM_FT] = @MAX_KEDVEZM_FT, [MEGJEGYZES] " +
                "= @MEGJEGYZES, [AKTIV] = @AKTIV, [GYORSKOD] = @GYORSKOD, [RECEPT_TEXT] = @RECEPT" +
                "_TEXT, [SPEC_ZARAS] = @SPEC_ZARAS, [RECEPT_MODSZER] = @RECEPT_MODSZER, [RECEPT_A" +
                "LK_TART] = @RECEPT_ALK_TART, [RECEPT_POHAR] = @RECEPT_POHAR, [ELADASI_AR_NETTO] " +
                "= @ELADASI_AR_NETTO, [AUTO_MEGRENDELO] = @AUTO_MEGRENDELO, [VIRTUAL] = @VIRTUAL," +
                " [CIKK_ROVID_NEV] = @CIKK_ROVID_NEV, [CIKK_TOP_LIST] = @CIKK_TOP_LIST, [CIKKCSOP" +
                "_PREFER] = @CIKKCSOP_PREFER WHERE (([CIKK_ID] = @Original_CIKK_ID) AND ([MEGNEVE" +
                "ZES] = @Original_MEGNEVEZES) AND ([CIKK_TIPUS] = @Original_CIKK_TIPUS) AND ((@Is" +
                "Null_CIKKCSOPORT_ID = 1 AND [CIKKCSOPORT_ID] IS NULL) OR ([CIKKCSOPORT_ID] = @Or" +
                "iginal_CIKKCSOPORT_ID)) AND ((@IsNull_ERTEKESITES_TIPUSA = 1 AND [ERTEKESITES_TI" +
                "PUSA] IS NULL) OR ([ERTEKESITES_TIPUSA] = @Original_ERTEKESITES_TIPUSA)) AND ((@" +
                "IsNull_MEGYS_ID = 1 AND [MEGYS_ID] IS NULL) OR ([MEGYS_ID] = @Original_MEGYS_ID)" +
                ") AND ((@IsNull_OTHER_FILTER_ID = 1 AND [OTHER_FILTER_ID] IS NULL) OR ([OTHER_FI" +
                "LTER_ID] = @Original_OTHER_FILTER_ID)) AND ((@IsNull_DEFAULT_RAKTAR = 1 AND [DEF" +
                "AULT_RAKTAR] IS NULL) OR ([DEFAULT_RAKTAR] = @Original_DEFAULT_RAKTAR)) AND ((@I" +
                "sNull_SZJ_SZAM = 1 AND [SZJ_SZAM] IS NULL) OR ([SZJ_SZAM] = @Original_SZJ_SZAM))" +
                " AND ((@IsNull_CIKKSZAM = 1 AND [CIKKSZAM] IS NULL) OR ([CIKKSZAM] = @Original_C" +
                "IKKSZAM)) AND ((@IsNull_EAN_KOD = 1 AND [EAN_KOD] IS NULL) OR ([EAN_KOD] = @Orig" +
                "inal_EAN_KOD)) AND ((@IsNull_MINIMUM_KESZLET = 1 AND [MINIMUM_KESZLET] IS NULL) " +
                "OR ([MINIMUM_KESZLET] = @Original_MINIMUM_KESZLET)) AND ((@IsNull_OPTIMALIS_KESZ" +
                "LET = 1 AND [OPTIMALIS_KESZLET] IS NULL) OR ([OPTIMALIS_KESZLET] = @Original_OPT" +
                "IMALIS_KESZLET)) AND ((@IsNull_ELADASI_AR = 1 AND [ELADASI_AR] IS NULL) OR ([ELA" +
                "DASI_AR] = @Original_ELADASI_AR)) AND ((@IsNull_HELYETTES_TERMEK = 1 AND [HELYET" +
                "TES_TERMEK] IS NULL) OR ([HELYETTES_TERMEK] = @Original_HELYETTES_TERMEK)) AND (" +
                "(@IsNull_MAX_KEDVEZMENY_SZ = 1 AND [MAX_KEDVEZMENY_SZ] IS NULL) OR ([MAX_KEDVEZM" +
                "ENY_SZ] = @Original_MAX_KEDVEZMENY_SZ)) AND ((@IsNull_MAX_KEDVEZM_FT = 1 AND [MA" +
                "X_KEDVEZM_FT] IS NULL) OR ([MAX_KEDVEZM_FT] = @Original_MAX_KEDVEZM_FT)) AND ((@" +
                "IsNull_MEGJEGYZES = 1 AND [MEGJEGYZES] IS NULL) OR ([MEGJEGYZES] = @Original_MEG" +
                "JEGYZES)) AND ((@IsNull_AKTIV = 1 AND [AKTIV] IS NULL) OR ([AKTIV] = @Original_A" +
                "KTIV)) AND ((@IsNull_GYORSKOD = 1 AND [GYORSKOD] IS NULL) OR ([GYORSKOD] = @Orig" +
                "inal_GYORSKOD)) AND ((@IsNull_SPEC_ZARAS = 1 AND [SPEC_ZARAS] IS NULL) OR ([SPEC" +
                "_ZARAS] = @Original_SPEC_ZARAS)) AND ((@IsNull_RECEPT_MODSZER = 1 AND [RECEPT_MO" +
                "DSZER] IS NULL) OR ([RECEPT_MODSZER] = @Original_RECEPT_MODSZER)) AND ((@IsNull_" +
                "RECEPT_ALK_TART = 1 AND [RECEPT_ALK_TART] IS NULL) OR ([RECEPT_ALK_TART] = @Orig" +
                "inal_RECEPT_ALK_TART)) AND ((@IsNull_RECEPT_POHAR = 1 AND [RECEPT_POHAR] IS NULL" +
                ") OR ([RECEPT_POHAR] = @Original_RECEPT_POHAR)) AND ((@IsNull_ELADASI_AR_NETTO =" +
                " 1 AND [ELADASI_AR_NETTO] IS NULL) OR ([ELADASI_AR_NETTO] = @Original_ELADASI_AR" +
                "_NETTO)) AND ((@IsNull_AUTO_MEGRENDELO = 1 AND [AUTO_MEGRENDELO] IS NULL) OR ([A" +
                "UTO_MEGRENDELO] = @Original_AUTO_MEGRENDELO)) AND ((@IsNull_VIRTUAL = 1 AND [VIR" +
                "TUAL] IS NULL) OR ([VIRTUAL] = @Original_VIRTUAL)) AND ((@IsNull_CIKK_ROVID_NEV " +
                "= 1 AND [CIKK_ROVID_NEV] IS NULL) OR ([CIKK_ROVID_NEV] = @Original_CIKK_ROVID_NE" +
                "V)) AND ((@IsNull_CIKK_TOP_LIST = 1 AND [CIKK_TOP_LIST] IS NULL) OR ([CIKK_TOP_L" +
                "IST] = @Original_CIKK_TOP_LIST)) AND ((@IsNull_CIKKCSOP_PREFER = 1 AND [CIKKCSOP" +
                "_PREFER] IS NULL) OR ([CIKKCSOP_PREFER] = @Original_CIKKCSOP_PREFER)));\r\nSELECT " +
                "CIKK_ID, MEGNEVEZES, CIKK_TIPUS, CIKKCSOPORT_ID, ERTEKESITES_TIPUSA, MEGYS_ID, O" +
                "THER_FILTER_ID, DEFAULT_RAKTAR, SZJ_SZAM, CIKKSZAM, EAN_KOD, MINIMUM_KESZLET, OP" +
                "TIMALIS_KESZLET, ELADASI_AR, HELYETTES_TERMEK, MAX_KEDVEZMENY_SZ, MAX_KEDVEZM_FT" +
                ", MEGJEGYZES, AKTIV, GYORSKOD, RECEPT_TEXT, SPEC_ZARAS, RECEPT_MODSZER, RECEPT_A" +
                "LK_TART, RECEPT_POHAR, ELADASI_AR_NETTO, AUTO_MEGRENDELO, VIRTUAL, CIKK_ROVID_NE" +
                "V, CIKK_TOP_LIST, CIKKCSOP_PREFER FROM CIKK WHERE (CIKK_ID = @CIKK_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEGNEVEZES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGNEVEZES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKK_TIPUS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_TIPUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKKCSOPORT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKCSOPORT_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ERTEKESITES_TIPUSA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ERTEKESITES_TIPUSA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEGYS_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGYS_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTHER_FILTER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OTHER_FILTER_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEFAULT_RAKTAR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_RAKTAR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SZJ_SZAM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZJ_SZAM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKKSZAM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKSZAM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EAN_KOD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EAN_KOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MINIMUM_KESZLET", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MINIMUM_KESZLET", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPTIMALIS_KESZLET", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPTIMALIS_KESZLET", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ELADASI_AR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELADASI_AR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HELYETTES_TERMEK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HELYETTES_TERMEK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAX_KEDVEZMENY_SZ", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAX_KEDVEZMENY_SZ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAX_KEDVEZM_FT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAX_KEDVEZM_FT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEGJEGYZES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGJEGYZES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AKTIV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKTIV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GYORSKOD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GYORSKOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEPT_TEXT", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_TEXT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPEC_ZARAS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPEC_ZARAS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEPT_MODSZER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_MODSZER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEPT_ALK_TART", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_ALK_TART", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEPT_POHAR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_POHAR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ELADASI_AR_NETTO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELADASI_AR_NETTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AUTO_MEGRENDELO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTO_MEGRENDELO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VIRTUAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIRTUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKK_ROVID_NEV", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ROVID_NEV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKK_TOP_LIST", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_TOP_LIST", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKKCSOP_PREFER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKCSOP_PREFER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEGNEVEZES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGNEVEZES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKK_TIPUS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_TIPUS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CIKKCSOPORT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKCSOPORT_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKKCSOPORT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKCSOPORT_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ERTEKESITES_TIPUSA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ERTEKESITES_TIPUSA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ERTEKESITES_TIPUSA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ERTEKESITES_TIPUSA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MEGYS_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGYS_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEGYS_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGYS_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OTHER_FILTER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OTHER_FILTER_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OTHER_FILTER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OTHER_FILTER_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DEFAULT_RAKTAR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_RAKTAR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEFAULT_RAKTAR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_RAKTAR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SZJ_SZAM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZJ_SZAM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SZJ_SZAM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SZJ_SZAM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CIKKSZAM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKSZAM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKKSZAM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKSZAM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EAN_KOD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EAN_KOD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EAN_KOD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EAN_KOD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MINIMUM_KESZLET", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MINIMUM_KESZLET", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MINIMUM_KESZLET", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MINIMUM_KESZLET", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPTIMALIS_KESZLET", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPTIMALIS_KESZLET", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPTIMALIS_KESZLET", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPTIMALIS_KESZLET", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ELADASI_AR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELADASI_AR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ELADASI_AR", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELADASI_AR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HELYETTES_TERMEK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HELYETTES_TERMEK", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HELYETTES_TERMEK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HELYETTES_TERMEK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAX_KEDVEZMENY_SZ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAX_KEDVEZMENY_SZ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAX_KEDVEZMENY_SZ", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAX_KEDVEZMENY_SZ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAX_KEDVEZM_FT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAX_KEDVEZM_FT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAX_KEDVEZM_FT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAX_KEDVEZM_FT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MEGJEGYZES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGJEGYZES", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEGJEGYZES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGJEGYZES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AKTIV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKTIV", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AKTIV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AKTIV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GYORSKOD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GYORSKOD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GYORSKOD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GYORSKOD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SPEC_ZARAS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPEC_ZARAS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SPEC_ZARAS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPEC_ZARAS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RECEPT_MODSZER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_MODSZER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECEPT_MODSZER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_MODSZER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RECEPT_ALK_TART", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_ALK_TART", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECEPT_ALK_TART", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_ALK_TART", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RECEPT_POHAR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_POHAR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECEPT_POHAR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEPT_POHAR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ELADASI_AR_NETTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELADASI_AR_NETTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ELADASI_AR_NETTO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ELADASI_AR_NETTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AUTO_MEGRENDELO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTO_MEGRENDELO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AUTO_MEGRENDELO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTO_MEGRENDELO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VIRTUAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIRTUAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VIRTUAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIRTUAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CIKK_ROVID_NEV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ROVID_NEV", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKK_ROVID_NEV", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ROVID_NEV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CIKK_TOP_LIST", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_TOP_LIST", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKK_TOP_LIST", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_TOP_LIST", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CIKKCSOP_PREFER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKCSOP_PREFER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIKKCSOP_PREFER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIKKCSOP_PREFER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIKK_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CIKK_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=ERNIE-HOME\\SQL2K8;Initial Catalog=E_CAFE;Persist Security Info=True;U" +
                "ser ID=sa;Password=x";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        CIKK.*\r\nFROM            CIKK";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsMegrendeles.CIKKDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsMegrendeles.CIKKDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsMegrendeles.CIKKDataTable dataTable = new dsMegrendeles.CIKKDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsMegrendeles.CIKKDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsMegrendeles dataSet) {
            return this.Adapter.Update(dataSet, "CIKK");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_CIKK_ID, 
                    string Original_MEGNEVEZES, 
                    int Original_CIKK_TIPUS, 
                    global::System.Nullable<int> Original_CIKKCSOPORT_ID, 
                    string Original_ERTEKESITES_TIPUSA, 
                    string Original_MEGYS_ID, 
                    global::System.Nullable<int> Original_OTHER_FILTER_ID, 
                    global::System.Nullable<int> Original_DEFAULT_RAKTAR, 
                    string Original_SZJ_SZAM, 
                    string Original_CIKKSZAM, 
                    string Original_EAN_KOD, 
                    global::System.Nullable<double> Original_MINIMUM_KESZLET, 
                    global::System.Nullable<double> Original_OPTIMALIS_KESZLET, 
                    global::System.Nullable<double> Original_ELADASI_AR, 
                    global::System.Nullable<int> Original_HELYETTES_TERMEK, 
                    global::System.Nullable<double> Original_MAX_KEDVEZMENY_SZ, 
                    global::System.Nullable<double> Original_MAX_KEDVEZM_FT, 
                    string Original_MEGJEGYZES, 
                    global::System.Nullable<int> Original_AKTIV, 
                    string Original_GYORSKOD, 
                    global::System.Nullable<int> Original_SPEC_ZARAS, 
                    string Original_RECEPT_MODSZER, 
                    string Original_RECEPT_ALK_TART, 
                    string Original_RECEPT_POHAR, 
                    global::System.Nullable<double> Original_ELADASI_AR_NETTO, 
                    global::System.Nullable<int> Original_AUTO_MEGRENDELO, 
                    global::System.Nullable<int> Original_VIRTUAL, 
                    string Original_CIKK_ROVID_NEV, 
                    global::System.Nullable<int> Original_CIKK_TOP_LIST, 
                    global::System.Nullable<int> Original_CIKKCSOP_PREFER) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_CIKK_ID));
            if ((Original_MEGNEVEZES == null)) {
                throw new global::System.ArgumentNullException("Original_MEGNEVEZES");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_MEGNEVEZES));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_CIKK_TIPUS));
            if ((Original_CIKKCSOPORT_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_CIKKCSOPORT_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_ERTEKESITES_TIPUSA == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ERTEKESITES_TIPUSA));
            }
            if ((Original_MEGYS_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_MEGYS_ID));
            }
            if ((Original_OTHER_FILTER_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_OTHER_FILTER_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_DEFAULT_RAKTAR.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_DEFAULT_RAKTAR.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_SZJ_SZAM == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_SZJ_SZAM));
            }
            if ((Original_CIKKSZAM == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_CIKKSZAM));
            }
            if ((Original_EAN_KOD == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_EAN_KOD));
            }
            if ((Original_MINIMUM_KESZLET.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((double)(Original_MINIMUM_KESZLET.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_OPTIMALIS_KESZLET.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((double)(Original_OPTIMALIS_KESZLET.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_ELADASI_AR.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((double)(Original_ELADASI_AR.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_HELYETTES_TERMEK.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((int)(Original_HELYETTES_TERMEK.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_MAX_KEDVEZMENY_SZ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((double)(Original_MAX_KEDVEZMENY_SZ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_MAX_KEDVEZM_FT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((double)(Original_MAX_KEDVEZM_FT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_MEGJEGYZES == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_MEGJEGYZES));
            }
            if ((Original_AKTIV.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((int)(Original_AKTIV.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_GYORSKOD == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_GYORSKOD));
            }
            if ((Original_SPEC_ZARAS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((int)(Original_SPEC_ZARAS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_RECEPT_MODSZER == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_RECEPT_MODSZER));
            }
            if ((Original_RECEPT_ALK_TART == null)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_RECEPT_ALK_TART));
            }
            if ((Original_RECEPT_POHAR == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_RECEPT_POHAR));
            }
            if ((Original_ELADASI_AR_NETTO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((double)(Original_ELADASI_AR_NETTO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_AUTO_MEGRENDELO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((int)(Original_AUTO_MEGRENDELO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_VIRTUAL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((int)(Original_VIRTUAL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_CIKK_ROVID_NEV == null)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((string)(Original_CIKK_ROVID_NEV));
            }
            if ((Original_CIKK_TOP_LIST.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((int)(Original_CIKK_TOP_LIST.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_CIKKCSOP_PREFER.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((int)(Original_CIKKCSOP_PREFER.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string MEGNEVEZES, 
                    int CIKK_TIPUS, 
                    global::System.Nullable<int> CIKKCSOPORT_ID, 
                    string ERTEKESITES_TIPUSA, 
                    string MEGYS_ID, 
                    global::System.Nullable<int> OTHER_FILTER_ID, 
                    global::System.Nullable<int> DEFAULT_RAKTAR, 
                    string SZJ_SZAM, 
                    string CIKKSZAM, 
                    string EAN_KOD, 
                    global::System.Nullable<double> MINIMUM_KESZLET, 
                    global::System.Nullable<double> OPTIMALIS_KESZLET, 
                    global::System.Nullable<double> ELADASI_AR, 
                    global::System.Nullable<int> HELYETTES_TERMEK, 
                    global::System.Nullable<double> MAX_KEDVEZMENY_SZ, 
                    global::System.Nullable<double> MAX_KEDVEZM_FT, 
                    string MEGJEGYZES, 
                    global::System.Nullable<int> AKTIV, 
                    string GYORSKOD, 
                    string RECEPT_TEXT, 
                    global::System.Nullable<int> SPEC_ZARAS, 
                    string RECEPT_MODSZER, 
                    string RECEPT_ALK_TART, 
                    string RECEPT_POHAR, 
                    global::System.Nullable<double> ELADASI_AR_NETTO, 
                    global::System.Nullable<int> AUTO_MEGRENDELO, 
                    global::System.Nullable<int> VIRTUAL, 
                    string CIKK_ROVID_NEV, 
                    global::System.Nullable<int> CIKK_TOP_LIST, 
                    global::System.Nullable<int> CIKKCSOP_PREFER) {
            if ((MEGNEVEZES == null)) {
                throw new global::System.ArgumentNullException("MEGNEVEZES");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MEGNEVEZES));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(CIKK_TIPUS));
            if ((CIKKCSOPORT_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(CIKKCSOPORT_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ERTEKESITES_TIPUSA == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ERTEKESITES_TIPUSA));
            }
            if ((MEGYS_ID == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(MEGYS_ID));
            }
            if ((OTHER_FILTER_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(OTHER_FILTER_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((DEFAULT_RAKTAR.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(DEFAULT_RAKTAR.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((SZJ_SZAM == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(SZJ_SZAM));
            }
            if ((CIKKSZAM == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(CIKKSZAM));
            }
            if ((EAN_KOD == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(EAN_KOD));
            }
            if ((MINIMUM_KESZLET.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((double)(MINIMUM_KESZLET.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((OPTIMALIS_KESZLET.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(OPTIMALIS_KESZLET.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((ELADASI_AR.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((double)(ELADASI_AR.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((HELYETTES_TERMEK.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(HELYETTES_TERMEK.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((MAX_KEDVEZMENY_SZ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((double)(MAX_KEDVEZMENY_SZ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((MAX_KEDVEZM_FT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((double)(MAX_KEDVEZM_FT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((MEGJEGYZES == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(MEGJEGYZES));
            }
            if ((AKTIV.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((int)(AKTIV.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((GYORSKOD == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(GYORSKOD));
            }
            if ((RECEPT_TEXT == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(RECEPT_TEXT));
            }
            if ((SPEC_ZARAS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(SPEC_ZARAS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((RECEPT_MODSZER == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(RECEPT_MODSZER));
            }
            if ((RECEPT_ALK_TART == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(RECEPT_ALK_TART));
            }
            if ((RECEPT_POHAR == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(RECEPT_POHAR));
            }
            if ((ELADASI_AR_NETTO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((double)(ELADASI_AR_NETTO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((AUTO_MEGRENDELO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((int)(AUTO_MEGRENDELO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((VIRTUAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((int)(VIRTUAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((CIKK_ROVID_NEV == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(CIKK_ROVID_NEV));
            }
            if ((CIKK_TOP_LIST.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((int)(CIKK_TOP_LIST.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((CIKKCSOP_PREFER.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((int)(CIKKCSOP_PREFER.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string MEGNEVEZES, 
                    int CIKK_TIPUS, 
                    global::System.Nullable<int> CIKKCSOPORT_ID, 
                    string ERTEKESITES_TIPUSA, 
                    string MEGYS_ID, 
                    global::System.Nullable<int> OTHER_FILTER_ID, 
                    global::System.Nullable<int> DEFAULT_RAKTAR, 
                    string SZJ_SZAM, 
                    string CIKKSZAM, 
                    string EAN_KOD, 
                    global::System.Nullable<double> MINIMUM_KESZLET, 
                    global::System.Nullable<double> OPTIMALIS_KESZLET, 
                    global::System.Nullable<double> ELADASI_AR, 
                    global::System.Nullable<int> HELYETTES_TERMEK, 
                    global::System.Nullable<double> MAX_KEDVEZMENY_SZ, 
                    global::System.Nullable<double> MAX_KEDVEZM_FT, 
                    string MEGJEGYZES, 
                    global::System.Nullable<int> AKTIV, 
                    string GYORSKOD, 
                    string RECEPT_TEXT, 
                    global::System.Nullable<int> SPEC_ZARAS, 
                    string RECEPT_MODSZER, 
                    string RECEPT_ALK_TART, 
                    string RECEPT_POHAR, 
                    global::System.Nullable<double> ELADASI_AR_NETTO, 
                    global::System.Nullable<int> AUTO_MEGRENDELO, 
                    global::System.Nullable<int> VIRTUAL, 
                    string CIKK_ROVID_NEV, 
                    global::System.Nullable<int> CIKK_TOP_LIST, 
                    global::System.Nullable<int> CIKKCSOP_PREFER, 
                    int Original_CIKK_ID, 
                    string Original_MEGNEVEZES, 
                    int Original_CIKK_TIPUS, 
                    global::System.Nullable<int> Original_CIKKCSOPORT_ID, 
                    string Original_ERTEKESITES_TIPUSA, 
                    string Original_MEGYS_ID, 
                    global::System.Nullable<int> Original_OTHER_FILTER_ID, 
                    global::System.Nullable<int> Original_DEFAULT_RAKTAR, 
                    string Original_SZJ_SZAM, 
                    string Original_CIKKSZAM, 
                    string Original_EAN_KOD, 
                    global::System.Nullable<double> Original_MINIMUM_KESZLET, 
                    global::System.Nullable<double> Original_OPTIMALIS_KESZLET, 
                    global::System.Nullable<double> Original_ELADASI_AR, 
                    global::System.Nullable<int> Original_HELYETTES_TERMEK, 
                    global::System.Nullable<double> Original_MAX_KEDVEZMENY_SZ, 
                    global::System.Nullable<double> Original_MAX_KEDVEZM_FT, 
                    string Original_MEGJEGYZES, 
                    global::System.Nullable<int> Original_AKTIV, 
                    string Original_GYORSKOD, 
                    global::System.Nullable<int> Original_SPEC_ZARAS, 
                    string Original_RECEPT_MODSZER, 
                    string Original_RECEPT_ALK_TART, 
                    string Original_RECEPT_POHAR, 
                    global::System.Nullable<double> Original_ELADASI_AR_NETTO, 
                    global::System.Nullable<int> Original_AUTO_MEGRENDELO, 
                    global::System.Nullable<int> Original_VIRTUAL, 
                    string Original_CIKK_ROVID_NEV, 
                    global::System.Nullable<int> Original_CIKK_TOP_LIST, 
                    global::System.Nullable<int> Original_CIKKCSOP_PREFER, 
                    int CIKK_ID) {
            if ((MEGNEVEZES == null)) {
                throw new global::System.ArgumentNullException("MEGNEVEZES");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MEGNEVEZES));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(CIKK_TIPUS));
            if ((CIKKCSOPORT_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(CIKKCSOPORT_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ERTEKESITES_TIPUSA == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ERTEKESITES_TIPUSA));
            }
            if ((MEGYS_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(MEGYS_ID));
            }
            if ((OTHER_FILTER_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(OTHER_FILTER_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((DEFAULT_RAKTAR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(DEFAULT_RAKTAR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((SZJ_SZAM == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(SZJ_SZAM));
            }
            if ((CIKKSZAM == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(CIKKSZAM));
            }
            if ((EAN_KOD == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(EAN_KOD));
            }
            if ((MINIMUM_KESZLET.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(MINIMUM_KESZLET.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((OPTIMALIS_KESZLET.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(OPTIMALIS_KESZLET.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((ELADASI_AR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(ELADASI_AR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((HELYETTES_TERMEK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(HELYETTES_TERMEK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((MAX_KEDVEZMENY_SZ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(MAX_KEDVEZMENY_SZ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((MAX_KEDVEZM_FT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(MAX_KEDVEZM_FT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((MEGJEGYZES == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(MEGJEGYZES));
            }
            if ((AKTIV.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(AKTIV.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((GYORSKOD == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(GYORSKOD));
            }
            if ((RECEPT_TEXT == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(RECEPT_TEXT));
            }
            if ((SPEC_ZARAS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(SPEC_ZARAS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((RECEPT_MODSZER == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(RECEPT_MODSZER));
            }
            if ((RECEPT_ALK_TART == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(RECEPT_ALK_TART));
            }
            if ((RECEPT_POHAR == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(RECEPT_POHAR));
            }
            if ((ELADASI_AR_NETTO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((double)(ELADASI_AR_NETTO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((AUTO_MEGRENDELO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(AUTO_MEGRENDELO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((VIRTUAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(VIRTUAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((CIKK_ROVID_NEV == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(CIKK_ROVID_NEV));
            }
            if ((CIKK_TOP_LIST.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(CIKK_TOP_LIST.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((CIKKCSOP_PREFER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(CIKKCSOP_PREFER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(Original_CIKK_ID));
            if ((Original_MEGNEVEZES == null)) {
                throw new global::System.ArgumentNullException("Original_MEGNEVEZES");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_MEGNEVEZES));
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(Original_CIKK_TIPUS));
            if ((Original_CIKKCSOPORT_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(Original_CIKKCSOPORT_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_ERTEKESITES_TIPUSA == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_ERTEKESITES_TIPUSA));
            }
            if ((Original_MEGYS_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_MEGYS_ID));
            }
            if ((Original_OTHER_FILTER_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(Original_OTHER_FILTER_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_DEFAULT_RAKTAR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(Original_DEFAULT_RAKTAR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_SZJ_SZAM == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_SZJ_SZAM));
            }
            if ((Original_CIKKSZAM == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_CIKKSZAM));
            }
            if ((Original_EAN_KOD == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_EAN_KOD));
            }
            if ((Original_MINIMUM_KESZLET.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((double)(Original_MINIMUM_KESZLET.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_OPTIMALIS_KESZLET.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((double)(Original_OPTIMALIS_KESZLET.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_ELADASI_AR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((double)(Original_ELADASI_AR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_HELYETTES_TERMEK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((int)(Original_HELYETTES_TERMEK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_MAX_KEDVEZMENY_SZ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((double)(Original_MAX_KEDVEZMENY_SZ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_MAX_KEDVEZM_FT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((double)(Original_MAX_KEDVEZM_FT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_MEGJEGYZES == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_MEGJEGYZES));
            }
            if ((Original_AKTIV.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((int)(Original_AKTIV.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_GYORSKOD == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(Original_GYORSKOD));
            }
            if ((Original_SPEC_ZARAS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((int)(Original_SPEC_ZARAS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_RECEPT_MODSZER == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Original_RECEPT_MODSZER));
            }
            if ((Original_RECEPT_ALK_TART == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(Original_RECEPT_ALK_TART));
            }
            if ((Original_RECEPT_POHAR == null)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((string)(Original_RECEPT_POHAR));
            }
            if ((Original_ELADASI_AR_NETTO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[76].Value = ((double)(Original_ELADASI_AR_NETTO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Original_AUTO_MEGRENDELO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[78].Value = ((int)(Original_AUTO_MEGRENDELO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Original_VIRTUAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[80].Value = ((int)(Original_VIRTUAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((Original_CIKK_ROVID_NEV == null)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[82].Value = ((string)(Original_CIKK_ROVID_NEV));
            }
            if ((Original_CIKK_TOP_LIST.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((int)(Original_CIKK_TOP_LIST.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((Original_CIKKCSOP_PREFER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[86].Value = ((int)(Original_CIKKCSOP_PREFER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[87].Value = ((int)(CIKK_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string MEGNEVEZES, 
                    int CIKK_TIPUS, 
                    global::System.Nullable<int> CIKKCSOPORT_ID, 
                    string ERTEKESITES_TIPUSA, 
                    string MEGYS_ID, 
                    global::System.Nullable<int> OTHER_FILTER_ID, 
                    global::System.Nullable<int> DEFAULT_RAKTAR, 
                    string SZJ_SZAM, 
                    string CIKKSZAM, 
                    string EAN_KOD, 
                    global::System.Nullable<double> MINIMUM_KESZLET, 
                    global::System.Nullable<double> OPTIMALIS_KESZLET, 
                    global::System.Nullable<double> ELADASI_AR, 
                    global::System.Nullable<int> HELYETTES_TERMEK, 
                    global::System.Nullable<double> MAX_KEDVEZMENY_SZ, 
                    global::System.Nullable<double> MAX_KEDVEZM_FT, 
                    string MEGJEGYZES, 
                    global::System.Nullable<int> AKTIV, 
                    string GYORSKOD, 
                    string RECEPT_TEXT, 
                    global::System.Nullable<int> SPEC_ZARAS, 
                    string RECEPT_MODSZER, 
                    string RECEPT_ALK_TART, 
                    string RECEPT_POHAR, 
                    global::System.Nullable<double> ELADASI_AR_NETTO, 
                    global::System.Nullable<int> AUTO_MEGRENDELO, 
                    global::System.Nullable<int> VIRTUAL, 
                    string CIKK_ROVID_NEV, 
                    global::System.Nullable<int> CIKK_TOP_LIST, 
                    global::System.Nullable<int> CIKKCSOP_PREFER, 
                    int Original_CIKK_ID, 
                    string Original_MEGNEVEZES, 
                    int Original_CIKK_TIPUS, 
                    global::System.Nullable<int> Original_CIKKCSOPORT_ID, 
                    string Original_ERTEKESITES_TIPUSA, 
                    string Original_MEGYS_ID, 
                    global::System.Nullable<int> Original_OTHER_FILTER_ID, 
                    global::System.Nullable<int> Original_DEFAULT_RAKTAR, 
                    string Original_SZJ_SZAM, 
                    string Original_CIKKSZAM, 
                    string Original_EAN_KOD, 
                    global::System.Nullable<double> Original_MINIMUM_KESZLET, 
                    global::System.Nullable<double> Original_OPTIMALIS_KESZLET, 
                    global::System.Nullable<double> Original_ELADASI_AR, 
                    global::System.Nullable<int> Original_HELYETTES_TERMEK, 
                    global::System.Nullable<double> Original_MAX_KEDVEZMENY_SZ, 
                    global::System.Nullable<double> Original_MAX_KEDVEZM_FT, 
                    string Original_MEGJEGYZES, 
                    global::System.Nullable<int> Original_AKTIV, 
                    string Original_GYORSKOD, 
                    global::System.Nullable<int> Original_SPEC_ZARAS, 
                    string Original_RECEPT_MODSZER, 
                    string Original_RECEPT_ALK_TART, 
                    string Original_RECEPT_POHAR, 
                    global::System.Nullable<double> Original_ELADASI_AR_NETTO, 
                    global::System.Nullable<int> Original_AUTO_MEGRENDELO, 
                    global::System.Nullable<int> Original_VIRTUAL, 
                    string Original_CIKK_ROVID_NEV, 
                    global::System.Nullable<int> Original_CIKK_TOP_LIST, 
                    global::System.Nullable<int> Original_CIKKCSOP_PREFER) {
            return this.Update(MEGNEVEZES, CIKK_TIPUS, CIKKCSOPORT_ID, ERTEKESITES_TIPUSA, MEGYS_ID, OTHER_FILTER_ID, DEFAULT_RAKTAR, SZJ_SZAM, CIKKSZAM, EAN_KOD, MINIMUM_KESZLET, OPTIMALIS_KESZLET, ELADASI_AR, HELYETTES_TERMEK, MAX_KEDVEZMENY_SZ, MAX_KEDVEZM_FT, MEGJEGYZES, AKTIV, GYORSKOD, RECEPT_TEXT, SPEC_ZARAS, RECEPT_MODSZER, RECEPT_ALK_TART, RECEPT_POHAR, ELADASI_AR_NETTO, AUTO_MEGRENDELO, VIRTUAL, CIKK_ROVID_NEV, CIKK_TOP_LIST, CIKKCSOP_PREFER, Original_CIKK_ID, Original_MEGNEVEZES, Original_CIKK_TIPUS, Original_CIKKCSOPORT_ID, Original_ERTEKESITES_TIPUSA, Original_MEGYS_ID, Original_OTHER_FILTER_ID, Original_DEFAULT_RAKTAR, Original_SZJ_SZAM, Original_CIKKSZAM, Original_EAN_KOD, Original_MINIMUM_KESZLET, Original_OPTIMALIS_KESZLET, Original_ELADASI_AR, Original_HELYETTES_TERMEK, Original_MAX_KEDVEZMENY_SZ, Original_MAX_KEDVEZM_FT, Original_MEGJEGYZES, Original_AKTIV, Original_GYORSKOD, Original_SPEC_ZARAS, Original_RECEPT_MODSZER, Original_RECEPT_ALK_TART, Original_RECEPT_POHAR, Original_ELADASI_AR_NETTO, Original_AUTO_MEGRENDELO, Original_VIRTUAL, Original_CIKK_ROVID_NEV, Original_CIKK_TOP_LIST, Original_CIKKCSOP_PREFER, Original_CIKK_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PARTNERTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PARTNERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PARTNER";
            tableMapping.ColumnMappings.Add("P_TIPUS", "P_TIPUS");
            tableMapping.ColumnMappings.Add("P_NEV", "P_NEV");
            tableMapping.ColumnMappings.Add("P_NEV2", "P_NEV2");
            tableMapping.ColumnMappings.Add("P_NEV3", "P_NEV3");
            tableMapping.ColumnMappings.Add("AKTIV", "AKTIV");
            tableMapping.ColumnMappings.Add("KONTAKT_SZEMELY", "KONTAKT_SZEMELY");
            tableMapping.ColumnMappings.Add("ADOSZAM", "ADOSZAM");
            tableMapping.ColumnMappings.Add("KONTAKT_ELERHET", "KONTAKT_ELERHET");
            tableMapping.ColumnMappings.Add("IRSZ", "IRSZ");
            tableMapping.ColumnMappings.Add("VAROS", "VAROS");
            tableMapping.ColumnMappings.Add("CIM", "CIM");
            tableMapping.ColumnMappings.Add("CIM_TIPUS", "CIM_TIPUS");
            tableMapping.ColumnMappings.Add("PARTNER_ID", "PARTNER_ID");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=ERNIE-HOME\\SQL2K8;Initial Catalog=E_CAFE;Persist Security Info=True;U" +
                "ser ID=sa;Password=x";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        PARTNER.PARTNER_ID, PARTNER.P_TIPUS, PARTNER.P_NEV, PARTNER.P_NEV2, PARTNER.P_NEV3, PARTNER.AKTIV, 
                         PARTNER_SZALL.KONTAKT_SZEMELY, PARTNER_SZALL.ADOSZAM, PARTNER_SZALL.KONTAKT_ELERHET, PARTNER_CIM.IRSZ, PARTNER_CIM.VAROS, 
                         PARTNER_CIM.CIM, PARTNER_CIM.CIM_TIPUS
FROM            PARTNER LEFT OUTER JOIN
                         PARTNER_CIM ON PARTNER.PARTNER_ID = PARTNER_CIM.PARTNER_ID LEFT OUTER JOIN
                         PARTNER_SZALL ON PARTNER.PARTNER_ID = PARTNER_SZALL.PARTNER_ID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsMegrendeles.PARTNERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsMegrendeles.PARTNERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsMegrendeles.PARTNERDataTable dataTable = new dsMegrendeles.PARTNERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MEGYSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MEGYSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MEGYS";
            tableMapping.ColumnMappings.Add("MEGYS_MEGNEVEZES", "MEGYS_MEGNEVEZES");
            tableMapping.ColumnMappings.Add("MEGYS_ID", "MEGYS_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [MEGYS] ([MEGYS_MEGNEVEZES], [MEGYS_ID]) VALUES (@MEGYS_MEGNEVEZES, @" +
                "MEGYS_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEGYS_MEGNEVEZES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGYS_MEGNEVEZES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEGYS_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEGYS_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=ERNIE-HOME\\SQL2K8;Initial Catalog=E_CAFE;Persist Security Info=True;U" +
                "ser ID=sa;Password=x";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        MEGYS_MEGNEVEZES, MEGYS_ID\r\nFROM            MEGYS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsMegrendeles.MEGYSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsMegrendeles.MEGYSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsMegrendeles.MEGYSDataTable dataTable = new dsMegrendeles.MEGYSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsMegrendeles.MEGYSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsMegrendeles dataSet) {
            return this.Adapter.Update(dataSet, "MEGYS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MEGYS_MEGNEVEZES, string MEGYS_ID) {
            if ((MEGYS_MEGNEVEZES == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MEGYS_MEGNEVEZES));
            }
            if ((MEGYS_ID == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MEGYS_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
}

#pragma warning restore 1591