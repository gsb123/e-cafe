<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="partnerButton1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAKMAAAA2CAYAAACrxylwAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAFRJJREFUeF7tnQlU
        VeXax/+mImqGmFCZZaU564dpNnhKy+pi6u166y4URQHlIIiigIAyCzI4AiLOoJgD4jybqKCkaCIyiRMz
        Qjmlefu+bqs63/OcfF37HvYZQJS71t2s9axz2GcP57z7t//P8z7v1Eyj0UD5U0rgP6IEGMbHsdzcXJhi
        Fy9ehGJPrwwk97Q1vX+W7BmxrSH3wZR7LPa5cOEChOXk5EDY+fPnwfbdd989Mil7ekGkg3rTSRzJ1HRi
        rdHF9Br9QLWc5eXlqRVrujK4fv26b3Z2tldj3AN999gQF4Id5uihDSW2WgsoDcJIO9mT3aQDNXQirdHF
        ZI2+nEYY/ViNruXn52sUa9oyKC4u1pw4caLR7oPcfZZywO/leBEsMVdsxNhihlIvjPRhmNhZH4j6AJSD
        rqCgQKNY05YBw5iRkdGo90HuXkshFYzoQikD5ClirrkA8pGbpo09yH7Tp4hyCij9UlLoCgsLNYr9Z5TB
        5cuXNZmZmY1+P3RFRsqCANMQlBKF9JSDUauK+hSRQGVp1UpsfdTTkBuXk3xTtvE5uTAuXbqkmJEyuHLl
        iubUqVOPVU5FRUUaOZMKjhROAaYhKJmzhxzl14GRPkiRA/HcuXOa9PR0ijsyHhnLPhs/cU/bMuiaR+n7
        7N69W3P69OnHKuT/BpgbA0Z95SQFVA5MKZRyKvkQyH/JwbhJt7LCJzh69KjmVFbWg3nzQu0HDuje+qef
        fnqGrFUTWfMU989wIDbcNvPo4Yr169drFZLjIsXky+Dq1auarKysRikfQw+vLphCKQ0BKcSvDoz0wSZp
        wMkgsszu3btXs2xZnP/Nmzeb3bp1qz1Zxzt37lg2hfG1ySz5uxxfHma7ctUqrdRzXKSYfBlcu3ZN8+23
        3zZa+Ugfejk4BZRCKRlKXSClnDGQBmEUIDKM7A5nTHf/uKKi4rkffvjBkg5s25TGMNJ3aZ8eNalDfPwy
        bYzLrkgx+TKgPKM2nGms8pE+9IbAlEJpDMg6MBKtj5RRwMhE79q1S+M2dYqKLtzx119/fY4ObNfURk+k
        1fkVXu3j4uK0MLIrUky+DEpKSjRnzpxptPKRQi0HplQt5YCUVmqEQuqFUQqiFEZqwrH6/fff29OBTW7k
        mjte2RphyTDyD2JXpJh8GZSWlmqoBabe5cPQcC2cK69/VmBPaBX27Nmz2lf+7OTJk9rtLFgcLgml1AVS
        12XzuaXJcZNgZHnlC7mTMlLtmWHsQAc2uVFAbnUtLVILI/8odkWKyZdBWVmZFqD6ls/x48e1sZ5wsVzO
        nNrj7ZxBOXbsmNYOHTqkDeU4u8KCwGrJUMoBKXXX0tq1LIxSVRS1IS2MblNU+/btYxit6cAmtyNHjlhd
        SgnRwshPGbsixeTLoLy8XAtjfcvn4MGDmtraWq1VV1drGGoGmlWSyl9DPGgrt3v27NEaKyXvI1y3MSCl
        6mgSjCyvTD3DuG3bNmuC8SU6sMlt586dVhdW+lnGxcdrn152RYrJlwFV9jScK65v+bDi3bhxQ3ucFGSh
        ivv3738EJEPJMDL4HFPKAcnxI/Mk1LHBME51naxKSkqy/uOPPzoTjE1uKSkpVnnrAi1jSRkVGA0/iI8D
        Y1VVVR2IGTp2zwJGoZCcy2QYuSIpgDRVHWWVkWkVcQJTzDSzMroSjPHx8ayMXejAJrc1a9ZYF24IVWA0
        wSM0FEYGjt2urqJyzZwrLVIYGUiGka8lYJQDUp861oGR4sVNcjByzKh2mayKjIxkZexKBza5xcbGWues
        8rdcGhurlX0uNMXky6CyslJDmZB6lw/HmaJMpUCKSgzDKAWSE+sMI1diDKmjnKs2CUauETGMzpOdVXPm
        zGEYu9OBPZra+ME4uzxAgdGEh/BxYBR9EERKhwHlbQJEKZC8D19LwKgPSKGO7IFF3GgQRuGiBYxOzk6q
        6dOns5vuRQf2bmoLDw+3To/zsSSF1AbFHKsoJl8GHPexmtW3fDiHKGBkt8x2+PBhbWpH/C9e2aWz+xYw
        GlJHOVetF0Z2e1IYqeaqcXRyUjk7O7My9qMD+ze1BQQEWO9e5G65dKkCozHIGgoj15qleUZWMYaP039C
        1URrCjc8sDLytTj9I4VRN3Y0CUY68SbdygsroxZGR0fV2LFjGUYbAnFAU5uPjw/BOFWrjPzjOFZRTL4M
        OEfIrSP1LR+uNYvugUIhOb8oVUVWSTahjFIYDamjbtxYRxn1wcgxo6OTo8rLy+u5HTt2dLp3715fOnhQ
        U9iDBw/604/v7OfnZ5noM8Zi6dKlCoxGHsTHgVF4SaGEDKXo2Cy2sSoy7OymGUbOSeqqo26rDAuINN9o
        FEbRnKOFkZRx0KBBIGsZHBzccdKkSdYUh7xGYLLLfudJ2s8//zyAvnzXiIiIF4KCgjrSd2hl/0kPfPZB
        fwVGEzxCQ2Fkt8ugMXQibOMaM3dMEe5ZdA3jmFS46ScKI7tpgk/Vq1cvSKwZvTen2K3j0KFDrTdv3tyJ
        4O1G3bv6/vLLL6ya7zfEqFfQ2z/++GN/kvjuBw4c6Ozi4mLt6elpNWrUqGfpes0/GvwSbHq3wZtdmuG9
        wX0s2E3zQ8OBs2LyZcAwMkD1LR+GS1qb5s4W7KJFBYbdOMMptvN7OWXkWrWcMjLgQl0NKiPLqFBGhnEi
        wdilSxfosWa0vSVZG0r/WHp4eFjb2dlZk1t/gRLmnamn+Cv0RV+jXFVPXaMv1I0/T0hIeMnd3f0FriQF
        BgY+z+ciMyN7Ju3LQZgzZABatW6JjtYt0aObGWy6t8CH7/fVKqMCo+EHsaEwchJb6qb5PceQwk2LnDS/
        copHnzKKFI+0NUY3vVNPGCeqrKysUA9rRvs+Q2ZG1orMnKytjLV5+HmLh/s/uob3Z72x3mEYSvz/jiDb
        t2Fm3hydXmxNMD4Hm55tFRhN9AYNhZGVTlqBYSX85ptv/i3dw/twrPhEYWQJlSqjw6SJqnbt2uFpWqzT
        h4j9+1u4Hv4VPEYPRKu2zdGxYxu8+mpb2PRhGPtZLFmyRFFGI1A2FEZ2v6xgotMy145Z/VjhpB1sGViG
        kaHka+nGjI+tjFIYqQatcSA3bWZmhqdpO/xscSLiS5THjsfsL99H67Yt0L6DOV5+yRwD+rTBB+SmFRiN
        x8oNhZFbW0R/RR6Ux/EiKyN3LWPjBDj37KHYXgsjwysHo6E2apNixjowTnRQPe1Zqg6RIl6Id0DNMjWG
        9u4CmAOt2z2D5zu0Qt8322LokL4WixYtUlI7Tyi1w5UXho1hEurIrpqVkf8XvbpFd7H6wliv1I6oxLAy
        TnB4+jAejB6HikQXpLnZonun9mjeAmjZujmeb98G/Xs8h2EKjCYlshua2hEwMpBsQhH5ldVQKKJon2Ze
        uP+j6FFurEnQIIzca0euBWb79u2aiaSMnanyEGU/AHt9Pse38x1wfoELchapkbfEHafmT8R690+ROn00
        zi5yRnGYEyoWz0TVygCUrJqLkuRAXN0UgrLNYbi5dT5ub5yH79eHoHJjKK6sDUDhSn/krfRBTrwnTkc6
        42DgFzge7YDNM22ROK4/tnoMgcPIdzDB0Q4tWgLdurbHh6p+ijI+wTwj99jh+E90IxMdbEUPHhEbin1q
        amq07d/ShLe+zhJGW2CkXcikbdMMo8tkB1UHy+aYbtsdu70+RmbIV8ie74izMVNQkOiJU1GOSPMagUNz
        7HDS1wHpX3yKrNGjcHTcX7Fj3OfI8rBHTownchN8UL4uEDdT5qEmKQSXV8/BleRQ5K3ww3crvZEd546z
        kS5ID3HA0WgnOudIHJo1HGfCR+Nq9kaUlGbjo4+GwLw1MExlY7Fw4UKlo4SRTiINbZvmvCSrKqud6PHN
        asbb2Pi8wnhfhtRUVawXjHxR4abT0tI0blMcVK93aYMxA19AmscH2DtzFDID7HCOgCxc5oEzMZOxmSDd
        4z4Cu0eqsHJQTwTY9IVz367425svw/4VK3j2fROJYz7G2YUeuJEajZtfR+L62iAUsjKSel5I8EbOspnI
        ps+PzXPB4QgXnFrgjIygz5G5wR+lJRmounwUxw5+jY+GdMdM188tFixQYHxSHSXEeYVCcn6RKy0cK+p2
        uBWqKVTRmIuWwsjnNak/IwPJMKoJRps+z+ETm/ZIchyINNe/IH3W33B67ljkxrjgePh4rJo2FBspBbNi
        4OsYa9MZFlaWf9Z5WjTHK8+2hW2nF7Hsq0+RvdwXxZsicWNrDEqT5yF3FbnoZT4oiPdB9lJPZCx2x4kY
        V6RHu+Nw6FjsofOXXDuN2hv5KL+chesFR3BkfyzCAiZYxCxYoHSuNdKnsaH9GaWdlRkebvLj+JBr1VIY
        pSAa67HD6cJ692eUdiPTwkhuemCfdhjYsw0iv+yKbVPexQGPUTjh9QWy5zngSIgdVrt/jBUf9saEHlbo
        +FJ7vNDSDB+88iJChg/BHsd/4LTPZFyJn42izcG4sjUc5WkLcW1LJPKTgnFx2WyKF72RRep4In4mshZ7
        IDN6CpJnjkHumRN48MsD3L1/CzdqrqGi4jzy8g4iKERtER0To4yBMTL0oKHDDgRwrHIMIrfIiMoKt7pI
        B2rpumdjHWt1B2UZHR0o4sY/YZygGtynNfp3NYPTsE5IduqP7S4f44jnaGSE2uF4mD32+Noh5rPBsH3t
        RfiqbJBpPxLFsxxxM2ImKhbOQulyf5StDkJJUiDKqQJzidQxd3MkLqaE41yCH7JifXE6KQwn1oYgK84H
        O+Z8hZ2rY3D7p5/w87/+F3cf3MOd+9+j9odrKLx0BscyNiswPsExMAJGdqMi5yhg5LwjAygqMfoqLfra
        pOsNo1BHAeM7BONbb5pheL/nEe9gg41O7yJ12ic4OPevyAgbj6OhaiSoRyJuzPvIcrFF0Ww7ZPtNwMlg
        R+Qv80UlxYilyWEoWzsXxVRhObtiDs5vDsfJdXORSRWb9FgfnCC3nb4hDEfivLE6eDLyii/ivuZ3UsZ7
        uP/P+3jw823culOG0ooCFBSdtIiKjlaU8QkqI8eH3LLC8OkOwOLhr8JF6w41MHV0oJhVwqgyChhpvDQp
        43jVoL7msOllhv5vtMLMEW8g2XUwvnYbhl2zRuBYkB32hk3AnohJ2D17DPb7jqHWE0dkRboiP2E2KjeE
        o2ZjFErXheLqumCcT5yNMyv8kbk6BBmrQnAsMQDHlwciIzkcx0g114Q6YueWdSi9fRdld26juLoCl6qr
        UXHrBr6/VYq7P5ZTzTrHIioqShnEb2QCg4YO4hcD9nnkn5xxvpFhZAUVSXHRTCgUUa5zhMnjprn/mu6s
        EqmpqRoX5/Gqt/q1pma4lujVzRyfv9URK5xskDzlPaS6Dcc+79HYFzgGB6PHY3/4OJxcMBW5iV64RDHi
        1RUBqE6ZjwoCsXjlXBQlBSF7tS9OUi366OpQbF80C3vjfOl9MI5vjMCexDlYuTgYJy9eQEF5JfJLy3Ch
        tBSFN6qRX1WJorLLqL5VhqraKwqMJsyk0VAYGSjuNCuGGehOmc1hnFBGueGpuiDWexC/IRjf7tcGg3px
        U1wb9HujDfxGdMN2t/ewhSou22eMwC7vEUj1G4G9UeOQScnwc4unoogqJuWkfDVJoahYE4CrBGBOUgDO
        UML7GIGZttgLWxYTjCsCsXdlMPatDcS6hTOweUcqcsuqUVBRjsLKShRWVeFiRQXOl5Xicm0VKWUJ8kvy
        LWiUoDLXjpF5hho6145IZot+kLp5Rf5fd9C+nCJKa9ByqsjMybppAaNUHbds2aJxcbJXvUsx46Ce5nir
        uzl6vtYSn/XtgFUT+mH79OGUCB+FrRQ/bphGYIZ+hQMR43AqdDwuLfVG2VJ/VMT6oYQqMEUJpIhkRxMC
        cWSJH7ZFTUfqUl+kxfljJyloyhIfLF8ShMzzucirqsHFqnLklF5HEanihdJyFNVWoqCmBHkV11Fcfsli
        /vz5yixkRmZga+gsZNJZ3eSmG5SbGs/QLGTSmWyNzkImnblWCuOmTZs0Hm6TR77Tm2FshQHdWuF/qFbd
        u4s5pgx7FVvdPsCu6SOwzdMWSa4fIsXbFtv8RiPd/x+4vMgLpTHeuBo1G1dig5AbOwcHo2ZhR6Q30sI9
        kBLmipQoUsKFpJALZ2JhyDSs2bIJF2/cQ0F1LVk1CmtqCcIa5JaXo+BGJS5UXENRDalk8cWXw8LClPkZ
        jcxN2VjzM+pONmpsbkapIuqbY0fv/Iz6plGmIQWa6OjIZFbGtwlGG+5pTTD2eN0MgwnQKLu+SHUfjpQZ
        f8EqVxWSyW0nu32C1BmjcGreFOST+uXMm4Zv57ljf5AzNsyeiHVzXbEmxA2rAtX06oqtC2ZhbaA7YmPn
        I6ekCvk1t3D51l1cvnsfpf/8P5Tc/RHXb1NFpuZ7XCipxJUfbmFPxhFP6hWuzFxrZNbexpq5VneaalNn
        rdUFUVcV9U6jLJ1gXqgjt02vXr1G4+M9a63TpPFqJwd7tSPbJHv1xAn26qnOE9Sxs53Vy+eq1bH+Lup4
        Xxd1gq9aHefvql4zZ5p6S/BMMi/1huBZ6sS509UJAZ7qxFBfdcK8P21FhB/9P1sdE+yvTli9Rp2wZpV6
        wZJodUR0uDosar46fkWCetPO7epjZ8+qT+UVqjPO56p3HDy02NfP/zd201woynze+uc0b4w5veUm7ze2
        AoKA0NgUyrIwUs1JdrUDzr7TrF+akJAQDQ2O0syYMUNDs0toXxtifI7HMb42H89zM/IcMsoqB4ZXenic
        1Q5MXZpEbgkO3RhRVxHZRYu1YOpUYAjGtWJRIt1VD3SnVpYuQCOmyNVdtMbUH6Ls92QXVnpS68DUZw0Y
        fSA+hPFBHRhJAd2kK1/pA1KMChN5Jzkw9QGqb6UlZbv8ClSNUS4cwvC8OY1xLt1lNaRzdcut+yIglM7f
        LRRRqCJxlyEH47P0Qa0+IHXTProDuUXHXCmcohVHWUew6dYRbMy1A3XvrTQeNGWJNhkQfyPmVHVg5A38
        gVje19A6gmJycOl6MXJw6q6+KfdjlG1PdtVVDoMeZ1VVY0s0S9d6lHJhbJnfh2tR+gsQ+bXO4ue0kxVZ
        IsFYVN81p+XgNGVhSmWfumt1N2aZcB/ExjyfdC0XYwDqqiExVUt87SEbShXQf+OvDoxSUk15TxeD1OjL
        QbGmLwND966x7o/uvdf9n+JCCCMIwUYQao1BbHQYTQFW2Ufz2A/9f0MZ/j996solZE+vcAAAAABJRU5E
        rkJggg==
</value>
  </data>
</root>